%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UVic_hst_4c.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: kold
%%CreationDate: 2/19/09
%%BoundingBox: 0 0 155 55
%%HiResBoundingBox: 0 0 154.4937 54.0029
%%CropBox: 0 0 154.4937 54.0029
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 8954 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45272027F8272027F8272027F8272027F8272027F8272027F8272027%F8272027F8272027F8FD5CFFF87EFD06A87EA8A8A87EA8A8A87EA8A8A87E%A8A8A884A8A8A87EA8A8A87EA87D27A8FD5BFF27A8FD17FFA8FD09FF27A8%FD5BFFF8A8FF7D274BA8FD06FFA84B4B7DFD07FF4B4B52FD07FFA827A8FD%5BFF27A8A82069447DFD06FF27696952FD06FF4B45684BA8FD07FF27A8FD%5BFFF8A8FF76698D27A8FD05FF7D44B04B7DFD05FFA84B8D6852FD06FFA8%27A8FD08FF7D52A8FD04FFA87D7DFD0DFF7D272EFD24FF7D2053FD12FF27%A8FF7D6F6F4B26A8FFFFA8FFA875694B207DFD05FF768D4B2052FFFFA9FF%FFFF27A8FD08FFF82752FD04FF7DF827A8FD0CFF52F827A8FD23FF2727F8%FD05FFA8FD0CFFF8A8FF7D444B4B44204B4B27A8FF4B4B4A4B20274B4B52%FF4B6F4A4B20274B4B4BFFA8277EFD07FFA827F87DFD04FF7D27F8A8FD0C%FF532727FD24FF52F852FFFFA859277DFD0CFF27A8FF846F69936993444B%52FFFF76686F9393444B27FFFF7D696F8D936F4B26A8FFFF27A8FD08FF27%2752FD04FF7EF827A8FD39FFF8277DFD0CFFF8A8FFFF4B6F4A27446F204B%52FF7D6F444B446F444B27A87D4B444B206F444B277DA827A8FD07FFA827%F87DFD04FF7D27F8A8FFA8277DA85227527DFFFFFF7D5252FF7D5252FD04%FF52277DFFFF7D52272752FFFFFF7D527DA82752FFFF7D52272752FFFF7D%277DFFA82727F852527EA85227A8FFFFFF7D525227A8FFFFA8206FFD044B%274BA8FF276F6F4B4B4B26277DFF4B4B6F4B206F4B2752FF27A8FD08FF20%2753FD04FF7DF827A8FF52272727F827F8277DFFFF7DF827FF7DF8277DFF%FFA8F82759FF7D27F827F82727FFFF7DF8522727F8FF7D27F827F827A8FF%522727FF7D27F827F82752FFF82727FFFFFF272727F8A8FFFF5220449320%6F684B27A8A84B208D264B8C4B207DA84B20B04B278C6F207DA827A8FD07%FFA827F87DFD04FF7D27F8A8FF7DF827277D5227F827FFFF5227F8FFA827%F852FFFF5227F8FFA827F87DFFA8F8277DFF7D27F827277DA827F852A8A8%7DFFFF52F852FFFF7D27F8527DA8FF52F827A8FFA827F87D27A8FFFF7D27%6F457D526F4BFFFFA84B4B44767D4B27A8FFAF524B446F52754B7DFFFF27%A8FD08FF272759FD04FF7DF827A8FF7D27F8A8FFFF5227F8FFFF7DF827FF%FF522727FFFF52F853FF7DF852FFFFFF53F852FF7DF82753FFFFFF272752%FD05FF52272EFFFFFF27277DFFFFFFA827F87DFF7DF827FFF8A8FFFFFF52%4B4B27A82751FFFFFF7D275120A87D27A8FFFFA82652207D7D277DFFA827%A8FD07FFA827F87DFD04FF7D27F8A8FF7DF827A8FFFF7DF827A8FF5227F8%FFFFA8F827A8FFF8277DFFFD052752272727FF7D27F8A8FFFFFF52F82727%7DA8FFFF52F852FFFFA827F87DFD04FF272727FF282752FF27A8FFFFFFA8%FFA87DA8A852FFFFFFA8FFFF7D7DFF52FFFFFFA8CAFFA852FF52A8FFFF27%A8FD08FF272752FD04FF7DF827A8FF7D2720FFFFFF7D27F8A8FF7DF827A8%FFFF27F87D7D2727FFFF27F8272727F8272752FF7EF827A8FD04FF7DF827%F852FFFF522752FFFFFF27277DFD04FF7DF827A827F8A8FFF8FD22FF277E%FD08FF2EF852FD04FF522727FFFF7DF827A8FFFF7DF827A8FF5227F8FFFF%FF52272752F859FFFF272728FFA8FFA8FFA8FF7D27F8FD06FFA85227F87D%FF52F852FFFFA827F87DFD04FFA827F852F827A8FF27527D527D597D527D%597D537D597D527D597D527D7D7D527D597D527D597D537D7D7DF8A8FD08%FF5227F8A8FFFF7D27F852FFFF7D2727FFFFFF7D2720A8FF7DF827FFFFFF%A8F8272727A8FFFF7DF827A8FD06FF7EF827FD04FFA8FFFFFF272753FF52%2752FFFFFF272752FD05FF5227F82752FFFFF82827282728272827282728%2728272827282728272E27282728272827282728272827007DFD09FFF827%F8522727F827A8FFFF7DF827A8FFFF7DF827A8FF5227F8FD04FF27F82727%FFFFFFA827F8272E522727A8FF7D27F8FFFFFFA827277D5227F8A8FF52F8%52FFFFFF27F827277DFFFFFFA8F827F8A8FFFF27060D070D070D070D070D%070D07060506070D0606060D070D070D070D070D070D072F00A8FD09FFA8%2727F827F852A8FFFFFF7D2727FFFFFF7D27F8A9FF7DF827FD04FF7D27F8%7DFD04FFA852F827F827F8A8FF7DF827FD04FF2727F827F87DFFFF522728%FFFFFF7D27F82752FD04FF27F852FFFFFFF8532F5A2F5A2F5A535A2F5A28%000027F80500000527F8282F5A2F5A535A2F5A2F5A2F27A8FD0BFF7D7D52%A8A8FD05FF7DA8FD04FF7DA8A8FFA8A87DFD05FF7DA8A8FD06FFA8597D7D%A8FFFFA8A87DFD04FFA87D7D7DA8FFFFFFA87DA8FD04FF7D7D7DA8FFFFFF%A8F8277DFFFFFF2706300D2F0730062F072F002752A87D27F80052A87D7D%000506300D2F07300D2F070D00A8FD53FFA8272727FD04FFF82F2F542F54%29002727F8287D7E537D27F8277D7DA8A8A852050028002F2F542F542927%A8FD52FF7DF827F8A8FD04FF272F5A2F5A3028207D537D7DA87D7D7D52F8%52597E7DA8A8FFFFA8A85105542F5A302FF8A8FD52FF7D27277EFD05FFF8%2F072F0605265153A87DA8FD047D27F8277D53FD04A8FFFFFF4B51002F07%3007007EFD17FFA8FD3AFFA852A8FD06FF27535A5A5AF89F757DA8A87DA8%7D7D7D52F82E7DA884A8A8FFFFFFA876C1272E7E5A5A00A8FD14FF7D52F8%52A8FFFFFFA8A8FD07FFA8A8FFA8527DFD23FF7D52A8FD0AFFF82F0D2F07%05747552A87D84FD047D2800277D7DA87EA8FFFFFF844BC7F807072F0700%A8FD13FF7D27F827F8FFFFFF7D27F87DFD05FF52F827A852F827A8FD22FF%27F827FD0AFF27537E5A5A00514A7DA8A87DA87D7D7D52F8527DA87EA8A8%FFFFFF7D75C027537E5A5A00A8FD13FF52F852A8A8FD04FF272727FD05FF%272752FF522727FD0BFFA87D52FD15FF272727FD0AFFF82F2F302F05F84A%52AFA8A8FD047D5200277D7DA87EA8FFFFFF7D75C1F82F2F302827A8FD13%FFF82759FD06FF52F827A8FFFFFF7D27F8A8FFFF7DFD0CFF7DF827FD16FF%7DFD0BFF27285A545A27262052FD04A87D7E7E7D00527DFD04A8FFFFFF7D%9F7527545A545327FD0BFF7D7D527EFD04FF7D27F87D84FD05FF7D27F87D%FFFFFF59F827FFFFA8A8A8FD05FF7D7D59A8FFFF522727A87DFD04FF8452%7D7DFD04FFA87DFFFF7D7DFFA8A8A8FFFFFF7D7D527DA8FFFF27282F5A54%28F8F827A8A8A8FD047D5227277DA8A87EFD04FF7D7426005A535A2752FD%0AFF2727F827F8277DFF5227F827F82759FD05FF272752FFFFFF272752FF%FF52F827FFFFFF7DF827F827F8A8F827F827F827A8FF7D27F827F82727AF%FFFF52275252F827FF52F82EFFFF2827F827F82759FF7D05302F5A28F8F8%51A8A87DA87DA8597D27527D84A8A8A8FFFFFF524AF8282F5A2F2752FD09%FF2727F87D7D27F827A8A82727F85252A8FD05FF52F827FFFF7E27F8A8FF%FF522727FFFF7DF827277D5253FF7D2727275252FFA827F8527D7DF82727%FFFF7DF827F82752FF282752FFFF7D527D7D52F827A8A827537E5A53F8F8%26FD04A87D272700272727F82752FD04FF51F8F8287E5A5AF8A8FD08FF7D%27F87DFFFF7D27F859FFA8F8277DFD07FF7D27F8A8FF53F827A8FFFF52F8%27FFFF272727FD06FF7DF827FFFFFF53F827A8FFFF7DF8277DFF5227F852%A8FFFF52F852FFFFA8FFFFFF7D27F87DFF272E2F5A2800F827A9FFA852F8%2750752700519F512727A8FFFF2720F82E2F5A2827FD09FF7DF827FD04FF%272727FFA827F87DFD08FF272753FF272752FFFFFF522727FFA827F8A8FD%06FF522727FFFFFF272752FFFFFFA827F87DFF7DF827A8FFFFFF2E2752FF%FFFF7D522727F8277DFF7DF85A5A53F8F8F87D5127F84A74C19E9F74C19E%C77420F8527627F8002E7E5A2752FD09FF522727FD04FF52F827FFA8F827%7DFD08FF52F852A827F884FFFFFF52F827FF7DF8277DFD06FF7DF827FFFF%A927F852FD04FF272752FF522727FD04FF52F852FFFF5227F8272727F87D%FFFF272E5A2F00F800F800F8264A9F9FC1264BC1C79E9F4A20F800F800F8%535A53F8FD0AFF52F827FD04FF282727FFA827F87DFD08FF7D27277DF827%A8FFFFFF522727FF7D27F8A8FD06FF532727FFFFFF272752FD04FF27F87D%FF7DF852FD04FF522727FF7D27F87DFFFF27277DFFFF52002F54FD07F826%F826F827202751502020F8F8F800F8F82F5AF852FD0AFF5327F8A8FFFFA8%27F852FFA8F8277DFD08FFA8F827212752FD04FF52F827FFA8F82727FD06%FF7DF827FFFFFF52F827A8FFFF7DF8277DFF522727FD04FF52F852FF7DF8%27FFFFA827F87DFFFFFF27527E27F827F827F827F827F8279EC727050027%F800F827F805F87E5227FD0CFF272727A87D52F827A8FFA827F87EFD09FF%52F827F8A8FD04FF522727FFFF53F827277E7D7DFFFF7D27F8527DFFA827%F85284A8272727FFFF7DF852FD04FF522728FF7D27F87DA852F8277DFFFF%FFA8F82F2F532E5328532F532F53FD042728532F532E2F2853285328217D%FD0CFFA8F827F827F8277DFFFFA8F82759FD09FF5227F827A8FD04FF52F8%27FFFFA852F827F827F8A8FFFF2727F827A8FF5227F827F82727A8FFFF52%2727FD04FF52F852FFFF2727F827F827F87DFD04FF7DF87E7EA97E857EA9%7E857E85597E5AA97E857EA97E857EA97E2752FD0FFF5252527DA8FFFFFF%A87D52A8FD0AFF7D7D7DFD05FF7D7D7DFD04FF7E5252527DFFFFFFA85252%52FFFFFFA87D525253FD04FFA8527DFD04FF7D7D7DFFFFFF525252FF7D7D%7DFD05FF52F85A535A535A535A535A535A545A535A535A535A535A532727%FD67FF52007E7E857E857E857E857E857E857E857E857E857E2827FD69FF%52F8597E7E7E847E7E7E847E7E7E847E7E7E84592727FD6BFF59F8537E84%7E847E847E857E847E857E842E2752FD6DFF7DF82753847EA97E847EA97E%847E7E27F852FD70FF522727597E847E857E7E5352F852A8FD72FF7E52F8%27272E282E000027A8FD76FFA87D522752277DA8FDE9FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-04-18T09:56:59-07:00</xap:CreateDate>
         <xap:ModifyDate>2009-02-19T09:00:23-08:00</xap:ModifyDate>
         <xap:MetadataDate>2009-02-19T09:00:23-08:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>92</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAXAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AEflB+UP5Uax+VUHmzzbE&#xA;YnV7k3d491JBGqRSsq1CsF6D6cVZH5P/ACm/5xs84SXcWgRz3M1kR68Mk15BIEYkLIqTemzIafaA&#xA;wAg8mzJinA1IEHzZN/0K9+T3/Vsn/wCkuf8A5qwtbGPOH5Vf840eUGij15ZoLiYco7WKe8uJuFaG&#xA;Qxw+oyoP5mFPDAZAc2zHinP6QTXcn+nf843/AJIalYW+oWFnLc2V1GstvcR3k7I6OKqwPLuMLWrS&#xA;/wDOMn5MwxPNNp80cUal5JHvJ1VVUVLMS9AAMVYp5c/LX/nF/wAx62+i6O0tzqCqzxp695Gkyp9t&#xA;oJH4pKF/yCdt+mASBbJ4pxAMgQDy25st/wChXvye/wCrZP8A9Jc//NWFrYT+dP5Dflt5W/LPWde0&#xA;axmh1Kz+rehI9xNIo9W6iiaqsxB+Bzir6D0j/jk2X/GCL/iAxVF4q7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXzv+XHlXSvMf/OMLwX8Hqy2Y1G8sHXZ47mB5WjZT89iDsRs&#xA;cBFimePIYSEhzDyTyp571TyX5gtdb0GxVktIvq96jClvNDciOVozxbmu4UrJQhT12rmHhlwnfq9h&#xA;2vgGoxx4IcPABvtXqAlXfXnyfRNn/wA5PflhPbI8sl9BdfAk9p9SnkaKZwP3JdFKFuRp13zLEx3v&#xA;Jy0uUAkxNR2Pl73n/wDzkhoOh6brujeaINPaObWLa6n1GN1o/rWqQNExUmiScJGV+2wr0ynURsO6&#xA;9ntSIZJcQ4oiJlXmO5BflB+fg8nWh8uebLWWHQLf1JLG9VDJNbiaRpBFIIy4ljLMQrLuv2TtTJYs&#xA;gIpxu0uz5wnKXCYi7ruvly2I6X37GnsOm/mB+W/5oi+8pQQ3WoQS2/q30c1rPbpHGSODGSQRlWLf&#xA;Y477e2Wgg8nWZMU8ZqQMT5vlq01a98q6zbXmiW5k1TRrmSf6wUUgmF5Ld/VjVkZuYDBwn3Zhg8My&#xA;9dmj+Z0cIiB464yRXS48rs+dPobQv+cpfy9uNLhk1kXWnaqIg97aR201wif5aSRKwMbdVJ7ZlCce&#xA;95U6PKCRwnbf4d/u80R+emt2mu/8496vrFmksdpfR2U1uJ0MUhja/g4sUO45D4h7ZNxnqWkf8cmy&#xA;/wCMEX/EBiqLxV4B5t/PDzrpX58QeRrVbT9CSajploxeJjN6d4kDS/HzAr++anw4q9/xV8/6V+eP&#xA;nW6/Pd/I8q2n6FXUrmzBETCb04VkK/HzpX4B+zir6AxV2KuxV8/eS/OP57Xf52z6XrNpcp5bFxcx&#xA;3EDWoS1ht0VjC8dxwFd+FDzPKuKvoHFXYq7FXYq7FXYq7FXYqx38xb/zLp/kjWL3yzAbnXYLctYx&#xA;KnqsWqAxWP8AbZVqyrvUjoemKsE/5x18yfmfrekau3nmKfjBNENMubu3FtK/IOZloFj5KnwUNO5F&#xA;dtlWV6x+bnkfSvN9r5PnvHk8w3U8Nv8AUoonb02uArRmSQhYwCrg7MT7YqzLFXYq7FXk3/OMCq/5&#xA;OaarAMrT3YZTuCDO+xxV8y+ZLHTIvNmuaXod4qaZYy3MFjdxsslYYpfTSGVGHGRQWYI3cD3zCygA&#xA;/F6/sqc80BEy4JCH1DewDQjOJ2PP08kthk1q0nsdYEy2msQGGW0n9GaO5QzL6kMg3fmHRgY9+LDp&#xA;hjcZVu0amY1ODxZHGa23EhK/Or+F7dz3zz6dU1D8hoNb86SXMGv2t3DJpD6olvbzSNMRCUkgt1QI&#xA;jxPIWRiW25E5k5ADHd0egyyx5omNXdb8qOxvyrm8Dji1Aw2k1nMzxSRyGWzKG6SGJRzd+S8JPSCp&#xA;U1qOPXYZhiNkiuT1M9ScWPHPjqE7HDL1CPx+rhPd97OPyW1Dzzpvm1NH8tTXLWdw6PqFrpkMRiYE&#xA;bzTPdpJFbpQbMqmvauZOGVh0Ha2AY516L/o8X6dvls786bLRrT83NSstJuljjllNxcSRuoktruaE&#xA;z3K0Ao0bFVZw3Rm9srzgA27DsTJKYGPi4d5cMgfVH02ffHbe2ANb3rW4ku5IybRne1kmgkidhDIY&#xA;+cboWHFHX4uAoD9rbID0kEdXJyk5ozhOUJHFd8USJbbfw3t7vi9t1PV/PWq/841+ZrvzTJezqTYC&#xA;xub6KG39RPr0BJhRFErR7ikkrfF275mDk8lIUdn0ppH/ABybL/jBF/xAYWKLxV8f/mJ/61taf9tr&#xA;Qv8Ak3aYpfYGKHx75f8A/WtJf+23ff8AEJcVZ3/zkP8Am1588k+e9ItdE1L6to89lFcXVmILeQu4&#xA;uJVk+OWORl5Rqq7HFWLeZPNX/OT95ojeeh6uk+Xgn1mG3tfq6iO3bdZGhblMy03rJXbf7OKvW/8A&#xA;nHz82L/8wPLt4urqg1vSJI47qWJeCSxzBjFJxGysfTcMBttUdaYqwTyZ+bn5h6j/AM5EXHlC91b1&#xA;fLqanq1stj9XtlpFapcGFfVWIS/CYl35VNN8UobWfzf/ADJ8o/nmvl3XtYNx5XN+gETW1qn+hXf9&#xA;0xkSJJP3QkFSG3KnFD0z/nIP8xNT8keRBd6PcC21q+uY7aymKpIUArJK4SRXQ/AnHcftYqxnyv8A&#xA;mz5n8vfkk/nvzteHVdT1Gdl0S0McNuGB+CJD6EcexMbyMx/Y6YqxHRZP+cofPukN5t0zWItNsHLv&#xA;p9grJb+sqMRSFBHJyHJaAzPv40xVmn/OPv50a35tur7yv5qC/wCIdORpUuQixNMkbiOVZEWiiRGY&#xA;fZAqO22KvO/Mf/OQf5m+X/zI8y6Ql4NTtYLq7s9H0420ACSNNxt/ijjWZ/TXYDkeR69cVZ15J84/&#xA;mp5T8heb/Nf5jw3Ms1stvLpNvdemgZ5S0QQLFT01MrxhhTbwxVhHlTWf+clvzJtbrzFoWuQ2tnbz&#xA;tCtsrxW6eoEVzGkfByQAy7yHv164q9mn1b8w9E/JDUNV8wXKp5zsrC5nlnWOAhJUZvS+FA0DUQLX&#xA;ahxVin5C/mB+YfnXyV5quL/UBfa3a1i0iQw20ISV4GMeyRxof3lPtg4q8B1uP80x+ckcepSofzD+&#xA;tWfpygW3H6wYovqx+Bfq/wDd8O1PHvil9Dxv/wA5AWP5UeYr/XNREHmywk+t6dJHFYShrSFFaaMp&#xA;HG0e45kfDyrTtihb/wA41fm1r3nWy1fT/Ml4LzWLGRJ4JvTihLW0o4leMKRp+7detK/FirF/O/5t&#xA;/mTf/ngPJPk/V/qWn/WoLBgtvazUcKGupS00Urfu6tX/AFcVZp/zjJqGnwflDpsc1zFFIJ7slHdV&#xA;O87dicVRvmz8oPy+81a1daxquszC5ljSK0itriCGG2ERLI0aqlWbmzMebMCT06ZGUAebfh1M8f0m&#xA;twflySm9/JvSJ/LegWEvmG1udW8t3Vv+j9VCx20jadFOsn1SbjJLz9NQTGw40IFANyTw8vJgMshd&#xA;fxc3qGuPpGq6Vc2H6ThtmuEZFuo3haSIsKepH6nJQ6g/CSDQ4Wt5hY/kV5M0PVtJ1fyt5jaw1DTH&#xA;BlN48V5Dcx8GiZJYla3C8onZPgKj2qMiIAORk1U5gxJ22+wUPsZF5E8i+W/Jvm3zJqel6jBHpOtp&#xA;aG105ZUC27wtO0qqtacKygp/LUr0phEaap5TIAH+HYN+ePy28h+ddTgu9c1Im2to3jSwtp4YInaU&#xA;j1JJWUGR2IVQPiFBt3NUxtOPLKF8PUUxqb8k/Lx8j6n5WfzHFfR+vJe+Xbq4ES3NlcSLR1aVGpLH&#xA;L+2OC1qe9KDgFUyOonxmd+o8/Pv+fVE/ntLY2/5A6npqXcM09vb6dDRJFYsYru3UkAH/ACck0h6t&#xA;o5rpNkR0+rxf8QGKovFXx5+c8w0D/nJe31u/BSyS80jUeVOsFusKORSv7VuwxS+wEngeATpIrQMo&#xA;kWUEFChFQwbpSm9cUPj78uZYvMf/ADlDJqemt6li2paherONwYFSXg/yclafPFUd/wA5i/8AKc6L&#xA;/wBswf8AURLiofS3nmCGP8v/ADBbogEKaTeRrH1HEWzgDf2xV89/84Z/8dbzR/xgtP8AicuKlI/y&#xA;7/8AWtrv/tta7/ybu8Usv/5zC8n+rZaP5ut46vbsdOv2HX03rJAT7K3Mf7IYoYB+YHm2/wDzW1b8&#xA;vvL1mxa4ayhhumrUC9uJPSuXP+SqwK/tv9KrP/8AnLTSP0Z5I8o2Nghj0jT5mtFQdFKQKsA2FPsR&#xA;viqU+QPy2/OzW/J2laj5e8/rbaRNAotrRLm6X0AnwmEqiFQUI4kDFWW/lP8AkB5x8pfmEPNetaxa&#xA;X/NLj6z6JlaWSS4BqzGSNf2jyO+KvPPK9pDdf85cTRTCqLrGozAbfbhhnlQ716MgxV9UeavLWmeZ&#xA;/L19oOqKzWOoRmKbgaMNwyup3+JWAYe4xV8q+Zfyu/Nv8nEufMXlnWml0OJ1NxPbNxIUuFjN1aSc&#xA;o33YDbnT2xV6fafmNdef/wDnHLzPrF7CkOo21reWV8IgRG0scSuHQEmgZJVJFetcVSf/AJw2/wCU&#xA;c8x/8xkP/Jo4qw/zqyr/AM5eW5YhR+lNIFTtubW2AH0nFL63ZVdSrAMrCjKdwQexxQ+OdIuU/Jn8&#xA;/r2K45R6IfXSgNOdlcp6tuK9+EgQH3U4qyH/AJxV0C617zrr3nvURzkhMixyHobu9YyTMPdUqP8A&#xA;Z4q8i8q+X9KvtHS4udSsYJWkkBinjumcBXIFTFbyL0/ys3uj02OWMEwJPv8A2uo1efJHIQJgD3fs&#xA;TY+UdAAqdY0wD/jFe/8AZLmT+Tw/6mfn/wAecf8ANZf9UHy/46tm8reW4Y2lm1vS4413Z2ivQB99&#xA;rglpcERZx7e//jyY6jMTQmPl/wAdSu38t6nqMUt1pen2n6KjBZdX1CeHTbWRAwTnE179X5ryIXbv&#xA;tmuy5tOPpx/af1ufjxZ/4p/ID9SR2GoW2oSpZ2mnxNqDuU4O8UcCgdZHnfiioPFiB75I5NPw3wer&#xA;uso8LPxVx+n3BPLryzrWmRJc6tpVsNOKiSTUdPng1KCKMnj6kpsjccEqKVOQxZtOfqx/In9bLJhz&#xA;/wAM/mAmcHljy1cRLLBrelyRturLFekf9QubKOlwSFjHt7/+POvlqM0TRmL93/HV48o6AemsaYf+&#xA;eV72/wCjXD+Tw/6mfn/x5H5rL/qg+X/HUr8z+XdJstEnubbU7GeZGiCxQR3SyNylRTxMlvGnQ92G&#xA;Y+s0uOOIkQIPf+C5Gl1GSWQAzBHu/Y+9NERY9GsEQUVbaFVHgAgAzQu3RuKvNvzl/JXSvzGsreUX&#xA;H6P1yxUraX3HmrRsamKVagla7gg1U/MjFXj6f847fn0LH/Dw80wLoA+H6uL+8+rcD+z6PpdP8mlK&#xA;/fir1/8AJv8AJPSfy5tJ5zP+kNdvVCXV/wAeCrGCG9GJakheQqSTVjTwAxVjn56/kV5i/MPzFYan&#xA;pl/Z2kNpZi2dLky8i3qu9RwRxSj4q9c8yaZNqvl3VdMhZUmv7Oe2jd68VaaJkBalTQFsVeXfkN+S&#xA;uv8A5c3usT6pfWt2uoxwxxC19SqmJnJ5c0T+fFUv8r/kJ5k0j87JvP0+oWcmmy3+o3gtUMvr8L5J&#xA;1Rd0CVX1hy+LFXqX5geUrfzd5N1Xy9MVU38DLBI24Sdfjhc7HZZFUmnbFXk35L/845ap5I83/wCI&#xA;dbvrS9NvBJHYx23qErLLRWdvUROkfJdvHFXrnnbyZovnLy5daDrEZa1uACkiGkkUq7pLGezKfv6H&#xA;bFXz7b/845/nT5Ymmh8neboodOnk+IJcXNmzeDyQosiVA8GJxV6h+T35efmJ5XvNUvvOHmT9OTah&#xA;HEixerPcCMxFiCsk/Cg+MjiExVIdA/IrzFpv54S/mDLf2b6Y95e3ItEMvr8bqGWNBugSoMor8WKv&#xA;RfzM8r615o8mX2iaNqI0u/ujEY7tg+wjlWQryQhl5cKchXFXhmofkX/zkNrlt+hNd83wXOi1UymS&#xA;7uZlcKQRVTEryFTvRz1HXpir1TT/AMnrbRPyi1LyHo9yHudQt51lv7gFVe5nUK0jKvLioCgACuw7&#xA;4qhfyH/KjWfy60rVbPVLu2u3v545o2tfUooRCpDc1TxxVi353f8AOO+s+bvM/wDiryxfQW+ozJGt&#xA;7bXLPHyeBQkcsUsav8XBVFCB0rXFXoH5OeVvPHlvytPZec9WOsarNdvcR3DXM92Y4GiiVYvUnCt8&#xA;LoxoNt8VeEf85d33lu981aNa6fILjzDawyQ6kkXxcY2ZWt42p/uzkznj1ofcYq96/JjyOfJn5e6Z&#xA;pEycdQkU3epeP1mejMp/1F4p/scVfKH5f2d3J5ahePTbC4UyzUlnlCSH943UGeP/AIjnQ6GQ8Ibn&#xA;8fB1OriTkOwP496zV7O98wLrmkw6fZ6euh2sl7eTxEu8rxRetDDHWWRSrMVLnw+eajtrtcYTHGOI&#xA;mcgPtc7s7QcdzIiOGJL1s/kj5DtANe/R80liretbm7eA28Sck4M015ez2nBuR+3Cxp+wGFDVLLI8&#xA;y2xhEcgi9TWLTkWrpZq1tcRpKZ7fTpZhAXm5LdX0F5qlyoH7SRJF+0q02yAZPE/y9NrD+aesXSSQ&#xA;qi1kgvTcafIEMsiHl9faP6vETypzhtmkJ+FEUkkWHkh9LabN+lLYQSzjUJFt0Ywi7OpstZFf1G52&#xA;9hqactqPECo68fhyspRmpf8AOOH5SX2qHURpUljJI3K4hsbme2hlP+VHG6gf7Djk4Zpx5EhjLHGX&#xA;MW+Z7Cxu9Ch0gmwsrzTfMx+sadLO5jNu8g9RomZ5Yh6fEh1Y+JFcn2R2zHLknhPFcJNfaHZ5hCOQ&#xA;CPqCp58sp4/Kt47WWlRKGgrJa3cMsw/0iP7KLcyk+/wnbN1rZDwpby+Xn7nXaUHxBtH4f2vtbSP+&#xA;OTZf8YIv+IDOddwi8VdirsVdirFPNv5q/l75RuBa+YNbhs7sgN9VAkmmCnoWihWR1B7VGKpz5d8y&#xA;aJ5k0mHV9EulvNNuCwhuFVlDFGKNs4VtmBHTFUX+kLD1vQ+sxetXj6XNeXLw41rXFVfFVCe/sbdw&#xA;k9xFC5FQsjqpp0rQnFUv1Tzh5U0m/ttO1PV7OyvryhtbaeeOOSQE0BVWINCdh4nFU3xV2KuxV2Ku&#xA;xV2KuxV2KqV3d2tnbS3V3NHb20Kl5p5WCRoo3LMzEAAeJxVI57/RvOflLU4fL+rQ3UV7bz2iXtlM&#xA;G9KWSMqDyjNVZeQOKvJvyj/5xji8t6vD5h82XcWpapbN6tnZwcmt45RuJXeQK0jqenwgA779lXvW&#xA;KvijyBoLvok1v+g72/lsrue2nnt2fh6ivyK0WJ6EBh3ze6HLWMDiAdZqYXO+EljuuX1x5b886lbN&#xA;ZTaZHqlpGPSua8qmMxbl1SquCyn4f1E5z/b2AZJiV2Rv+Pk7Ts2fDEiqt9J+W2tZfIWg6iFW1naw&#xA;tpRdN+ibdkllt1lkrcsJpo/ij+JhCZPaoqLLtihdQkktroR20zWNxqNxcNyS4lsHl+sooWSkMV3q&#xA;lydtpWMK9woAUBV4v5U9Rfzc1HUVneWZ4Yw12L15JGkdhEVW5+qpqCs3CnCO3FwRtULyfLCUPpHR&#xA;xPcT21pMzPIk1qRa3Et1cuCkZ5S/V9WWC6SnUSRSs1fiI+0DWlmXmy9Nj5W1m9AqbWxuZgNzUxws&#xA;3bftiEvk/wAz2Qk1H8vdBitJb57Gxme4srct6gCWsccf2VkpuCenbNN7K76nLkugZc/9M5/bW2GE&#xA;eZr9SW/mJo0sHlp0GgXtnLdT28EE07Pw5mVWC/FFGCSFPfO31uW8RHED+Pe87psdTB4SH2lZ2/1e&#xA;0gt+XL0Y1j5UpXioFab+GaB2ariqE1TV9K0mza91S9gsLNDR7i5kSGME9AXcqMVSDSfzV/LfVr0W&#xA;On+ZLCe8ZuEcAnVWdvCPkV5n/Vriqd63r+i6FYNf6xfQafaKeImuZUhUuQSEVpCoLEKaDFXxV+V1&#xA;l5T88/mNqOp/mNqsFrYyJLfTm6ultBcXDyKFhEjMhChXJorVooA2xS+yvJvl7QPL3lmx0ny9/wAc&#xA;aFWksiJDMGSd2n5LIS3IMZCQa9MUPlX/AJyP0i58ofnDaeZ9PHp/X/Q1S3ZdgLq2cLIPnyjVz/rY&#xA;q+udH1S11bSbLVLU8rW/giuYDsapMgdens2KvkDX4z+aP/OSLWKD1NNW+Fq3dfqWnj98an/fnpuR&#xA;7tir0j86fyk8neY/zCt9T1HztYaDPNFAl5pl3NCk/ppVVa3DyIRzAoKrSu+/TFX0CqhVCitAKCpJ&#xA;O3iTucVYrqn5r/lrpd4bK+8y6fDdA8Xi9dHKN4PwLcD/AK1MVU/NP5meVtJ8nXnmC01jTbg/VLqb&#xA;SVa6i9O7uLeIuIYyHq7FuKlV33xV51+Sn5/DzKNbuPO+r6Vo5ikgGm20ksVovFhIZOHrSc36LXc0&#xA;xV7hJdW0ds11JKiWyp6jTswCBAK8ix2pTeuKsUX84Pyta9+pDzTpvr9K/WI/TrWn97X0/wDhsVZb&#xA;HJHLGskbB43AZHUgqykVBBHUHFUptfOXlC8urq0tNc0+4u7JHkvbeK6heSFImCyNKisWQIxAYt0O&#xA;KsX84X3kf8xfy98w6ZZ+ZbWHTgqRXmrJIhht3R0mQyMzIpQlAD8VCO+KpN/zj15F0Hyno2qppfma&#xA;z8yy3k8bXUunyRyQw+mrCNPgeT4mDEmtPwrirM9c/M78vdCna31XzDYWtyhpJbGdGlU/5UaFnXr3&#xA;GKpnoPmjy55htmudD1O21KBCBI9rKkvAnoHCklSadDir5c816BYeXfze8zaTfetDa6q41jTDCisG&#xA;FwSZhRmQDi5Kin8ubTs7KRcR73D1WMGiXkn5xWlhB5hs5rR5WjktQD6qKp5pI9fssw6EZHtGBMgf&#xA;JlpCANn05+UdyB+Tmh6zPctZWiWbRS3889jZ26pb87bj9ZWF7pN1IrXkD0PbNc5LDNW/Nu2k1N9O&#xA;8oWU2ryvJC81ystzYWcksScalICNRvQ56yXMpDcRtTrj5tVjxC5H8fc248MpmgGF6fqHmaz8/uf0&#xA;DqLa/dWaxxWTXkvotCHJMjagzC8W2ANGjMvMmil+PwZX/KeDwvE4hwD7+6mf5PJx8Fep6hpH5yy+&#xA;XNTtbbz9pL6RaPOsn1+xuX1GyV61Hq21ybiWADly5wEGp6HHS9oYc/0H57Lm0s8f1B6Z+afmjR7v&#xA;8l/NOr6VeQ6hYT6Xcwx3Fs6yxt68Zi2ZDSv7z6My6aHx35D1NfMXnu4v9Ukm4x2snFo1DsPjVVry&#xA;YDox75kdi6bwtotevycYsvSdD0DTvMf5q+VdBsTLPBZz/pbVBMqqFitt0B4M+zkFfpGZ3aOU0Ilx&#xA;tLjAsh9d5qXNdir4784XesfnB+ew8rNdvBo1peT2dqi/Zit7Tl68yqdvUl9IkE+IHQYqyr86f+cc&#xA;fKXl/wAjXHmDywZ7e60kJJdRTSmVZ4iwRm3+y68uW21K7Yqivyskg/Nn8nL7y75ruLieXy3cLJFc&#xA;xuFleNYXNuJHZX5cfjX5Ab4q8u/5x+/LXy75+8y6jpuuNcJb2tkbmI2zrG3P1UTcsr7Uc4pfa+la&#xA;db6ZpdnptsWNvYwR20Jc1bhEgReRAG9FxQ8d/wCcsPKZ1b8vItaiTlc6BcLKxHX6vcUilH/B+m3y&#xA;GKpV+VH5nfUP+ccNS1J5B9e8sRz2URY785CDZ19uU6oP9XFUk/5w98pmS41vzfcqWK006zdhWrNS&#xA;a4ap7gemK+5xVjP/ADlB/wCTmsf+YOz/AOT0mKvQ/wDnLD8xdV0TStP8r6VO1tJrCSS6jNGSr/Vk&#xA;IRYlYdBIxbl7CnQnFUH+XP8Azit5TuvKtjqPmie6n1PUIEuDBbyCKKBZVDIg+FizgH4iTSvbvirI&#xA;/wAxPyP8m2v5RS2CPdmLyjY6nf6Y/qIGeZ0e4/fkJ8fxKBtTbFXj/wDzjz+T/lP8wbPW5tde6R9P&#xA;kt0g+qyLGKSrIW5ckev2BilOv+cnPNWsX/m3TPy50uV0sLaO2WSAMR691cUEXqUG6ohWnuSfDFDN&#xA;NT/5xL8lr5PktrGa6bzLFAXi1BpPgluFWvFoT8Cxs22248TirG/+cRfPupyX9/5LvZ2msUtze6Yr&#xA;kn0WSRVljTwV/UDU6Ag+OKvNH8rar5i/O/zB5S0e5NmNV1fUbSeQklRaw3Lzycv5uIg5UruQBil7&#xA;rr35T6V+XP5JedLKwvZ776/brLNJOEWjIVX4QgFAfeuKEr/5w2/5RzzH/wAxkP8AyaOKpb5q8mf8&#xA;4w+VtW1GLzDqdzfatNcSyyWNtJI5t/UdnEIFuoVOAIWkj1xV57+Vmt6foX566cvlC6nl8v394tlG&#xA;LkcHktbmgKSqOpjZtj3Kg4q9/wD+chvJWpX+j2fnHy+rf4i8rlp1EdQ81mw/fx7bniKn5cqbnJ45&#xA;8MgUSFinzJ+bst35gsvL+s2d2dRS4inV1jEjvCVMZ9OT4RQhmYfQc2GoIkAYhx8VxsEvPxD5oFul&#xA;uPrXoxEmKPjLRKkk8fh+GpNTTMGeG/4XIE/NmXlHzb5p8sRGa10OSUopaWaWCU/Cd2cyrEJAPZnZ&#xA;fbNVq+xTn52B+Ph8ebl4Nf4fKmY2vnXzzPar51OsaNVE9M+XDcxKjWx+NmLF+STchspNabHwOklo&#xA;NOD4HBk/r8J+r5cnYjU5T+94o/1b6frSzzZ+ZOt+ZtKQ2+jTfVpkYok1m06UYFW9GcKVY77cotgO&#xA;td8z9H7PTwyvc+Y2+z9rjajtMZBWw/H46PLRZ6+izRwx3UMM20kKpMFYA1AYBd6e+dDDCQNw6wzH&#xA;ez78n3n0Ntc1e+vTpcVtbIOUqXCtJycn004xtViUAAPfM3T1GyRs0Zt6AL6Z/wCcdvJ2qQ6be+e/&#xA;MIf9O+ZuLQJISWhsE/uV3/35QN/qhffMHLPikS3RjQp7HlbJ2KvjO+uLn8p/+ciJtW1SCR9Na9uL&#xA;lXC1Mllf8xzToGaMSb0/aUjFXpP56/nx5Dv/AMvbzRPLuoLqt/rKpF+6V1WGLkru8nNV3IXiF61N&#xA;T0xVE/8AOM/k+/0X8sNY1e+jaF9d5zW0bAgm2hiZY3IP87M5HtQ4qWB/84df8pzrX/bMP/URFipf&#xA;W2Kpd5k0S117y/qWi3X+8+o20ttIetBKhXkPda1GKvz9l1bWdC0nXfJsw9Nbi+h+voSfhk08zIUA&#xA;93k3/wBUYpfcH5O+Uh5U/LjRdKaP07swC5vh3+sXH7yQN/qcuHyGKHzh/wA5Qf8Ak5rH/mDs/wDk&#xA;9JirLP8AnMLyjqEw0bzVbRNLaWyPY37qCfS5PzhZqdFYs4r40HfFWTflp/zkp+XkvlGwtfMV6dI1&#xA;bT7eO3uI3ilkjl9JAnqRNEsmzAV4mhB2364qznXPMGl+c/yh1/U/L0hurTUdK1KG0YqyMzrFLDTg&#xA;wDD417jFXzv/AM4zfmp5O8lLr1r5mu2sI7428trcCKWZWaL1FdCIUkYH4wRtTrilE/8AOT+iat5f&#xA;/NDTvOcMZe0uxbSwTEVRbqyIBib/AGKK3vv4Yoes6p/zk1+W0fk6TWLG/wDV1Z4CbbRyj+uLgigS&#xA;TbiFVvtNWlOldsVeaf8AOIXlHUpvMGqebriNhYRW7WNvM1f3s8ro8hU/tcFT4v8AWxVL/wArXR/+&#xA;cq9WdGDI2p62VYGoIJnIIIxV77+en/ko/M//ADBn/ia4q8Y/5xsuNStvyp/MG40vl+k4YZZLHgKv&#xA;662chi4jx5gUxVhn/OPt5+U0WratefmE0El0FjbTf0ghmt25FjOzKQ6tJXjTkPGmKVO38weW9Z/5&#xA;yR0vVfL8CWeiT6xYR2USRrClIxFByWNQAvqOpYCld998VfbJAIodweoxQ+b/AMxvImo/lrrV15o8&#xA;u2IvfJepP6msacIklawlPWeJWBpEfuHQ/s5k6fPwHfk15MfF70Zplw+qWMN/Y/oue1nUPHIGshse&#xA;xBYFSO4IqO+bMTiRYMvtcQxI7vsRX1TUf99aZ/wdj/zXkuIf0vtRR8vsS5/KVg8/1h9H0Fp/9+mP&#xA;TS//AAVa5Dhh3H5FlxSTAWWoAACHSwBsAGsaU/4LJXH+l9rGj5fYoahLJp1lNe3v6KgtYFLyys9l&#xA;QAewapPgBucTOI5mX2pET5fYln5f+SdR/NLW7fXtcslsvIelyepp9p6SQtqM6nZ3AAJhH9g3LcdZ&#xA;qM/GaHJyseOve+lVUKAqgBQKADoBmK2uxV2KpL5q8leVfNdktl5h02HUbdCWjEgIdCRQlJEKulf8&#xA;lhirE9F/5x5/KLSL5b2DQknnQ8oxdyzXEakb/wB3K7Rn/ZKcVehyQxSQtAygxOpRk6DiRSm3tirG&#xA;vKn5Y+RPKV7Ne+XdJj0+6nj9GaVHlctHyDcaSO46qMVZRirsVYVqP5L/AJYalrM2s32gQz6lcS/W&#xA;Jp2eb4pa15FQ4Tr7YqzXFWK+Y/ys8geZdWTV9c0iO91KNEjS4aSZSFjJZRRHVdiT2xVkt1a2t3bS&#xA;W13ClxbTKUmglUOjqeqsrAgg++KvN7z/AJxt/Jy6u/rLaF6RJq8UNzcxxt/sFkov+xpirO/LvlvQ&#xA;/LekxaTolotlp0BYxW6FiAXPJjVizGpPc4qwrVP+cePyi1PVH1G50JVmlYyTRwTzwxOzGpPpxuqr&#xA;v/LTFWc6roWj6vpj6XqlnFfafIoV7edfUUgdD8VTUdj1xV5/H/zjZ+Tcd79aGhFt6i3a5uWiB/1T&#xA;Jv8AImmKvR7DT7HT7OGysLeO1s4F4QW8KhI0UdlVaAYqxzSfys8gaR5ibzHp2kR2+tO8sjXiyTFi&#xA;09fVPFnK/FyPbFU91rRtM1vS7nStUgFzp92np3EDFlDrWtCVKt27HFUu8p+RfKflG3uLfy5p6afD&#xA;dOJLhEeR+TKKA/vGftirF9U/5x6/KLUtVbU7nQVWeRjJNHDNPDC7E1qYo3VR/sQMVTX/AJU/+Wg1&#xA;Sx1SPQLeK+0wwmxliMkQiNu3OIqiMqVVt6kbnrirMcVWyRxyxtHIoeNwVdGAKspFCCD1BxV4f5v/&#xA;ACE1HSdTm8wflrJFA0x9S98r3RK2dw3f0WBX0mPYVA/ygNstx5pQ5MZQB5sQj/MjRtPu/wBG+btA&#xA;l8s6suzQ3guPRan7UcoNCvuaD3zOhqQeZpolironQ83+RTF6wutN9IivP65tT5+rl3GP533NfD5J&#xA;NL+Zfl27vBpvlfRZfMurPtHbWHrsg93lJ4hf8pa5TPUgdbZxxX0ZT5V/IfWPMF/Drv5ltEsMTCSz&#xA;8p2bsbaMjobl+Teo3sGPzpVcwsmeU+bfGAHJ7pDDDBDHBBGsUMShIokAVVVRRVVRsAB0GUs1+Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpR5n/AMJfo1v8&#xA;U/UP0ZX4v0n6PoV9/X+DFXkh/wChSPre/wCg/V5/5Xp1r/yL4/hh3V6x5U/wb+jf+dT/AEf+jaj/&#xA;AI5fo+jWm1fQ+GtMCp1irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVf/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:519789CFBF0EDD118297B750AF45A23F</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:DE73EE2D33FFDD11BD14A90688069EBA</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:53CAFFD0060EDD11A078E0D3F82240A3</stRef:instanceID>
            <stRef:documentID>uuid:52CAFFD0060EDD11A078E0D3F82240A3</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4.000000</stDim:w>
            <stDim:h>4.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>True</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>80% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>80.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>60% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>60.000004</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>40% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>39.999996</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>20% Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>19.999998</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Red M=100 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Red M=75 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Red M=50 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Red M=25 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Green C=80 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Green C=60 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>60.000004</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Green C=40 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Green C=20 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999998</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Blue C=100 M=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Blue C=75 M=37.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Blue C=50 M=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Blue C=25 M=12.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Orange M=50 Y=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Orange M=37.5 Y=75</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Orange M=25 Y=50</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Orange M=12.5 Y=25</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Violet C=50 M=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Violet C=37.5 M=67.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>67.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Violet C=25 M=45 </xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>45.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Violet C=12.5 M=22.5</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>22.500002</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Azure C=80</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>80.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Azure C=60</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>60.000004</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Azure C=40</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Azure C=20</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>19.999998</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>75% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>50% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>25% Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -54.0029 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 54.0029 li
154.494 54.0029 li
154.494 0 li
cp
clp
[1 0 0 1 0 0 ]ct
57.2061 6.62256 mo
57.2061 15.6606 li
57.2061 18.6899 58.4629 20.1011 60.3828 20.1011 cv
62.4219 20.1011 63.6484 18.7036 63.6484 15.6606 cv
63.6484 6.62256 li
66.4814 6.62256 li
66.4814 15.478 li
66.4814 20.2524 64.0244 22.3774 60.2803 22.3774 cv
56.7041 22.3774 54.373 20.3706 54.373 15.4937 cv
54.373 6.62256 li
57.2061 6.62256 li
cp
true sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 nzopmsc
f
69.5811 14.2573 mo
69.5811 12.9644 69.54 11.897 69.4883 10.9272 cv
71.9629 10.9272 li
72.1025 12.6089 li
72.168 12.6089 li
72.6631 11.7397 73.876 10.6743 75.7363 10.6743 cv
77.6885 10.6743 79.7163 11.9321 79.7163 15.4741 cv
79.7163 22.1245 li
76.8828 22.1245 li
76.8828 15.8071 li
76.8828 14.2007 76.293 12.9761 74.7471 12.9761 cv
73.6191 12.9761 72.8398 13.772 72.5439 14.6372 cv
72.457 14.8696 72.4141 15.2134 72.4141 15.5356 cv
72.4141 22.1245 li
69.5811 22.1245 li
69.5811 14.2573 li
cp
f
84.1187 9.19678 mo
83.1304 9.19678 82.478 8.47998 82.4819 7.58154 cv
82.478 6.67627 83.1519 5.97314 84.1519 5.97314 cv
85.1616 5.97314 85.8062 6.66943 85.8159 7.58154 cv
85.8198 8.47998 85.1694 9.19678 84.1401 9.19678 cv
84.1187 9.19678 li
cp
82.7319 22.1245 mo
82.7319 10.9272 li
85.5659 10.9272 li
85.5659 22.1245 li
82.7319 22.1245 li
cp
f
90.4058 10.9272 mo
92.2202 16.6138 li
92.5386 17.5991 92.7749 18.5005 92.9839 19.4116 cv
93.0522 19.4116 li
93.2612 18.4849 93.5112 17.606 93.814 16.6138 cv
95.5874 10.9272 li
98.562 10.9272 li
94.2886 22.1245 li
91.4995 22.1245 li
87.3413 10.9272 li
90.4058 10.9272 li
cp
f
109.439 17.3091 mo
109.494 17.0474 109.539 16.6265 109.539 16.1001 cv
109.539 13.647 108.355 10.6538 104.714 10.6538 cv
101.113 10.6538 99.2397 13.5786 99.2397 16.6685 cv
99.2397 20.1001 101.369 22.3462 105.003 22.3462 cv
106.628 22.3462 107.958 22.0415 108.917 21.6353 cv
108.498 19.686 li
107.642 20.0005 106.71 20.2046 105.408 20.2046 cv
103.595 20.2046 102.025 19.3179 101.949 17.2886 cv
109.439 17.3091 li
cp
101.945 15.3149 mo
102.07 14.1694 102.796 12.5864 104.539 12.5864 cv
106.435 12.5864 106.886 14.2788 106.875 15.3149 cv
101.945 15.3149 li
cp
f
111.839 14.5278 mo
111.839 13.0278 111.808 11.9253 111.748 10.9272 cv
114.199 10.9272 li
114.304 13.0552 li
114.384 13.0552 li
114.935 11.478 116.242 10.6743 117.449 10.6743 cv
117.726 10.6743 117.888 10.6851 118.113 10.7358 cv
118.113 13.4028 li
117.849 13.3521 117.601 13.3218 117.261 13.3218 cv
115.912 13.3218 114.976 14.1812 114.722 15.4644 cv
114.675 15.7144 114.65 16.0132 114.65 16.3179 cv
114.65 22.1245 li
111.816 22.1245 li
111.839 14.5278 li
cp
f
119.873 19.521 mo
120.498 19.9077 121.714 20.3374 122.728 20.3374 cv
123.974 20.3374 124.531 19.8149 124.531 19.0806 cv
124.531 18.3228 124.07 17.938 122.693 17.4487 cv
120.501 16.6978 119.587 15.5054 119.597 14.1782 cv
119.597 12.2095 121.234 10.6743 123.847 10.6743 cv
125.08 10.6743 126.16 10.9829 126.816 11.3433 cv
126.255 13.3306 li
125.785 13.064 124.878 12.687 123.886 12.687 cv
122.88 12.687 122.318 13.1841 122.318 13.8726 cv
122.318 14.5835 122.859 14.9243 124.273 15.4409 cv
126.312 16.1616 127.251 17.2007 127.261 18.8511 cv
127.261 20.8931 125.671 22.3667 122.714 22.3667 cv
121.359 22.3667 120.126 22.0415 119.302 21.5815 cv
119.873 19.521 li
cp
f
130.99 9.19678 mo
130.003 9.19678 129.351 8.47998 129.355 7.58154 cv
129.351 6.67627 130.025 5.97314 131.025 5.97314 cv
132.035 5.97314 132.679 6.66943 132.689 7.58154 cv
132.693 8.47998 132.042 9.19678 131.013 9.19678 cv
130.99 9.19678 li
cp
129.605 22.1245 mo
129.605 10.9272 li
132.439 10.9272 li
132.439 22.1245 li
129.605 22.1245 li
cp
f
139.191 8.05029 mo
139.191 10.9272 li
141.884 10.9272 li
141.884 13.0366 li
139.191 13.0366 li
139.191 17.978 li
139.191 19.3481 139.556 20.0444 140.638 20.0444 cv
141.152 20.0444 141.417 20.0093 141.738 19.9214 cv
141.796 22.0757 li
141.371 22.2349 140.628 22.3667 139.736 22.3667 cv
138.695 22.3667 137.828 22.0122 137.302 21.4438 cv
136.693 20.8003 136.416 19.77 136.416 18.3032 cv
136.416 13.0366 li
134.818 13.0366 li
134.818 10.9272 li
136.416 10.9272 li
136.416 8.84229 li
139.191 8.05029 li
cp
f
146.412 10.9272 mo
148.429 16.9302 li
148.654 17.6235 148.896 18.479 149.06 19.1011 cv
149.126 19.1011 li
149.302 18.4722 149.511 17.6294 149.72 16.9067 cv
151.474 10.9272 li
154.494 10.9272 li
151.689 18.5688 li
150.152 22.7485 149.113 24.605 147.794 25.7671 cv
146.681 26.7378 145.529 27.106 144.826 27.1987 cv
144.187 24.8149 li
144.66 24.6968 145.253 24.4419 145.822 24.0425 cv
146.361 23.689 146.986 23.0278 147.376 22.2573 cv
147.488 22.064 147.554 21.8989 147.554 21.7603 cv
147.554 21.6372 147.523 21.4722 147.406 21.2085 cv
143.291 10.9272 li
146.412 10.9272 li
cp
f
59.2021 44.7158 mo
62.042 44.7158 64.9316 42.8701 64.9316 38.7549 cv
64.9316 35.3604 62.7012 33.0127 59.3691 33.0127 cv
55.9951 33.0127 53.5762 35.2744 53.5762 38.9482 cv
53.5762 42.5361 56.0205 44.7158 59.1787 44.7158 cv
59.2021 44.7158 li
cp
59.2236 42.6592 mo
57.5391 42.6592 56.4629 41.0303 56.4629 38.876 cv
56.4629 37.0088 57.2783 35.0693 59.2656 35.0693 cv
61.2197 35.0693 61.998 37.0791 61.998 38.8389 cv
61.998 41.0928 60.8701 42.6592 59.2471 42.6592 cv
59.2236 42.6592 li
cp
f
67.5781 44.4639 mo
67.5781 35.376 li
66.0605 35.376 li
66.0605 33.2666 li
67.5781 33.2666 li
67.5781 32.79 li
67.5781 31.3389 67.9678 29.8799 68.9375 28.96 cv
69.7666 28.1729 70.8848 27.8794 71.8682 27.8794 cv
72.6201 27.8794 73.2236 28.0054 73.665 28.1572 cv
73.4678 30.333 li
73.1602 30.2217 72.7861 30.1318 72.2607 30.1318 cv
70.8594 30.1318 70.3916 31.3096 70.3916 32.6807 cv
70.3916 33.2666 li
72.8398 33.2666 li
72.8398 35.376 li
70.4111 35.376 li
70.4111 44.4639 li
67.5781 44.4639 li
cp
f
83.1636 44.4639 mo
78.1436 28.96 li
81.2339 28.96 li
83.3491 36.0107 li
83.9468 37.9639 84.4644 39.7803 84.8647 41.6553 cv
84.9155 41.6553 li
85.3276 39.8252 85.8882 37.9346 86.4917 36.0518 cv
88.7534 28.96 li
91.7671 28.96 li
86.4077 44.4639 li
83.1636 44.4639 li
cp
f
94.8667 31.5361 mo
93.8784 31.5361 93.2261 30.8174 93.23 29.9209 cv
93.2261 29.0146 93.8999 28.3115 94.8999 28.3115 cv
95.9116 28.3115 96.5562 29.0068 96.5659 29.9209 cv
96.5679 30.8174 95.9175 31.5361 94.8901 31.5361 cv
94.8667 31.5361 li
cp
93.48 44.4639 mo
93.48 33.2666 li
96.314 33.2666 li
96.314 44.4639 li
93.48 44.4639 li
cp
f
107.583 44.126 mo
106.996 44.4033 105.828 44.7041 104.421 44.7041 cv
100.912 44.7041 98.6499 42.4521 98.6499 38.9775 cv
98.6499 35.624 100.941 33.0186 104.878 33.0186 cv
105.925 33.0186 106.966 33.2471 107.613 33.5303 cv
107.111 35.6592 li
106.656 35.4365 105.976 35.2217 104.968 35.2217 cv
102.81 35.2217 101.531 36.7998 101.541 38.8525 cv
101.541 41.1494 103.048 42.4658 104.978 42.4658 cv
105.949 42.4658 106.648 42.2549 107.203 42.0244 cv
107.583 44.126 li
cp
f
113.275 30.3877 mo
113.275 33.2666 li
115.968 33.2666 li
115.968 35.376 li
113.275 35.376 li
113.275 40.3154 li
113.275 41.6865 113.64 42.3838 114.722 42.3838 cv
115.236 42.3838 115.501 42.3467 115.822 42.2588 cv
115.88 44.4131 li
115.455 44.5732 114.712 44.7041 113.82 44.7041 cv
112.779 44.7041 111.912 44.3506 111.386 43.7822 cv
110.777 43.1396 110.5 42.1084 110.5 40.6416 cv
110.5 35.376 li
108.902 35.376 li
108.902 33.2666 li
110.5 33.2666 li
110.5 31.1807 li
113.275 30.3877 li
cp
f
122.89 44.7158 mo
125.732 44.7158 128.621 42.8701 128.621 38.7549 cv
128.621 35.3604 126.39 33.0127 123.058 33.0127 cv
119.683 33.0127 117.265 35.2744 117.265 38.9482 cv
117.265 42.5361 119.708 44.7158 122.869 44.7158 cv
122.89 44.7158 li
cp
122.914 42.6592 mo
121.228 42.6592 120.152 41.0303 120.152 38.876 cv
120.152 37.0088 120.966 35.0693 122.955 35.0693 cv
124.908 35.0693 125.687 37.0791 125.687 38.8389 cv
125.687 41.0928 124.56 42.6592 122.935 42.6592 cv
122.914 42.6592 li
cp
f
130.976 36.8662 mo
130.976 35.3662 130.945 34.2627 130.884 33.2666 cv
133.335 33.2666 li
133.441 35.3936 li
133.521 35.3936 li
134.072 33.8174 135.378 33.0127 136.585 33.0127 cv
136.861 33.0127 137.023 33.0244 137.25 33.0752 cv
137.25 35.7412 li
136.986 35.6904 136.738 35.6611 136.396 35.6611 cv
135.048 35.6611 134.113 36.5186 133.859 37.8018 cv
133.812 38.0518 133.787 38.3525 133.787 38.6553 cv
133.787 44.4639 li
130.953 44.4639 li
130.976 36.8662 li
cp
f
140.548 31.5361 mo
139.56 31.5361 138.908 30.8174 138.912 29.9209 cv
138.908 29.0146 139.582 28.3115 140.582 28.3115 cv
141.591 28.3115 142.236 29.0068 142.246 29.9209 cv
142.25 30.8174 141.599 31.5361 140.57 31.5361 cv
140.548 31.5361 li
cp
139.162 44.4639 mo
139.162 33.2666 li
141.996 33.2666 li
141.996 44.4639 li
139.162 44.4639 li
cp
f
153.728 37.7334 mo
153.728 35.2764 152.703 33.0127 149.111 33.0127 cv
147.347 33.0127 145.898 33.4932 145.052 34.0068 cv
145.613 35.8447 li
146.376 35.3623 147.527 35.0088 148.623 35.0088 cv
150.605 35.001 150.898 36.2256 150.898 36.96 cv
150.898 37.1455 li
146.773 37.1299 144.255 38.5596 144.255 41.3857 cv
144.255 43.0928 145.513 44.7158 147.785 44.7158 cv
149.236 44.7158 150.406 44.0986 151.085 43.2158 cv
151.154 43.2158 li
151.347 44.4639 li
153.902 44.4639 li
153.779 43.7725 153.728 42.7842 153.728 41.7666 cv
153.728 37.7334 li
cp
150.972 40.5264 mo
150.972 40.7236 150.955 40.9463 150.894 41.1416 cv
150.623 41.9619 149.808 42.6924 148.677 42.6924 cv
147.783 42.6924 147.064 42.1748 147.064 41.0791 cv
147.064 39.374 148.974 38.9521 150.972 38.9795 cv
150.972 40.5264 li
cp
f
21.9023 53.3604 mo
14.6973 53.3604 0.917969 43.6357 0.917969 28.3896 cv
0.917969 28.3896 0.917969 24.7739 0.917969 20.1006 cv
42.7822 20.1006 li
42.7822 24.7739 42.7822 28.3896 42.7822 28.3896 cv
42.7822 43.6357 29.0723 53.3604 21.9023 53.3604 cv
cp
false sop
level3{
gsave
clp
[-1.45386e-06 33.2603 -33.2603 -1.45386e-06 21.8501 20.1006 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s-Witr0IBoq3D!kp65OfoTB1bnW3_\mZ.>Xl\tlSk_fENjba$Jj+m[Fi._4@h1Yh<g4KA7f7<o2e:7N.
dXD0*c[5^$b^'6taa!jp`chCk_fYqf_/oYc^2a2]]5R`X\8M?T[;>mOZ>0FJY\=(FX_7\AWb)5<Vdoc7
UgjB3Tj[p.T3hR*S6c1%R9T^uQ<F7pP?7ekOB2DgN`?&cMc0T]Lf+3YKhqaTJkc:OJ5$"LI7jPFH:\)A
G=MW<F@H68EC9d3DaFF/CdA%*Bg2S%Aj$+u@ls_q?oe8l?8qoh>;cHb=>^'^<AOUY;DA.T:G;bP9eHDL
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.45386e-06 33.2603 -33.2603 -1.45386e-06 21.8501 20.1006 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~s8Mupr;6?dq=s^Xp@\+No^hYDnaQ#9md9B-lg!a!ki_*jjlGL_j5T%Vi8<GKh;$f?g=b03f@JO'eC2mp
daHOicd0n]bfn8QaiVWE`l?!9_o'@._83q%^V7Co]Xtbc\[],W[^EKLZa-j@Yct=7Y-"e,X/`.uW2HMi
V50o^U7n9RTV%jJSXc4>R[KS2Q^3r&Pa%ApOcb`dO,f6[N/W[PM2@%DLPCM9KS+l-JUi9#IsufnI!^0b
H$FOWG'.nKF)l8?E,]`6DJa3+CMITuBP1siARo=]@UW\Q?XI,G?!LW=>$>'2='&F&<)cdo;,L.c:/4MX
~>
<~R$a8-Q^3r'QBd`"P`q;oP*(lgOH5H`O,f6[NJrgSMi*CLMM[1GLkgb?L4t>8KnP,3K7\]+JUi9$J:E&t
IXZ]nI!g9fH?sj^H$OXZGB\4RF`heJFEDSFEcQ/>E,]`6Df9N2D/F**CMR["Bk_6oBP;$kAnGUcA7T1[
@q0"X@UW\Q?sd8I?=$rD?!LW=>?Y35=]ed-='&I(<`N.!<)Z^n;GpCi;,C(b:JOYZ9he>U9M8#N8kDTF
84Z6@7Rfj:77BU46UO1,5s[e&5X7Ou5!D+m4?P_g4$,Ja3B9&Y2`EWQ2)R6K1c.!E1,:R=0JG170/"q1
~>
0 <~%LrsY%LrsY%LrsY%LrsY%LrsY%LijV%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[:K$47+I$47+I$47+I$47+I$47+I$47(G#mgnE#mgnE
#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\A#RC\A#RC\@#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89
"pP89"pP89"pP89"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
42.0752 18.8398 mo
42.0752 1.42285 li
1.47656 1.42285 li
1.47656 18.8398 li
42.0752 18.8398 li
cp
0 0 0 0 cmyk
f
26.4043 8.86475 mo
25.6484 9.63916 25.043 9.8125 24.8672 9.85156 cv
24.2773 9.50977 23.8467 9.20068 23.6982 9.07129 cv
23.623 9.00684 23.5547 8.9458 23.4854 8.88428 cv
23.916 8.94824 25.3799 9.13135 26.4043 8.86475 cv
cp
0 0.91 0.76 0 cmyk
f
0.144 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
26.4043 8.86475 mo
25.6484 9.63916 25.043 9.8125 24.8672 9.85156 cv
24.2773 9.50977 23.8467 9.20068 23.6982 9.07129 cv
23.623 9.00684 23.5547 8.9458 23.4854 8.88428 cv
23.916 8.94824 25.3799 9.13135 26.4043 8.86475 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
18.3047 14.0811 mo
18.5254 13.688 18.9141 13.0415 18.9043 12.2993 cv
19.1309 12.4639 19.3447 12.5737 19.5176 12.6299 cv
19.5703 13.0864 19.5664 13.5029 19.5254 13.8789 cv
19.3203 13.9805 18.9629 14.0742 18.3047 14.0811 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
18.3047 14.0811 mo
18.5254 13.688 18.9141 13.0415 18.9043 12.2993 cv
19.1309 12.4639 19.3447 12.5737 19.5176 12.6299 cv
19.5703 13.0864 19.5664 13.5029 19.5254 13.8789 cv
19.3203 13.9805 18.9629 14.0742 18.3047 14.0811 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
25.0137 13.3291 mo
25.3535 13.8774 26.1582 14.3008 25.9883 16.1436 cv
25.1348 14.6743 22.7949 12.5552 22.1387 12.4346 cv
21.7754 13.4292 22.4883 15.7856 22.6826 16.1592 cv
21.9268 15.7856 21.4639 15.4453 21.166 13.9766 cv
20.8496 14.7002 20.7148 15.6245 19.2383 16.1138 cv
19.6738 15.3154 20.3008 14.668 20.2402 12.2339 cv
19.4219 11.7544 17.7451 11.9399 17.5215 7.40771 cv
17.4746 6.26221 16.999 5.94385 16.1445 5.36816 cv
16.1445 5.36816 16.793 4.90576 17.2852 4.51807 cv
17.9023 4.03369 19.8506 3.74268 19.9473 6.75439 cv
21.4277 7.60254 21.4355 7.88037 22.5566 8.96289 cv
23.6289 9.99707 26.0674 11.3345 27.2344 11.3667 cv
26.2598 11.7153 25.0137 11.7358 24.3789 11.7358 cv
24.7207 11.4365 24.8848 11.2681 24.9893 10.9639 cv
24.3555 11.3867 23.0664 11.9844 21.5547 11.2383 cv
22.1777 11.269 22.8184 11.3179 23.4551 10.5918 cv
22.7246 10.8154 20.8594 11.394 19.4863 9.76758 cv
18.2451 8.30322 19.8867 8.08545 20.7031 8.67432 cv
21.5469 9.27979 21.8965 9.7334 22.0586 10.3223 cv
22.3008 9.42676 21.0195 7.32861 19.3877 7.67676 cv
17.7568 8.02588 19.248 10.7383 20.3369 11.2627 cv
20.7529 11.4614 21.7754 12.3818 25.0859 12.3574 cv
25.6191 12.6221 26.1904 12.9194 27.4736 13.0317 cv
26.8398 13.7026 25.2813 13.6035 25.0137 13.3291 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
25.0137 13.3291 mo
25.3535 13.8774 26.1582 14.3008 25.9883 16.1436 cv
25.1348 14.6743 22.7949 12.5552 22.1387 12.4346 cv
21.7754 13.4292 22.4883 15.7856 22.6826 16.1592 cv
21.9268 15.7856 21.4639 15.4453 21.166 13.9766 cv
20.8496 14.7002 20.7148 15.6245 19.2383 16.1138 cv
19.6738 15.3154 20.3008 14.668 20.2402 12.2339 cv
19.4219 11.7544 17.7451 11.9399 17.5215 7.40771 cv
17.4746 6.26221 16.999 5.94385 16.1445 5.36816 cv
16.1445 5.36816 16.793 4.90576 17.2852 4.51807 cv
17.9023 4.03369 19.8506 3.74268 19.9473 6.75439 cv
21.4277 7.60254 21.4355 7.88037 22.5566 8.96289 cv
23.6289 9.99707 26.0674 11.3345 27.2344 11.3667 cv
26.2598 11.7153 25.0137 11.7358 24.3789 11.7358 cv
24.7207 11.4365 24.8848 11.2681 24.9893 10.9639 cv
24.3555 11.3867 23.0664 11.9844 21.5547 11.2383 cv
22.1777 11.269 22.8184 11.3179 23.4551 10.5918 cv
22.7246 10.8154 20.8594 11.394 19.4863 9.76758 cv
18.2451 8.30322 19.8867 8.08545 20.7031 8.67432 cv
21.5469 9.27979 21.8965 9.7334 22.0586 10.3223 cv
22.3008 9.42676 21.0195 7.32861 19.3877 7.67676 cv
17.7568 8.02588 19.248 10.7383 20.3369 11.2627 cv
20.7529 11.4614 21.7754 12.3818 25.0859 12.3574 cv
25.6191 12.6221 26.1904 12.9194 27.4736 13.0317 cv
26.8398 13.7026 25.2813 13.6035 25.0137 13.3291 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
17.4688 4.99902 mo
17.5918 5.08203 17.8984 5.25146 18.209 5.20264 cv
17.9668 5.38281 17.4814 5.24512 17.2754 5.12939 cv
17.252 5.14795 17.2295 5.16455 17.2051 5.18457 cv
17.1172 5.24561 17.0322 5.25439 17.0098 5.27295 cv
16.9756 5.30273 16.9902 5.34912 16.9902 5.34912 cv
17.1211 5.30273 17.4395 5.50537 17.4395 5.50537 cv
17.9102 5.77734 18.2852 5.53125 18.4326 5.46143 cv
18.582 5.39307 18.6621 5.34619 18.834 5.23779 cv
18.3975 4.66504 17.876 4.75879 17.4688 4.99902 cv
cp
0 0 0 1 nzopmsc
f
25.0176 13.3232 mo
25.3594 13.8711 26.1631 14.2949 25.9932 16.1377 cv
25.1406 14.668 22.7988 12.5488 22.1445 12.4277 cv
21.7793 13.4233 22.4922 15.7783 22.6855 16.1523 cv
21.9326 15.7783 21.4688 15.439 21.1709 13.9702 cv
20.8535 14.6934 20.7207 15.6187 19.2422 16.1079 cv
19.6797 15.3091 20.3057 14.6631 20.2441 12.228 cv
19.4268 11.7485 17.749 11.9346 17.5273 7.40186 cv
17.4795 6.25586 17.0039 5.93799 16.1484 5.36279 cv
16.1484 5.36279 16.7979 4.89941 17.2891 4.51221 cv
17.9063 4.02783 19.8545 3.73584 19.9531 6.74951 cv
21.4336 7.59717 21.4414 7.87451 22.5605 8.95703 cv
23.6348 9.9917 26.0723 11.3291 27.2402 11.3613 cv
26.2656 11.708 25.0176 11.7295 24.3848 11.7295 cv
24.7266 11.4312 24.8896 11.2607 24.9941 10.9575 cv
24.3613 11.3809 23.0713 11.9785 21.5605 11.2329 cv
22.1816 11.2627 22.8242 11.3105 23.459 10.5854 cv
22.7305 10.8091 20.8672 11.3882 19.4893 9.76172 cv
18.252 8.29688 19.8896 8.07959 20.707 8.66748 cv
21.5527 9.27393 21.9014 9.72803 22.0635 10.3169 cv
22.3066 9.42041 21.0244 7.32178 19.3926 7.66992 cv
17.7617 8.02002 19.252 10.7329 20.3418 11.2563 cv
20.7559 11.4556 21.7793 12.3765 25.0938 12.3521 cv
25.625 12.6162 26.1953 12.9126 27.4785 13.0249 cv
26.8457 13.6968 25.2871 13.5967 25.0176 13.3232 cv
cp
18.3105 14.0747 mo
18.5313 13.6821 18.918 13.0356 18.9102 12.2935 cv
19.1357 12.457 19.3496 12.5664 19.5215 12.623 cv
19.5742 13.0806 19.5713 13.4966 19.5313 13.8735 cv
19.3242 13.9736 18.9668 14.0688 18.3105 14.0747 cv
cp
26.4072 8.85889 mo
25.6523 9.63232 25.0488 9.80664 24.8721 9.84521 cv
24.2832 9.50342 23.8516 9.19434 23.7031 9.06543 cv
23.6289 9.00146 23.5586 8.93896 23.4922 8.87793 cv
23.9199 8.94238 25.3848 9.12598 26.4072 8.85889 cv
cp
28.8594 12.3994 mo
27.5273 12.7754 26.2617 12.1777 26.2422 12.1616 cv
27.5439 11.8735 28.1904 11.6777 28.832 11.0698 cv
27.7344 11.1201 26.5459 10.6987 25.582 10.2251 cv
25.8857 10.0493 27.0137 9.33154 27.3818 8.17969 cv
26.873 8.37354 23.5371 8.59277 22.8359 8.21826 cv
22.2539 7.57617 21.9375 7.10547 20.5654 6.33301 cv
19.958 2.52393 17.501 3.55811 16.791 4.36621 cv
16.3623 4.85303 15.3896 5.28955 15.3896 5.28955 cv
16.9258 6.09814 16.9404 6.771 17.0293 7.49561 cv
16.9268 9.48486 17.5488 10.8438 18.2441 11.6675 cv
18.4404 12.1846 18.5742 13.2085 17.5273 14.4644 cv
18.3662 14.5815 19.0811 14.4829 19.4414 14.4102 cv
19.2363 15.3247 18.8018 15.9775 18.4414 16.4487 cv
19.002 16.5854 20.5693 16.2197 21.0996 15.6606 cv
21.6816 16.0625 22.6572 16.9331 23.9961 16.8389 cv
22.5586 15.6968 22.6572 13.9453 22.7656 13.4868 cv
23.8477 14.2949 25.5537 15.9883 26.3086 17.5547 cv
26.6758 15.7632 26.5771 15.3652 26.459 14.248 cv
27.502 13.7705 28.209 13.3481 28.8594 12.3994 cv
cp
f
38.7129 8.86475 mo
37.958 9.63916 37.3535 9.8125 37.1758 9.85156 cv
36.5879 9.50977 36.1582 9.20068 36.0078 9.07129 cv
35.9336 9.00684 35.8643 8.9458 35.7959 8.88428 cv
36.2266 8.94824 37.6904 9.13135 38.7129 8.86475 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
38.7129 8.86475 mo
37.958 9.63916 37.3535 9.8125 37.1758 9.85156 cv
36.5879 9.50977 36.1582 9.20068 36.0078 9.07129 cv
35.9336 9.00684 35.8643 8.9458 35.7959 8.88428 cv
36.2266 8.94824 37.6904 9.13135 38.7129 8.86475 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
30.6152 14.0811 mo
30.8359 13.688 31.2227 13.0415 31.2129 12.2993 cv
31.4395 12.4639 31.6543 12.5737 31.8262 12.6299 cv
31.8789 13.0864 31.877 13.5029 31.8359 13.8789 cv
31.6299 13.9805 31.2734 14.0742 30.6152 14.0811 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
30.6152 14.0811 mo
30.8359 13.688 31.2227 13.0415 31.2129 12.2993 cv
31.4395 12.4639 31.6543 12.5737 31.8262 12.6299 cv
31.8789 13.0864 31.877 13.5029 31.8359 13.8789 cv
31.6299 13.9805 31.2734 14.0742 30.6152 14.0811 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
37.3242 13.3291 mo
37.6641 13.8774 38.4688 14.3008 38.2988 16.1436 cv
37.4453 14.6743 35.1045 12.5552 34.4502 12.4346 cv
34.084 13.4292 34.7969 15.7856 34.9941 16.1592 cv
34.2363 15.7856 33.7744 15.4453 33.4756 13.9766 cv
33.1582 14.7002 33.0244 15.6245 31.5479 16.1138 cv
31.9844 15.3154 32.6094 14.668 32.5488 12.2339 cv
31.7305 11.7544 30.0547 11.9399 29.832 7.40771 cv
29.7832 6.26221 29.3086 5.94385 28.4531 5.36816 cv
28.4531 5.36816 29.1035 4.90576 29.5938 4.51807 cv
30.2129 4.03369 32.1602 3.74268 32.2578 6.75439 cv
33.7373 7.60254 33.7451 7.88037 34.8672 8.96289 cv
35.9395 9.99707 38.377 11.3345 39.5439 11.3667 cv
38.5723 11.7153 37.3242 11.7358 36.6895 11.7358 cv
37.0313 11.4365 37.1943 11.2681 37.2969 10.9639 cv
36.666 11.3867 35.376 11.9844 33.8652 11.2383 cv
34.4863 11.269 35.1279 11.3179 35.7646 10.5918 cv
35.0332 10.8154 33.1699 11.394 31.7949 9.76758 cv
30.5557 8.30322 32.1953 8.08545 33.0127 8.67432 cv
33.8574 9.27979 34.207 9.7334 34.3672 10.3223 cv
34.6113 9.42676 33.3291 7.32861 31.6973 7.67676 cv
30.0664 8.02588 31.5586 10.7383 32.6475 11.2627 cv
33.0625 11.4614 34.084 12.3818 37.3965 12.3574 cv
37.9297 12.6221 38.5 12.9194 39.7832 13.0317 cv
39.1504 13.7026 37.5918 13.6035 37.3242 13.3291 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
37.3242 13.3291 mo
37.6641 13.8774 38.4688 14.3008 38.2988 16.1436 cv
37.4453 14.6743 35.1045 12.5552 34.4502 12.4346 cv
34.084 13.4292 34.7969 15.7856 34.9941 16.1592 cv
34.2363 15.7856 33.7744 15.4453 33.4756 13.9766 cv
33.1582 14.7002 33.0244 15.6245 31.5479 16.1138 cv
31.9844 15.3154 32.6094 14.668 32.5488 12.2339 cv
31.7305 11.7544 30.0547 11.9399 29.832 7.40771 cv
29.7832 6.26221 29.3086 5.94385 28.4531 5.36816 cv
28.4531 5.36816 29.1035 4.90576 29.5938 4.51807 cv
30.2129 4.03369 32.1602 3.74268 32.2578 6.75439 cv
33.7373 7.60254 33.7451 7.88037 34.8672 8.96289 cv
35.9395 9.99707 38.377 11.3345 39.5439 11.3667 cv
38.5723 11.7153 37.3242 11.7358 36.6895 11.7358 cv
37.0313 11.4365 37.1943 11.2681 37.2969 10.9639 cv
36.666 11.3867 35.376 11.9844 33.8652 11.2383 cv
34.4863 11.269 35.1279 11.3179 35.7646 10.5918 cv
35.0332 10.8154 33.1699 11.394 31.7949 9.76758 cv
30.5557 8.30322 32.1953 8.08545 33.0127 8.67432 cv
33.8574 9.27979 34.207 9.7334 34.3672 10.3223 cv
34.6113 9.42676 33.3291 7.32861 31.6973 7.67676 cv
30.0664 8.02588 31.5586 10.7383 32.6475 11.2627 cv
33.0625 11.4614 34.084 12.3818 37.3965 12.3574 cv
37.9297 12.6221 38.5 12.9194 39.7832 13.0317 cv
39.1504 13.7026 37.5918 13.6035 37.3242 13.3291 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
29.7793 4.99902 mo
29.9023 5.08203 30.208 5.25146 30.5195 5.20264 cv
30.2773 5.38281 29.791 5.24512 29.5859 5.12939 cv
29.5605 5.14795 29.5391 5.16455 29.5156 5.18457 cv
29.4268 5.24561 29.3428 5.25439 29.3203 5.27295 cv
29.2852 5.30273 29.3008 5.34912 29.3008 5.34912 cv
29.4316 5.30273 29.748 5.50537 29.748 5.50537 cv
30.2217 5.77734 30.5947 5.53125 30.7422 5.46143 cv
30.8916 5.39307 30.9727 5.34619 31.1426 5.23779 cv
30.707 4.66504 30.1855 4.75879 29.7793 4.99902 cv
cp
0 0 0 1 nzopmsc
f
37.3281 13.3232 mo
37.6699 13.8711 38.4727 14.2949 38.3027 16.1377 cv
37.4492 14.668 35.1084 12.5488 34.4531 12.4277 cv
34.0898 13.4233 34.8027 15.7783 34.9961 16.1523 cv
34.2422 15.7783 33.7793 15.439 33.4805 13.9702 cv
33.1641 14.6934 33.0293 15.6187 31.5518 16.1079 cv
31.9902 15.3091 32.6152 14.6631 32.5547 12.228 cv
31.7363 11.7485 30.0586 11.9346 29.8379 7.40186 cv
29.79 6.25586 29.3125 5.93799 28.459 5.36279 cv
28.459 5.36279 29.1074 4.89941 29.5986 4.51221 cv
30.2158 4.02783 32.1641 3.73584 32.2627 6.74951 cv
33.7432 7.59717 33.75 7.87451 34.8711 8.95703 cv
35.9453 9.9917 38.3818 11.3291 39.5508 11.3613 cv
38.5771 11.708 37.3281 11.7295 36.6953 11.7295 cv
37.0361 11.4312 37.1992 11.2607 37.3037 10.9575 cv
36.6709 11.3809 35.3809 11.9785 33.8701 11.2329 cv
34.4922 11.2627 35.1338 11.3105 35.7695 10.5854 cv
35.041 10.8091 33.1758 11.3882 31.7988 9.76172 cv
30.5605 8.29688 32.1992 8.07959 33.0176 8.66748 cv
33.8633 9.27393 34.2109 9.72803 34.373 10.3169 cv
34.6162 9.42041 33.334 7.32178 31.7031 7.66992 cv
30.0723 8.02002 31.5625 10.7329 32.6533 11.2563 cv
33.0664 11.4556 34.0898 12.3765 37.4023 12.3521 cv
37.9355 12.6162 38.5059 12.9126 39.7891 13.0249 cv
39.1543 13.6968 37.5977 13.5967 37.3281 13.3232 cv
cp
30.6211 14.0747 mo
30.8408 13.6821 31.2266 13.0356 31.2188 12.2935 cv
31.4453 12.457 31.6592 12.5664 31.832 12.623 cv
31.8848 13.0806 31.8809 13.4966 31.8398 13.8735 cv
31.6338 13.9736 31.2773 14.0688 30.6211 14.0747 cv
cp
38.7188 8.85889 mo
37.9609 9.63232 37.3604 9.80664 37.1816 9.84521 cv
36.5918 9.50342 36.1621 9.19434 36.0137 9.06543 cv
35.9385 9.00146 35.8682 8.93896 35.8018 8.87793 cv
36.2295 8.94238 37.6953 9.12598 38.7188 8.85889 cv
cp
41.1689 12.3994 mo
39.8359 12.7754 38.5732 12.1777 38.5537 12.1616 cv
39.8535 11.8735 40.5 11.6777 41.1426 11.0698 cv
40.0439 11.1201 38.8555 10.6987 37.8916 10.2251 cv
38.1953 10.0493 39.3242 9.33154 39.6914 8.17969 cv
39.1836 8.37354 35.8467 8.59277 35.1445 8.21826 cv
34.5625 7.57617 34.248 7.10547 32.875 6.33301 cv
32.2676 2.52393 29.8125 3.55811 29.1016 4.36621 cv
28.6719 4.85303 27.6992 5.28955 27.6992 5.28955 cv
29.2344 6.09814 29.25 6.771 29.3418 7.49561 cv
29.2363 9.48486 29.8594 10.8438 30.5547 11.6675 cv
30.75 12.1846 30.8848 13.2085 29.8379 14.4644 cv
30.6758 14.5815 31.3896 14.4829 31.752 14.4102 cv
31.5459 15.3247 31.1123 15.9775 30.751 16.4487 cv
31.3125 16.5854 32.8789 16.2197 33.4102 15.6606 cv
33.9922 16.0625 34.9668 16.9331 36.3066 16.8389 cv
34.8691 15.6968 34.9668 13.9453 35.0752 13.4868 cv
36.1602 14.2949 37.8633 15.9883 38.6182 17.5547 cv
38.9863 15.7632 38.8867 15.3652 38.7695 14.248 cv
39.8125 13.7705 40.5195 13.3481 41.1689 12.3994 cv
cp
f
13.8799 8.86475 mo
13.123 9.63916 12.5195 9.8125 12.3438 9.85156 cv
11.7539 9.50977 11.3242 9.20068 11.1758 9.07129 cv
11.0996 9.00684 11.0293 8.9458 10.9629 8.88428 cv
11.3906 8.94824 12.8555 9.13135 13.8799 8.86475 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
13.8799 8.86475 mo
13.123 9.63916 12.5195 9.8125 12.3438 9.85156 cv
11.7539 9.50977 11.3242 9.20068 11.1758 9.07129 cv
11.0996 9.00684 11.0293 8.9458 10.9629 8.88428 cv
11.3906 8.94824 12.8555 9.13135 13.8799 8.86475 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
5.78125 14.0811 mo
6.00195 13.688 6.38867 13.0415 6.37988 12.2993 cv
6.60547 12.4639 6.82031 12.5737 6.99414 12.6299 cv
7.04688 13.0864 7.04297 13.5029 7.00195 13.8789 cv
6.7959 13.9805 6.43848 14.0742 5.78125 14.0811 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
5.78125 14.0811 mo
6.00195 13.688 6.38867 13.0415 6.37988 12.2993 cv
6.60547 12.4639 6.82031 12.5737 6.99414 12.6299 cv
7.04688 13.0864 7.04297 13.5029 7.00195 13.8789 cv
6.7959 13.9805 6.43848 14.0742 5.78125 14.0811 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
12.4893 13.3291 mo
12.8301 13.8774 13.6338 14.3008 13.4639 16.1436 cv
12.6113 14.6743 10.2705 12.5552 9.61523 12.4346 cv
9.25 13.4292 9.96289 15.7856 10.1582 16.1592 cv
9.40234 15.7856 8.93945 15.4453 8.64063 13.9766 cv
8.32422 14.7002 8.19238 15.6245 6.71387 16.1138 cv
7.15039 15.3154 7.77637 14.668 7.7168 12.2339 cv
6.89648 11.7544 5.2207 11.9399 4.99805 7.40771 cv
4.95117 6.26221 4.4707 5.94385 3.61426 5.36816 cv
3.61426 5.36816 4.26563 4.90576 4.76074 4.51807 cv
5.37695 4.03369 7.32617 3.74268 7.42383 6.75439 cv
8.90527 7.60254 8.91309 7.88037 10.0332 8.96289 cv
11.1055 9.99707 13.543 11.3345 14.7109 11.3667 cv
13.7363 11.7153 12.4893 11.7358 11.8555 11.7358 cv
12.1982 11.4365 12.3594 11.2681 12.4648 10.9639 cv
11.832 11.3867 10.542 11.9844 9.03125 11.2383 cv
9.65234 11.269 10.2949 11.3179 10.9316 10.5918 cv
10.2002 10.8154 8.33789 11.394 6.96094 9.76758 cv
5.72266 8.30322 7.36133 8.08545 8.17969 8.67432 cv
9.02344 9.27979 9.37109 9.7334 9.53516 10.3223 cv
9.77734 9.42676 8.49414 7.32861 6.86328 7.67676 cv
5.23145 8.02588 6.72266 10.7383 7.81348 11.2627 cv
8.22656 11.4614 9.25 12.3818 12.5625 12.3574 cv
13.0957 12.6221 13.667 12.9194 14.9492 13.0317 cv
14.3174 13.7026 12.7578 13.6035 12.4893 13.3291 cv
cp
false sop
0 0.91 0.76 0 cmyk
f
12.4893 13.3291 mo
12.8301 13.8774 13.6338 14.3008 13.4639 16.1436 cv
12.6113 14.6743 10.2705 12.5552 9.61523 12.4346 cv
9.25 13.4292 9.96289 15.7856 10.1582 16.1592 cv
9.40234 15.7856 8.93945 15.4453 8.64063 13.9766 cv
8.32422 14.7002 8.19238 15.6245 6.71387 16.1138 cv
7.15039 15.3154 7.77637 14.668 7.7168 12.2339 cv
6.89648 11.7544 5.2207 11.9399 4.99805 7.40771 cv
4.95117 6.26221 4.4707 5.94385 3.61426 5.36816 cv
3.61426 5.36816 4.26563 4.90576 4.76074 4.51807 cv
5.37695 4.03369 7.32617 3.74268 7.42383 6.75439 cv
8.90527 7.60254 8.91309 7.88037 10.0332 8.96289 cv
11.1055 9.99707 13.543 11.3345 14.7109 11.3667 cv
13.7363 11.7153 12.4893 11.7358 11.8555 11.7358 cv
12.1982 11.4365 12.3594 11.2681 12.4648 10.9639 cv
11.832 11.3867 10.542 11.9844 9.03125 11.2383 cv
9.65234 11.269 10.2949 11.3179 10.9316 10.5918 cv
10.2002 10.8154 8.33789 11.394 6.96094 9.76758 cv
5.72266 8.30322 7.36133 8.08545 8.17969 8.67432 cv
9.02344 9.27979 9.37109 9.7334 9.53516 10.3223 cv
9.77734 9.42676 8.49414 7.32861 6.86328 7.67676 cv
5.23145 8.02588 6.72266 10.7383 7.81348 11.2627 cv
8.22656 11.4614 9.25 12.3818 12.5625 12.3574 cv
13.0957 12.6221 13.667 12.9194 14.9492 13.0317 cv
14.3174 13.7026 12.7578 13.6035 12.4893 13.3291 cv
cp
true sop
0 0.91 0.76 0 nzopmsc
@
4.94434 4.99902 mo
5.06836 5.08203 5.37402 5.25146 5.68555 5.20264 cv
5.44336 5.38281 4.95898 5.24512 4.75195 5.12939 cv
4.72656 5.14795 4.70117 5.16455 4.67871 5.18457 cv
4.58789 5.24561 4.50391 5.25439 4.48145 5.27295 cv
4.44531 5.30273 4.46289 5.34912 4.46289 5.34912 cv
4.5918 5.30273 4.91602 5.50537 4.91602 5.50537 cv
5.38672 5.77734 5.76074 5.53125 5.90918 5.46143 cv
6.05859 5.39307 6.13867 5.34619 6.30957 5.23779 cv
5.87402 4.66504 5.35156 4.75879 4.94434 4.99902 cv
cp
0 0 0 1 nzopmsc
f
12.4941 13.3232 mo
12.835 13.8711 13.6387 14.2949 13.4678 16.1377 cv
12.6152 14.668 10.2754 12.5488 9.62109 12.4277 cv
9.25586 13.4233 9.96875 15.7783 10.1641 16.1523 cv
9.4082 15.7783 8.94531 15.439 8.64648 13.9702 cv
8.33008 14.6934 8.19531 15.6187 6.71875 16.1079 cv
7.15625 15.3091 7.78027 14.6631 7.7207 12.228 cv
6.90234 11.7485 5.22559 11.9346 5.00391 7.40186 cv
4.95703 6.25586 4.47559 5.93799 3.62109 5.36279 cv
3.62109 5.36279 4.26953 4.89941 4.76563 4.51221 cv
5.38281 4.02783 7.33105 3.73584 7.42969 6.74951 cv
8.91016 7.59717 8.91602 7.87451 10.0371 8.95703 cv
11.1104 9.9917 13.5498 11.3291 14.7148 11.3613 cv
13.7432 11.708 12.4941 11.7295 11.8613 11.7295 cv
12.2012 11.4312 12.3652 11.2607 12.4707 10.9575 cv
11.8359 11.3809 10.5459 11.9785 9.03516 11.2329 cv
9.6582 11.2627 10.2988 11.3105 10.9355 10.5854 cv
10.2051 10.8091 8.34082 11.3882 6.96582 9.76172 cv
5.72656 8.29688 7.36621 8.07959 8.18359 8.66748 cv
9.02832 9.27393 9.37793 9.72803 9.53906 10.3169 cv
9.78125 9.42041 8.5 7.32178 6.86914 7.66992 cv
5.23633 8.02002 6.72852 10.7329 7.81738 11.2563 cv
8.23242 11.4556 9.25586 12.3765 12.5674 12.3521 cv
13.1006 12.6162 13.6719 12.9126 14.9551 13.0249 cv
14.3203 13.6968 12.7627 13.5967 12.4941 13.3232 cv
cp
5.78613 14.0747 mo
6.00586 13.6821 6.39453 13.0356 6.38379 12.2935 cv
6.61133 12.457 6.82422 12.5664 6.99609 12.623 cv
7.0498 13.0806 7.04785 13.4966 7.00781 13.8735 cv
6.80078 13.9736 6.44336 14.0688 5.78613 14.0747 cv
cp
13.8848 8.85889 mo
13.1279 9.63232 12.5254 9.80664 12.3457 9.84521 cv
11.7578 9.50342 11.3281 9.19434 11.1797 9.06543 cv
11.1035 9.00146 11.0352 8.93896 10.9668 8.87793 cv
11.3965 8.94238 12.8613 9.12598 13.8848 8.85889 cv
cp
16.3359 12.3994 mo
15.002 12.7754 13.7373 12.1777 13.7188 12.1616 cv
15.0195 11.8735 15.666 11.6777 16.3066 11.0698 cv
15.2109 11.1201 14.0225 10.6987 13.0586 10.2251 cv
13.3613 10.0493 14.4893 9.33154 14.8594 8.17969 cv
14.3486 8.37354 11.0137 8.59277 10.3125 8.21826 cv
9.72852 7.57617 9.41504 7.10547 8.04297 6.33301 cv
7.43359 2.52393 4.97852 3.55811 4.26172 4.36621 cv
3.83398 4.85303 2.86133 5.28955 2.86133 5.28955 cv
4.39551 6.09814 4.41211 6.771 4.50098 7.49561 cv
4.39844 9.48486 5.02344 10.8438 5.7207 11.6675 cv
5.91699 12.1846 6.05078 13.2085 5.00391 14.4644 cv
5.8418 14.5815 6.55762 14.4829 6.91797 14.4102 cv
6.71289 15.3247 6.27734 15.9775 5.91699 16.4487 cv
6.47852 16.5854 8.04688 16.2197 8.5752 15.6606 cv
9.15723 16.0625 10.1328 16.9331 11.4727 16.8389 cv
10.0352 15.6968 10.1328 13.9453 10.2402 13.4868 cv
11.3262 14.2949 13.0293 15.9883 13.7852 17.5547 cv
14.1504 15.7632 14.0527 15.3652 13.9355 14.248 cv
14.9785 13.7705 15.6846 13.3481 16.3359 12.3994 cv
cp
f
43.0703 20.0278 mo
0.597656 20.0278 li
false sop
0 0 0 0 cmyk
f
0.4668 lw
43.0703 20.0278 mo
0.597656 20.0278 li
@
20.3545 22.7505 mo
0.597656 22.7505 li
f
20.3545 22.7505 mo
0.597656 22.7505 li
@
42.8564 22.7505 mo
23.0986 22.7505 li
f
42.8564 22.7505 mo
23.0986 22.7505 li
@
43.0703 25.4707 mo
0.597656 25.4707 li
f
43.0703 25.4707 mo
0.597656 25.4707 li
@
43.0703 28.1904 mo
0.751953 28.2363 li
f
43.0703 28.1904 mo
0.751953 28.2363 li
@
42.4531 33.6357 mo
1.23438 33.6357 li
f
42.4531 33.6357 mo
1.23438 33.6357 li
@
41.834 36.3555 mo
2.12305 36.3555 li
f
41.834 36.3555 mo
2.12305 36.3555 li
@
40.5977 39.0771 mo
3.50195 39.0771 li
f
40.5977 39.0771 mo
3.50195 39.0771 li
@
39.2178 41.7988 mo
4.76367 42.2246 li
f
39.2178 41.7988 mo
4.76367 42.2246 li
@
37.0479 44.5205 mo
6.62109 44.5205 li
f
37.0479 44.5205 mo
6.62109 44.5205 li
@
34.7305 47.2412 mo
9.40039 47.2412 li
f
34.7305 47.2412 mo
9.40039 47.2412 li
@
31.0234 49.9619 mo
13.1074 49.9619 li
f
31.0234 49.9619 mo
13.1074 49.9619 li
@
43.0703 30.9141 mo
0.542969 30.9141 li
f
43.0703 30.9141 mo
0.542969 30.9141 li
@
42.3535 1.21924 mo
42.3535 2.38623 42.3535 28.9482 42.3535 28.9482 cv
42.3535 43.502 28.8828 52.7842 21.8389 52.7842 cv
14.7588 52.7842 1.21875 43.502 1.21875 28.9482 cv
1.21875 28.9482 1.21875 2.38623 1.21875 1.21924 cv
2.38574 1.21924 41.1875 1.21924 42.3535 1.21924 cv
cp
42.9639 0 mo
0 0 li
0 28.9482 li
0 44.2461 14.3398 54.0029 21.8389 54.0029 cv
29.3018 54.0029 43.5732 44.2461 43.5732 28.9482 cv
43.5732 0 li
42.9639 0 li
cp
true sop
0 0 0 1 nzopmsc
f
1.2183 lw
43.5098 19.7563 mo
1.15723 19.7563 li
@
14.4043 24.5176 mo
16.3594 23.2036 17.9219 22.6528 19.1094 22.7939 cv
19.6104 22.9243 19.8359 23.293 19.957 23.7368 cv
19.4199 23.6001 18.8047 23.564 18.1484 23.6475 cv
18.207 24.2476 li
18.9014 24.1938 19.5313 24.2778 20.083 24.48 cv
20.1816 25.3335 li
19.6309 25.1582 18.9893 25.1045 18.2988 25.1855 cv
18.3555 25.7715 li
19.0654 25.7285 19.708 25.8374 20.2676 26.0815 cv
20.3652 26.9229 li
19.8105 26.7085 19.1563 26.6367 18.4473 26.7124 cv
18.502 27.2852 li
19.2305 27.2539 19.8838 27.3901 20.4541 27.6909 cv
20.5508 28.5225 li
19.9902 28.2588 19.3232 28.166 18.5977 28.2344 cv
18.6523 28.7979 li
19.3975 28.7803 20.0596 28.9512 20.6426 29.3203 cv
20.7383 30.1416 li
20.1709 29.8115 19.4902 29.6904 18.7461 29.751 cv
18.7988 30.3066 li
19.5586 30.3057 20.2324 30.5225 20.834 30.9766 cv
20.9277 31.7803 li
20.3477 31.3633 19.6543 31.2021 18.8916 31.2529 cv
18.9443 31.8174 li
19.7207 31.8369 20.4023 32.1104 21.0293 32.6689 cv
21.1211 33.46 li
20.5225 32.9404 19.8164 32.7354 19.0371 32.7676 cv
19.0928 33.3271 li
19.877 33.376 20.5654 33.7139 21.2295 34.3955 cv
21.3203 35.1768 li
20.6934 34.5361 19.9766 34.2764 19.1855 34.29 cv
19.2422 34.8584 li
20.0254 34.9385 20.7217 35.3408 21.4336 36.1572 cv
21.5332 37.0166 li
19.8477 35.001 17.7002 35.8838 15.2695 37.4775 cv
13.6973 38.5107 12.0137 39.1797 10.8242 38.9404 cv
9.47461 24.8867 li
10.377 25.5962 12.1387 26.0396 14.4043 24.5176 cv
cp
false sop
0 0 0 0 cmyk
f
0.0359 lw
14.4043 24.5176 mo
16.3594 23.2036 17.9219 22.6528 19.1094 22.7939 cv
19.6104 22.9243 19.8359 23.293 19.957 23.7368 cv
19.4199 23.6001 18.8047 23.564 18.1484 23.6475 cv
18.207 24.2476 li
18.9014 24.1938 19.5313 24.2778 20.083 24.48 cv
20.1816 25.3335 li
19.6309 25.1582 18.9893 25.1045 18.2988 25.1855 cv
18.3555 25.7715 li
19.0654 25.7285 19.708 25.8374 20.2676 26.0815 cv
20.3652 26.9229 li
19.8105 26.7085 19.1563 26.6367 18.4473 26.7124 cv
18.502 27.2852 li
19.2305 27.2539 19.8838 27.3901 20.4541 27.6909 cv
20.5508 28.5225 li
19.9902 28.2588 19.3232 28.166 18.5977 28.2344 cv
18.6523 28.7979 li
19.3975 28.7803 20.0596 28.9512 20.6426 29.3203 cv
20.7383 30.1416 li
20.1709 29.8115 19.4902 29.6904 18.7461 29.751 cv
18.7988 30.3066 li
19.5586 30.3057 20.2324 30.5225 20.834 30.9766 cv
20.9277 31.7803 li
20.3477 31.3633 19.6543 31.2021 18.8916 31.2529 cv
18.9443 31.8174 li
19.7207 31.8369 20.4023 32.1104 21.0293 32.6689 cv
21.1211 33.46 li
20.5225 32.9404 19.8164 32.7354 19.0371 32.7676 cv
19.0928 33.3271 li
19.877 33.376 20.5654 33.7139 21.2295 34.3955 cv
21.3203 35.1768 li
20.6934 34.5361 19.9766 34.2764 19.1855 34.29 cv
19.2422 34.8584 li
20.0254 34.9385 20.7217 35.3408 21.4336 36.1572 cv
21.5332 37.0166 li
19.8477 35.001 17.7002 35.8838 15.2695 37.4775 cv
13.6973 38.5107 12.0137 39.1797 10.8242 38.9404 cv
9.47461 24.8867 li
10.377 25.5962 12.1387 26.0396 14.4043 24.5176 cv
cp
@
21.957 36.2178 mo
22.7656 35.1787 23.5391 34.6797 24.4219 34.5889 cv
24.4805 34.2842 li
23.5254 34.2666 22.6758 34.6455 21.9678 35.6152 cv
21.9834 34.6455 li
22.7891 33.6123 23.6094 33.1172 24.5713 33.0596 cv
24.6279 32.7607 li
23.5928 32.7158 22.6895 33.0947 21.9941 34.0654 cv
22.0098 33.0723 li
22.8086 32.0576 23.6797 31.5752 24.7197 31.5488 cv
24.7734 31.2461 li
23.6602 31.1709 22.6992 31.5479 22.0195 32.5088 cv
22.0361 31.499 li
22.8242 30.5049 23.752 30.0381 24.8652 30.0381 cv
24.9199 29.7451 li
23.7324 29.6455 22.709 30.0127 22.0459 30.9531 cv
22.0625 29.9238 li
22.8418 28.958 23.8223 28.499 25.0127 28.5293 cv
25.0684 28.2275 li
23.8066 28.1084 22.7217 28.4736 22.0713 29.3857 cv
22.0889 28.3486 li
22.8594 27.4136 23.8975 26.9614 25.1582 27.0171 cv
25.2168 26.7056 li
23.8809 26.5625 22.7373 26.9375 22.0977 27.8257 cv
22.1143 26.7725 li
22.876 25.8701 23.9727 25.4214 25.3066 25.5039 cv
25.3652 25.1782 li
23.96 25.0127 22.7578 25.3989 22.124 26.2583 cv
22.1406 25.1973 li
22.8965 24.3257 24.0469 23.8687 25.4551 23.9775 cv
25.5156 23.6406 li
24.0713 23.457 22.8262 23.8418 22.1797 24.6445 cv
22.2422 24.3833 22.4121 23.8726 22.8457 23.457 cv
22.8418 23.4575 22.8379 23.459 22.834 23.4604 cv
24.2686 22.2539 26.7451 22.8042 29.2832 24.5103 cv
31.5527 26.0347 33.3145 25.5864 34.2158 24.8755 cv
32.8672 38.9346 li
31.6758 39.1719 29.9941 38.5029 28.4199 37.4717 cv
25.8848 35.8066 23.6543 34.9189 21.9395 37.2939 cv
21.957 36.2178 li
cp
f
21.957 36.2178 mo
22.7656 35.1787 23.5391 34.6797 24.4219 34.5889 cv
24.4805 34.2842 li
23.5254 34.2666 22.6758 34.6455 21.9678 35.6152 cv
21.9834 34.6455 li
22.7891 33.6123 23.6094 33.1172 24.5713 33.0596 cv
24.6279 32.7607 li
23.5928 32.7158 22.6895 33.0947 21.9941 34.0654 cv
22.0098 33.0723 li
22.8086 32.0576 23.6797 31.5752 24.7197 31.5488 cv
24.7734 31.2461 li
23.6602 31.1709 22.6992 31.5479 22.0195 32.5088 cv
22.0361 31.499 li
22.8242 30.5049 23.752 30.0381 24.8652 30.0381 cv
24.9199 29.7451 li
23.7324 29.6455 22.709 30.0127 22.0459 30.9531 cv
22.0625 29.9238 li
22.8418 28.958 23.8223 28.499 25.0127 28.5293 cv
25.0684 28.2275 li
23.8066 28.1084 22.7217 28.4736 22.0713 29.3857 cv
22.0889 28.3486 li
22.8594 27.4136 23.8975 26.9614 25.1582 27.0171 cv
25.2168 26.7056 li
23.8809 26.5625 22.7373 26.9375 22.0977 27.8257 cv
22.1143 26.7725 li
22.876 25.8701 23.9727 25.4214 25.3066 25.5039 cv
25.3652 25.1782 li
23.96 25.0127 22.7578 25.3989 22.124 26.2583 cv
22.1406 25.1973 li
22.8965 24.3257 24.0469 23.8687 25.4551 23.9775 cv
25.5156 23.6406 li
24.0713 23.457 22.8262 23.8418 22.1797 24.6445 cv
22.2422 24.3833 22.4121 23.8726 22.8457 23.457 cv
22.8418 23.4575 22.8379 23.459 22.834 23.4604 cv
24.2686 22.2539 26.7451 22.8042 29.2832 24.5103 cv
31.5527 26.0347 33.3145 25.5864 34.2158 24.8755 cv
32.8672 38.9346 li
31.6758 39.1719 29.9941 38.5029 28.4199 37.4717 cv
25.8848 35.8066 23.6543 34.9189 21.9395 37.2939 cv
21.957 36.2178 li
cp
@
21.9678 43.1621 mo
20.8809 43.1621 19.9365 42.8936 19.5518 42.3867 cv
21.0684 41.8867 21.6045 41.1221 21.7383 40.208 cv
21.9238 41.1094 22.6201 41.8643 24.2324 42.3652 cv
23.9102 42.8857 23.0693 43.1621 21.9678 43.1621 cv
cp
0 0.3 0.94 0 cmyk
f
21.9678 43.1621 mo
20.8809 43.1621 19.9365 42.8936 19.5518 42.3867 cv
21.0684 41.8867 21.6045 41.1221 21.7383 40.208 cv
21.9238 41.1094 22.6201 41.8643 24.2324 42.3652 cv
23.9102 42.8857 23.0693 43.1621 21.9678 43.1621 cv
cp
true sop
0 0.3 0.94 0 nzopmsc
@
29.2383 38.7549 mo
27.957 38.1396 26.6279 37.7705 25.8975 38.0059 cv
25.8691 38.0049 25.8457 38.0244 25.8418 38.0527 cv
25.8398 38.0801 25.8633 38.1006 25.8916 38.1045 cv
26.7031 38.0381 28.1006 38.5156 29.1426 39.1143 cv
29.5127 39.3291 29.8906 39.5068 30.2627 39.6514 cv
29.8555 39.5732 29.4805 39.4736 29.1816 39.3496 cv
28.3633 39.0068 27.7363 38.751 27.1768 38.708 cv
27.1465 38.7061 27.123 38.7246 27.1211 38.7529 cv
27.1152 38.7783 27.1309 38.8018 27.1592 38.8057 cv
27.7344 38.9932 28.4414 39.4453 29.1816 39.7813 cv
29.5684 39.9551 29.9902 40.0898 30.4199 40.1924 cv
29.8428 40.1436 29.3613 40.0938 29.1445 40.0615 cv
28.459 39.9541 27.8535 39.8877 27.3164 39.7783 cv
27.2871 39.7764 27.2588 39.7939 27.2568 39.8213 cv
27.2539 39.8496 27.2725 39.876 27.3037 39.877 cv
27.8516 40.1113 28.4258 40.3145 29.1816 40.543 cv
29.6016 40.6709 30.4053 40.8057 31.2539 40.8936 cv
30.4746 40.8643 29.6855 40.8213 29.1016 40.7686 cv
28.1846 40.6904 27.2871 40.5576 26.5957 40.3877 cv
26.5684 40.3857 26.54 40.4033 26.5352 40.4316 cv
26.5313 40.459 26.5527 40.4854 26.5781 40.4873 cv
27.2217 40.8213 28.0918 41.1182 29.0977 41.2646 cv
29.4199 41.3105 29.7891 41.3564 30.1855 41.3975 cv
29.7246 41.3936 29.3281 41.3818 29.0703 41.3604 cv
27.7832 41.2529 26.4141 40.8076 25.5322 40.4561 cv
25.5098 40.4424 25.4707 40.4463 25.4551 40.4697 cv
25.4434 40.4932 25.4541 40.5254 25.4775 40.5381 cv
26.2979 41.0986 28.1699 41.9033 30.2803 42.0117 cv
25.5723 42 22.666 40.8428 21.7832 39.1436 cv
21.1904 40.2822 19.915 41.1748 17.7266 41.6455 cv
18.6543 41.3486 19.4043 40.9922 19.874 40.6729 cv
19.9004 40.6572 19.9131 40.6182 19.8975 40.5908 cv
19.8809 40.5635 19.8369 40.5586 19.8125 40.5732 cv
18.7676 40.9893 17.1543 41.5166 15.6387 41.6416 cv
15.334 41.665 14.8643 41.6797 14.3174 41.6846 cv
14.7861 41.6367 15.2207 41.583 15.6016 41.5283 cv
16.7881 41.3545 17.8193 41.0068 18.5723 40.6113 cv
18.6055 40.6104 18.6289 40.5762 18.626 40.543 cv
18.6211 40.5127 18.5869 40.4902 18.5537 40.4932 cv
17.7402 40.6924 16.6797 40.8467 15.5977 40.9463 cv
14.915 41.0049 13.9883 41.0557 13.0723 41.0889 cv
14.0693 40.9854 15.0117 40.8271 15.5049 40.6777 cv
16.3965 40.4111 17.0732 40.1689 17.7217 39.8916 cv
17.7549 39.8877 17.7813 39.8604 17.7793 39.8271 cv
17.7734 39.7939 17.7402 39.7705 17.707 39.7744 cv
17.0703 39.9033 16.3564 39.9834 15.5527 40.1084 cv
15.2969 40.1475 14.7256 40.207 14.0439 40.2627 cv
14.5508 40.1436 15.0508 39.9844 15.5049 39.7783 cv
16.3789 39.3838 17.2109 38.8496 17.8906 38.6279 cv
17.9238 38.626 17.9404 38.6006 17.9375 38.5664 cv
17.9375 38.5664 17.9375 38.5664 17.9375 38.5654 cv
17.9492 38.5752 17.9629 38.5801 17.9805 38.5791 cv
18.0127 38.5752 18.0352 38.5449 18.0332 38.5127 cv
18.0283 38.4814 18 38.458 17.9668 38.4619 cv
17.9365 38.4629 17.9141 38.4932 17.916 38.5244 cv
17.918 38.54 17.9238 38.5498 17.9336 38.5596 cv
17.9238 38.5322 17.8984 38.5127 17.8701 38.5156 cv
17.2109 38.5635 16.4707 38.8652 15.5049 39.2705 cv
15.1563 39.417 14.7139 39.5322 14.2363 39.624 cv
14.6738 39.4541 15.1191 39.2451 15.5547 38.9932 cv
16.7793 38.2881 18.4277 37.7256 19.3857 37.8027 cv
19.416 37.7988 19.4453 37.7715 19.4434 37.7393 cv
19.4395 37.71 19.4111 37.6816 19.3789 37.6865 cv
18.5166 37.4092 16.9512 37.8428 15.4395 38.5674 cv
13.0059 39.7393 10.877 39.5498 10.5371 39.0732 cv
10.5527 39.0693 li
10.9316 39.4541 13.0488 39.3281 15.457 38.1689 cv
18.5293 36.6924 19.916 36.2412 21.833 38.8213 cv
21.8428 38.8447 li
21.8428 38.833 li
23.7627 36.2393 25.1484 36.6895 28.2275 38.1689 cv
30.7285 39.373 32.1934 39.4502 32.9473 39.0186 cv
33.0781 39.0537 li
32.4873 39.415 30.9824 39.5947 29.2383 38.7549 cv
cp
false sop
0 0.3 0.94 0 cmyk
f
29.2383 38.7549 mo
27.957 38.1396 26.6279 37.7705 25.8975 38.0059 cv
25.8691 38.0049 25.8457 38.0244 25.8418 38.0527 cv
25.8398 38.0801 25.8633 38.1006 25.8916 38.1045 cv
26.7031 38.0381 28.1006 38.5156 29.1426 39.1143 cv
29.5127 39.3291 29.8906 39.5068 30.2627 39.6514 cv
29.8555 39.5732 29.4805 39.4736 29.1816 39.3496 cv
28.3633 39.0068 27.7363 38.751 27.1768 38.708 cv
27.1465 38.7061 27.123 38.7246 27.1211 38.7529 cv
27.1152 38.7783 27.1309 38.8018 27.1592 38.8057 cv
27.7344 38.9932 28.4414 39.4453 29.1816 39.7813 cv
29.5684 39.9551 29.9902 40.0898 30.4199 40.1924 cv
29.8428 40.1436 29.3613 40.0938 29.1445 40.0615 cv
28.459 39.9541 27.8535 39.8877 27.3164 39.7783 cv
27.2871 39.7764 27.2588 39.7939 27.2568 39.8213 cv
27.2539 39.8496 27.2725 39.876 27.3037 39.877 cv
27.8516 40.1113 28.4258 40.3145 29.1816 40.543 cv
29.6016 40.6709 30.4053 40.8057 31.2539 40.8936 cv
30.4746 40.8643 29.6855 40.8213 29.1016 40.7686 cv
28.1846 40.6904 27.2871 40.5576 26.5957 40.3877 cv
26.5684 40.3857 26.54 40.4033 26.5352 40.4316 cv
26.5313 40.459 26.5527 40.4854 26.5781 40.4873 cv
27.2217 40.8213 28.0918 41.1182 29.0977 41.2646 cv
29.4199 41.3105 29.7891 41.3564 30.1855 41.3975 cv
29.7246 41.3936 29.3281 41.3818 29.0703 41.3604 cv
27.7832 41.2529 26.4141 40.8076 25.5322 40.4561 cv
25.5098 40.4424 25.4707 40.4463 25.4551 40.4697 cv
25.4434 40.4932 25.4541 40.5254 25.4775 40.5381 cv
26.2979 41.0986 28.1699 41.9033 30.2803 42.0117 cv
25.5723 42 22.666 40.8428 21.7832 39.1436 cv
21.1904 40.2822 19.915 41.1748 17.7266 41.6455 cv
18.6543 41.3486 19.4043 40.9922 19.874 40.6729 cv
19.9004 40.6572 19.9131 40.6182 19.8975 40.5908 cv
19.8809 40.5635 19.8369 40.5586 19.8125 40.5732 cv
18.7676 40.9893 17.1543 41.5166 15.6387 41.6416 cv
15.334 41.665 14.8643 41.6797 14.3174 41.6846 cv
14.7861 41.6367 15.2207 41.583 15.6016 41.5283 cv
16.7881 41.3545 17.8193 41.0068 18.5723 40.6113 cv
18.6055 40.6104 18.6289 40.5762 18.626 40.543 cv
18.6211 40.5127 18.5869 40.4902 18.5537 40.4932 cv
17.7402 40.6924 16.6797 40.8467 15.5977 40.9463 cv
14.915 41.0049 13.9883 41.0557 13.0723 41.0889 cv
14.0693 40.9854 15.0117 40.8271 15.5049 40.6777 cv
16.3965 40.4111 17.0732 40.1689 17.7217 39.8916 cv
17.7549 39.8877 17.7813 39.8604 17.7793 39.8271 cv
17.7734 39.7939 17.7402 39.7705 17.707 39.7744 cv
17.0703 39.9033 16.3564 39.9834 15.5527 40.1084 cv
15.2969 40.1475 14.7256 40.207 14.0439 40.2627 cv
14.5508 40.1436 15.0508 39.9844 15.5049 39.7783 cv
16.3789 39.3838 17.2109 38.8496 17.8906 38.6279 cv
17.9238 38.626 17.9404 38.6006 17.9375 38.5664 cv
17.9375 38.5664 17.9375 38.5664 17.9375 38.5654 cv
17.9492 38.5752 17.9629 38.5801 17.9805 38.5791 cv
18.0127 38.5752 18.0352 38.5449 18.0332 38.5127 cv
18.0283 38.4814 18 38.458 17.9668 38.4619 cv
17.9365 38.4629 17.9141 38.4932 17.916 38.5244 cv
17.918 38.54 17.9238 38.5498 17.9336 38.5596 cv
17.9238 38.5322 17.8984 38.5127 17.8701 38.5156 cv
17.2109 38.5635 16.4707 38.8652 15.5049 39.2705 cv
15.1563 39.417 14.7139 39.5322 14.2363 39.624 cv
14.6738 39.4541 15.1191 39.2451 15.5547 38.9932 cv
16.7793 38.2881 18.4277 37.7256 19.3857 37.8027 cv
19.416 37.7988 19.4453 37.7715 19.4434 37.7393 cv
19.4395 37.71 19.4111 37.6816 19.3789 37.6865 cv
18.5166 37.4092 16.9512 37.8428 15.4395 38.5674 cv
13.0059 39.7393 10.877 39.5498 10.5371 39.0732 cv
10.5527 39.0693 li
10.9316 39.4541 13.0488 39.3281 15.457 38.1689 cv
18.5293 36.6924 19.916 36.2412 21.833 38.8213 cv
21.8428 38.8447 li
21.8428 38.833 li
23.7627 36.2393 25.1484 36.6895 28.2275 38.1689 cv
30.7285 39.373 32.1934 39.4502 32.9473 39.0186 cv
33.0781 39.0537 li
32.4873 39.415 30.9824 39.5947 29.2383 38.7549 cv
cp
true sop
0 0.3 0.94 0 nzopmsc
@
9.60156 37.4639 mo
8.625 30.6172 li
8.62012 30.5889 8.5957 30.5693 8.56738 30.5723 cv
8.53711 30.5752 8.51758 30.6006 8.51953 30.6299 cv
8.94922 36.4502 li
8.06836 30.0635 li
8.06641 30.043 8.05078 30.0293 8.03223 30.0234 cv
8.05371 30.0127 8.06836 29.9932 8.06836 29.9658 cv
8.05469 29.8525 li
8.05176 29.8203 8.02344 29.7949 7.99121 29.7998 cv
7.95703 29.8018 7.93457 29.833 7.93848 29.8652 cv
7.95117 29.9805 li
7.95313 30.0049 7.97168 30.0205 7.99414 30.0273 cv
7.97656 30.0361 7.96289 30.0518 7.96582 30.0732 cv
8.33203 36.0146 li
7.46973 29.0498 li
7.4668 29.0215 7.44141 29.001 7.41309 29.0049 cv
7.38379 29.0068 7.36328 29.0322 7.36621 29.0596 cv
7.7207 35.6689 li
6.96875 27.998 li
7.67383 27.4175 8.50195 26.4146 8.92383 25.4722 cv
10.334 38.3408 li
9.17578 30.8467 li
9.17383 30.8174 9.15039 30.7969 9.12109 30.7988 cv
9.08984 30.8037 9.06934 30.8281 9.07422 30.8564 cv
9.60156 37.4639 li
cp
false sop
0 0.3 0.94 0 cmyk
f
9.60156 37.4639 mo
8.625 30.6172 li
8.62012 30.5889 8.5957 30.5693 8.56738 30.5723 cv
8.53711 30.5752 8.51758 30.6006 8.51953 30.6299 cv
8.94922 36.4502 li
8.06836 30.0635 li
8.06641 30.043 8.05078 30.0293 8.03223 30.0234 cv
8.05371 30.0127 8.06836 29.9932 8.06836 29.9658 cv
8.05469 29.8525 li
8.05176 29.8203 8.02344 29.7949 7.99121 29.7998 cv
7.95703 29.8018 7.93457 29.833 7.93848 29.8652 cv
7.95117 29.9805 li
7.95313 30.0049 7.97168 30.0205 7.99414 30.0273 cv
7.97656 30.0361 7.96289 30.0518 7.96582 30.0732 cv
8.33203 36.0146 li
7.46973 29.0498 li
7.4668 29.0215 7.44141 29.001 7.41309 29.0049 cv
7.38379 29.0068 7.36328 29.0322 7.36621 29.0596 cv
7.7207 35.6689 li
6.96875 27.998 li
7.67383 27.4175 8.50195 26.4146 8.92383 25.4722 cv
10.334 38.3408 li
9.17578 30.8467 li
9.17383 30.8174 9.15039 30.7969 9.12109 30.7988 cv
9.08984 30.8037 9.06934 30.8281 9.07422 30.8564 cv
9.60156 37.4639 li
cp
true sop
0 0.3 0.94 0 nzopmsc
@
35.7891 36.7021 mo
35.8047 33.5605 li
35.8076 33.5439 35.7822 33.5293 35.752 33.5293 cv
35.7197 33.5293 35.6953 33.5479 35.6914 33.5654 cv
35.1504 37.96 li
35.2197 34.249 li
35.2197 34.2354 35.2051 34.2256 35.1836 34.2217 cv
35.209 34.2178 35.2285 34.2061 35.2305 34.1885 cv
35.2363 34.1162 li
35.2412 34.0938 35.2119 34.0791 35.1758 34.0811 cv
35.1436 34.0811 35.1133 34.0986 35.1113 34.1201 cv
35.1025 34.1924 li
35.1025 34.208 35.1211 34.2197 35.1465 34.2236 cv
35.125 34.2275 35.1094 34.2383 35.1074 34.252 cv
34.5127 38.333 li
34.6563 34.6445 li
34.6602 34.6279 34.6367 34.6104 34.6035 34.6123 cv
34.5732 34.6143 34.5469 34.6299 34.5469 34.6475 cv
33.8604 39.2754 li
34.0801 34.8369 li
34.082 34.8193 34.0596 34.8057 34.0273 34.8057 cv
33.9961 34.8086 33.9688 34.8232 33.9668 34.8389 cv
33.334 38.1572 li
34.7207 25.4878 li
35.1348 26.4146 35.9404 27.3984 36.6387 27.9834 cv
35.7891 36.7021 li
cp
false sop
0 0.3 0.94 0 cmyk
f
35.7891 36.7021 mo
35.8047 33.5605 li
35.8076 33.5439 35.7822 33.5293 35.752 33.5293 cv
35.7197 33.5293 35.6953 33.5479 35.6914 33.5654 cv
35.1504 37.96 li
35.2197 34.249 li
35.2197 34.2354 35.2051 34.2256 35.1836 34.2217 cv
35.209 34.2178 35.2285 34.2061 35.2305 34.1885 cv
35.2363 34.1162 li
35.2412 34.0938 35.2119 34.0791 35.1758 34.0811 cv
35.1436 34.0811 35.1133 34.0986 35.1113 34.1201 cv
35.1025 34.1924 li
35.1025 34.208 35.1211 34.2197 35.1465 34.2236 cv
35.125 34.2275 35.1094 34.2383 35.1074 34.252 cv
34.5127 38.333 li
34.6563 34.6445 li
34.6602 34.6279 34.6367 34.6104 34.6035 34.6123 cv
34.5732 34.6143 34.5469 34.6299 34.5469 34.6475 cv
33.8604 39.2754 li
34.0801 34.8369 li
34.082 34.8193 34.0596 34.8057 34.0273 34.8057 cv
33.9961 34.8086 33.9688 34.8232 33.9668 34.8389 cv
33.334 38.1572 li
34.7207 25.4878 li
35.1348 26.4146 35.9404 27.3984 36.6387 27.9834 cv
35.7891 36.7021 li
cp
true sop
0 0.3 0.94 0 nzopmsc
@
26.4746 40.4424 mo
26.501 40.4463 26.5293 40.4248 26.5332 40.3975 cv
26.5332 40.3701 26.5137 40.3447 26.4883 40.3408 cv
26.457 40.3389 26.4336 40.3584 26.4297 40.3857 cv
26.4277 40.4131 26.4473 40.4365 26.4746 40.4424 cv
cp
0 0 0 1 nzopmsc
f
26.3916 40.3857 mo
26.4199 40.3896 26.4434 40.3682 26.4473 40.3408 cv
26.4492 40.3154 26.4297 40.2891 26.4023 40.2842 cv
26.375 40.2832 26.3516 40.3018 26.3457 40.3311 cv
26.3438 40.3584 26.3633 40.3838 26.3916 40.3857 cv
cp
f
26.2529 40.2607 mo
26.2822 40.2646 26.3066 40.2451 26.3105 40.2158 cv
26.3125 40.1885 26.291 40.1631 26.2637 40.1611 cv
26.2344 40.1592 26.2139 40.1787 26.209 40.2051 cv
26.207 40.2334 26.2246 40.2568 26.2529 40.2607 cv
cp
f
25.376 40.3291 mo
25.3486 40.3252 25.3223 40.3447 25.3213 40.3721 cv
25.3193 40.4014 25.3389 40.4248 25.3662 40.4287 cv
25.3945 40.4287 25.4189 40.4111 25.4219 40.3818 cv
25.4229 40.3555 25.4023 40.3311 25.376 40.3291 cv
cp
f
25.2109 40.2158 mo
25.1836 40.2129 25.1582 40.2334 25.1523 40.2607 cv
25.1523 40.2891 25.1719 40.3154 25.1992 40.3184 cv
25.2275 40.3213 25.252 40.2979 25.2549 40.2725 cv
25.2588 40.2451 25.2373 40.2197 25.2109 40.2158 cv
cp
f
27.0723 38.751 mo
27.0977 38.7529 27.123 38.7324 27.125 38.7041 cv
27.127 38.6787 27.1084 38.6533 27.082 38.6504 cv
27.0547 38.6475 27.0313 38.667 27.0254 38.6943 cv
27.0254 38.7227 27.043 38.7471 27.0723 38.751 cv
cp
f
26.8906 38.7227 mo
26.9199 38.7246 26.9434 38.7041 26.9453 38.6768 cv
26.9473 38.6514 26.9297 38.624 26.9014 38.6221 cv
26.873 38.6191 26.8496 38.6406 26.8477 38.667 cv
26.8438 38.6943 26.8633 38.7188 26.8906 38.7227 cv
cp
f
26.6309 38.7227 mo
26.6582 38.7246 26.6846 38.7041 26.6865 38.6768 cv
26.6875 38.6504 26.6699 38.624 26.6406 38.6221 cv
26.6152 38.6191 26.5898 38.6377 26.5859 38.666 cv
26.584 38.6943 26.6055 38.7188 26.6309 38.7227 cv
cp
f
27.082 39.7344 mo
27.0801 39.7627 27.0977 39.7881 27.125 39.792 cv
27.1563 39.7939 27.1797 39.7744 27.1826 39.7451 cv
27.1855 39.7197 27.166 39.6924 27.1367 39.6904 cv
27.1084 39.6885 27.0859 39.707 27.082 39.7344 cv
cp
f
26.8906 39.7061 mo
26.9199 39.708 26.9434 39.6904 26.9453 39.6611 cv
26.9473 39.6357 26.9297 39.6084 26.9014 39.6064 cv
26.873 39.6045 26.8496 39.624 26.8477 39.6514 cv
26.8438 39.6807 26.8633 39.7031 26.8906 39.7061 cv
cp
f
25.7109 38.0127 mo
25.6836 38.0098 25.6582 38.0283 25.6563 38.0557 cv
25.6523 38.083 25.6709 38.1104 25.6992 38.1133 cv
25.7266 38.1162 25.75 38.0947 25.7539 38.0674 cv
25.7559 38.042 25.7363 38.0146 25.7109 38.0127 cv
cp
f
25.4463 38.0986 mo
25.4189 38.0947 25.3945 38.1162 25.3906 38.1416 cv
25.3887 38.1689 25.4072 38.1943 25.4385 38.1973 cv
25.4619 38.2012 25.4863 38.1807 25.4883 38.1523 cv
25.4941 38.124 25.4727 38.1006 25.4463 38.0986 cv
cp
f
18.6582 40.4424 mo
18.627 40.4463 18.6035 40.4736 18.6055 40.5068 cv
18.6104 40.54 18.6367 40.5635 18.6719 40.5586 cv
18.7031 40.5576 18.7246 40.5254 18.7227 40.4932 cv
18.7188 40.4619 18.6914 40.4365 18.6582 40.4424 cv
cp
f
18.7559 40.376 mo
18.7246 40.3799 18.7031 40.4092 18.7031 40.4424 cv
18.709 40.4727 18.7363 40.4971 18.7715 40.4932 cv
18.8018 40.4912 18.8262 40.4619 18.8223 40.4287 cv
18.8154 40.3975 18.7891 40.3721 18.7559 40.376 cv
cp
f
18.9209 40.2295 mo
18.8867 40.2324 18.8652 40.2627 18.8672 40.292 cv
18.8711 40.3271 18.8984 40.3506 18.9326 40.3467 cv
18.9648 40.3447 18.9883 40.3154 18.9844 40.2803 cv
18.9824 40.251 18.9541 40.2256 18.9209 40.2295 cv
cp
f
19.9688 40.4248 mo
19.9336 40.4287 19.9121 40.458 19.9121 40.4893 cv
19.918 40.5225 19.9473 40.5479 19.9805 40.543 cv
20.0117 40.541 20.0352 40.5107 20.0313 40.4775 cv
20.0293 40.4463 19.998 40.4209 19.9688 40.4248 cv
cp
f
20.1621 40.2939 mo
20.1289 40.2959 20.1084 40.3291 20.1104 40.3584 cv
20.1133 40.3916 20.1426 40.417 20.1758 40.4121 cv
20.208 40.4092 20.2305 40.3799 20.2266 40.3467 cv
20.2227 40.3164 20.1953 40.29 20.1621 40.2939 cv
cp
f
18.167 38.415 mo
18.1367 38.417 18.1133 38.4482 18.1133 38.4785 cv
18.1191 38.5127 18.1484 38.5361 18.1816 38.5322 cv
18.2148 38.5293 18.2373 38.501 18.2324 38.4678 cv
18.2285 38.4346 18.2021 38.4111 18.167 38.415 cv
cp
f
18.4746 38.415 mo
18.4434 38.417 18.4209 38.4482 18.4209 38.4785 cv
18.4238 38.5127 18.4531 38.5342 18.4893 38.5322 cv
18.5195 38.5283 18.541 38.501 18.54 38.4678 cv
18.5352 38.4346 18.5098 38.4111 18.4746 38.415 cv
cp
f
17.8906 39.6748 mo
17.8584 39.6787 17.8359 39.7061 17.8379 39.7393 cv
17.8418 39.7725 17.8691 39.7959 17.9033 39.7939 cv
17.9336 39.7881 17.957 39.7588 17.9551 39.7275 cv
17.9512 39.6943 17.9238 39.6709 17.8906 39.6748 cv
cp
f
18.167 39.5771 mo
18.1367 39.5801 18.1133 39.6084 18.1133 39.6416 cv
18.1191 39.6748 18.1484 39.6963 18.1816 39.6943 cv
18.2148 39.6904 18.2373 39.6611 18.2324 39.6279 cv
18.2285 39.5967 18.2021 39.5732 18.167 39.5771 cv
cp
f
19.5732 37.6963 mo
19.543 37.6982 19.5195 37.7295 19.5215 37.7588 cv
19.5244 37.7939 19.5527 37.8174 19.5879 37.8125 cv
19.6191 37.8096 19.6426 37.7813 19.6406 37.7471 cv
19.6357 37.7178 19.6064 37.6924 19.5732 37.6963 cv
cp
f
19.9512 37.8486 mo
19.9473 37.8174 19.918 37.7939 19.8857 37.7979 cv
19.8516 37.7998 19.8291 37.8301 19.8301 37.8604 cv
19.8359 37.8936 19.8652 37.917 19.8975 37.915 cv
19.9297 37.9121 19.9531 37.8818 19.9512 37.8486 cv
cp
f
35.2031 33.666 mo
35.1689 33.667 35.1367 33.6846 35.1367 33.7061 cv
35.1348 33.7246 35.1621 33.7402 35.1973 33.7402 cv
35.2324 33.7373 35.2617 33.7227 35.2656 33.7002 cv
35.2656 33.6826 35.2383 33.666 35.2031 33.666 cv
cp
f
35.2217 33.4697 mo
35.1875 33.4697 35.1553 33.4873 35.1553 33.5088 cv
35.1523 33.5303 35.1807 33.5439 35.2129 33.5439 cv
35.248 33.5439 35.2773 33.5283 35.2813 33.5049 cv
35.2813 33.4873 35.2539 33.4697 35.2217 33.4697 cv
cp
f
35.2012 33.8457 mo
35.166 33.8477 35.1348 33.8643 35.1348 33.8857 cv
35.127 33.958 li
35.125 33.9785 35.1523 33.9932 35.1875 33.9932 cv
35.2217 33.9932 35.252 33.9736 35.252 33.9561 cv
35.2617 33.8799 li
35.2637 33.8613 35.2363 33.8457 35.2012 33.8457 cv
cp
f
34.0898 34.418 mo
34.0566 34.4199 34.0273 34.4385 34.0234 34.458 cv
34.0234 34.4795 34.0508 34.4951 34.0859 34.4932 cv
34.1182 34.4912 34.1484 34.4756 34.1504 34.4541 cv
34.1523 34.4336 34.126 34.418 34.0898 34.418 cv
cp
f
34.0723 34.6084 mo
34.0371 34.6104 34.0059 34.6279 34.0059 34.6494 cv
33.998 34.7217 li
33.998 34.7412 34.0234 34.7588 34.0596 34.7568 cv
34.0938 34.7568 34.125 34.7402 34.126 34.7197 cv
34.1328 34.6455 li
34.1338 34.626 34.1055 34.6084 34.0723 34.6084 cv
cp
f
34.6406 34.2803 mo
34.6084 34.2803 34.5771 34.2959 34.5742 34.3164 cv
34.5723 34.3359 34.5996 34.3535 34.6348 34.3535 cv
34.6699 34.3516 34.7002 34.335 34.7002 34.3145 cv
34.7031 34.2939 34.6758 34.2773 34.6406 34.2803 cv
cp
f
34.6738 34.0498 mo
34.6387 34.0518 34.6094 34.0693 34.6084 34.0889 cv
34.6055 34.1104 34.6309 34.127 34.668 34.125 cv
34.7031 34.124 34.7305 34.1064 34.7334 34.0869 cv
34.7363 34.0674 34.709 34.0498 34.6738 34.0498 cv
cp
f
34.6348 34.4072 mo
34.5996 34.4072 34.5703 34.4248 34.5684 34.4463 cv
34.5625 34.5205 li
34.5605 34.541 34.5859 34.5557 34.6201 34.5547 cv
34.6563 34.5527 34.6875 34.5381 34.6895 34.5176 cv
34.6953 34.4443 li
34.6973 34.4229 34.668 34.4072 34.6348 34.4072 cv
cp
f
35.8125 33.0986 mo
35.7773 33.1006 35.7471 33.1162 35.7441 33.1377 cv
35.7441 33.1582 35.7715 33.1729 35.8037 33.1729 cv
35.8398 33.1729 35.8711 33.1543 35.873 33.1338 cv
35.875 33.1133 35.8467 33.0967 35.8125 33.0986 cv
cp
f
35.7881 33.3467 mo
35.7539 33.3486 35.7217 33.3662 35.7217 33.3857 cv
35.7158 33.46 li
35.7158 33.4805 35.7393 33.4971 35.7754 33.4961 cv
35.8086 33.4951 35.8369 33.4775 35.8398 33.458 cv
35.8486 33.3838 li
35.8506 33.3623 35.8213 33.3467 35.7881 33.3467 cv
cp
f
35.8291 32.8916 mo
35.7939 32.8926 35.7656 32.9121 35.7617 32.9307 cv
35.7617 32.9521 35.7881 32.9678 35.8213 32.9678 cv
35.8574 32.9658 35.8867 32.9473 35.8887 32.9268 cv
35.8887 32.9092 35.8613 32.8916 35.8291 32.8916 cv
cp
f
35.8105 33.1924 mo
35.7754 33.1934 35.7441 33.21 35.7441 33.2275 cv
35.7373 33.3047 li
35.7363 33.3252 35.7617 33.3398 35.7959 33.3398 cv
35.8311 33.3369 35.8613 33.3232 35.8613 33.3018 cv
35.8711 33.2266 li
35.873 33.208 35.8457 33.1924 35.8105 33.1924 cv
cp
f
7.96289 29.2813 mo
7.99414 29.2783 8.01758 29.249 8.01563 29.2148 cv
8.01172 29.1846 7.98242 29.1592 7.94922 29.1641 cv
7.91797 29.167 7.89453 29.1963 7.89648 29.2275 cv
7.90234 29.2598 7.92871 29.2852 7.96289 29.2813 cv
cp
f
7.98242 28.9053 mo
7.97852 28.8721 7.94922 28.8506 7.91602 28.8525 cv
7.88477 28.8564 7.86133 28.8848 7.86523 28.918 cv
7.87012 28.9502 7.89648 28.9756 7.92969 28.9717 cv
7.96191 28.9678 7.98438 28.9365 7.98242 28.9053 cv
cp
f
7.96582 29.4492 mo
7.93359 29.4521 7.91016 29.4814 7.91406 29.5156 cv
7.92676 29.6299 li
7.92969 29.6631 7.95898 29.6865 7.99121 29.6826 cv
8.02441 29.6787 8.04492 29.6494 8.04395 29.6162 cv
8.03125 29.5029 li
8.02734 29.4697 8 29.4453 7.96582 29.4492 cv
cp
f
9.10938 30.2607 mo
9.10547 30.2295 9.07813 30.2051 9.04492 30.208 cv
9.01367 30.2119 8.98926 30.2432 8.99219 30.2725 cv
8.99609 30.3066 9.02539 30.3311 9.05859 30.3271 cv
9.0918 30.3252 9.11328 30.292 9.10938 30.2607 cv
cp
f
9.15723 30.6787 mo
9.1416 30.5654 li
9.13965 30.5322 9.10938 30.5098 9.07813 30.5127 cv
9.04688 30.5166 9.02344 30.5459 9.02539 30.5771 cv
9.03809 30.6924 li
9.04102 30.7275 9.07031 30.749 9.10254 30.7451 cv
9.13574 30.7432 9.16016 30.7119 9.15723 30.6787 cv
cp
f
8.5332 30.1807 mo
8.56836 30.1768 8.59082 30.1475 8.58887 30.1143 cv
8.58398 30.083 8.55469 30.0586 8.52344 30.0625 cv
8.49023 30.0654 8.4668 30.0947 8.46875 30.126 cv
8.47266 30.1592 8.50098 30.1846 8.5332 30.1807 cv
cp
f
8.53906 29.7549 mo
8.5332 29.7236 8.50488 29.6992 8.47266 29.7041 cv
8.44043 29.7041 8.41797 29.7354 8.41992 29.7666 cv
8.42285 29.7998 8.45313 29.8232 8.48633 29.8193 cv
8.51855 29.8164 8.54102 29.7871 8.53906 29.7549 cv
cp
f
8.53906 30.2666 mo
8.50586 30.2705 8.48242 30.2998 8.48633 30.332 cv
8.49805 30.4482 li
8.50098 30.4814 8.53027 30.5049 8.56445 30.501 cv
8.5957 30.499 8.61816 30.4678 8.61523 30.4346 cv
8.60352 30.3213 li
8.60059 30.2861 8.57227 30.2627 8.53906 30.2666 cv
cp
f
7.34961 28.4609 mo
7.38086 28.458 7.40527 28.4268 7.40234 28.3955 cv
7.39941 28.3643 7.37109 28.3408 7.33789 28.3428 cv
7.30469 28.3467 7.28223 28.377 7.28418 28.4072 cv
7.28809 28.4404 7.31641 28.4658 7.34961 28.4609 cv
cp
f
7.37988 28.7373 mo
7.34863 28.7393 7.32422 28.7705 7.32813 28.8027 cv
7.33887 28.9189 li
7.34277 28.9502 7.37109 28.9756 7.40234 28.9717 cv
7.4375 28.9678 7.45898 28.9365 7.45703 28.9053 cv
7.44531 28.79 li
7.44141 28.7568 7.41211 28.7334 7.37988 28.7373 cv
cp
f
7.37109 28.0684 mo
7.36719 28.0371 7.33789 28.0137 7.30469 28.0161 cv
7.27344 28.0195 7.24902 28.0488 7.25293 28.0801 cv
7.25586 28.1123 7.28418 28.1377 7.31641 28.1318 cv
7.34961 28.1309 7.37305 28.1016 7.37109 28.0684 cv
cp
f
7.37109 28.7236 mo
7.40234 28.7217 7.42773 28.6924 7.42383 28.6611 cv
7.41211 28.5459 li
7.40918 28.5127 7.37988 28.4863 7.34766 28.4902 cv
7.31445 28.4932 7.29102 28.5244 7.29492 28.5576 cv
7.30566 28.6729 li
7.31055 28.7061 7.33887 28.7275 7.37109 28.7236 cv
cp
f
17.7676 24.2769 mo
17.707 23.7012 li
17.2148 23.7998 16.707 23.9639 16.1914 24.1978 cv
16.2441 24.6929 li
16.7725 24.4844 17.2813 24.3496 17.7676 24.2769 cv
cp
f
10.5645 25.9316 mo
10.3867 25.8809 10.2129 25.8145 10.04 25.7407 cv
10.0654 25.9888 li
10.2246 26.0571 10.4004 26.1196 10.5859 26.1733 cv
10.5645 25.9316 li
cp
f
11.4502 26.3306 mo
11.4268 26.0786 li
11.2813 26.0693 11.1387 26.0571 10.9941 26.0342 cv
11.0156 26.2729 li
11.1582 26.3003 11.3027 26.3188 11.4502 26.3306 cv
cp
f
14.2148 25.7446 mo
14.1836 25.4194 li
13.7949 25.6465 13.3789 25.8164 12.9414 25.9321 cv
12.9707 26.229 li
13.3789 26.1323 13.7949 25.9741 14.2148 25.7446 cv
cp
f
15.8359 24.8647 mo
15.7891 24.3887 li
15.4102 24.5913 15.0293 24.8311 14.6563 25.1152 cv
14.6309 25.1338 14.6055 25.145 14.5801 25.165 cv
14.6152 25.521 li
15.0313 25.2612 15.4404 25.0425 15.8359 24.8647 cv
cp
f
12.5566 26.3081 mo
12.5313 26.0317 li
12.3057 26.0693 12.0781 26.0986 11.8496 26.103 cv
11.873 26.3511 li
12.0957 26.3511 12.3223 26.3418 12.5566 26.3081 cv
cp
f
14.7236 26.6553 mo
14.7578 27.0083 li
15.1797 26.7554 15.5859 26.5435 15.9844 26.3667 cv
15.9395 25.9019 li
15.5352 26.1099 15.1289 26.3525 14.7305 26.6504 cv
14.7275 26.6533 14.7266 26.6543 14.7236 26.6553 cv
cp
f
13.1152 27.7192 mo
13.5225 27.6182 13.9404 27.4541 14.3584 27.2271 cv
14.3281 26.9058 li
13.9453 27.1348 13.5273 27.312 13.0879 27.4331 cv
13.1152 27.7192 li
cp
f
11.166 27.8149 mo
11.3066 27.8369 11.4502 27.8511 11.5996 27.8594 cv
11.5762 27.6118 li
11.4336 27.606 11.2881 27.5991 11.1445 27.5811 cv
11.166 27.8149 li
cp
f
16.3877 26.2104 mo
16.9199 26.0049 17.4355 25.8525 17.9141 25.7837 cv
17.8584 25.2314 li
17.3672 25.3247 16.8574 25.4966 16.3418 25.7256 cv
16.3877 26.2104 li
cp
f
12.0215 27.8672 mo
12.2422 27.8594 12.4688 27.8438 12.7021 27.8057 cv
12.6777 27.5405 li
12.4551 27.582 12.2275 27.6138 11.9971 27.6245 cv
12.0215 27.8672 li
cp
f
10.7168 27.4917 mo
10.5391 27.4482 10.3652 27.3887 10.1934 27.3218 cv
10.2178 27.5669 li
10.377 27.6309 10.5508 27.6821 10.7383 27.7285 cv
10.7168 27.4917 li
cp
f
11.3164 29.3525 mo
11.457 29.373 11.5996 29.3809 11.748 29.3857 cv
11.7246 29.1455 li
11.5801 29.1426 11.4375 29.1426 11.2949 29.126 cv
11.3164 29.3525 li
cp
f
12.168 29.3799 mo
12.3887 29.3701 12.6172 29.3457 12.8477 29.3018 cv
12.8242 29.0498 li
12.5996 29.0986 12.374 29.126 12.1455 29.1426 cv
12.168 29.3799 li
cp
f
16.5332 27.7065 mo
17.0674 27.5015 17.584 27.3467 18.0596 27.2827 cv
18.0078 26.7378 li
17.5166 26.8306 17.0059 27.0073 16.4883 27.2339 cv
16.5332 27.7065 li
cp
f
14.9053 28.4912 mo
15.3262 28.2451 15.7344 28.0371 16.1279 27.8633 cv
16.0859 27.4126 li
15.6787 27.6172 15.2734 27.855 14.8701 28.1455 cv
14.9053 28.4912 li
cp
f
13.2617 29.2109 mo
13.668 29.1035 14.0859 28.9365 14.5039 28.71 cv
14.4727 28.3906 li
14.0938 28.623 13.6748 28.8066 13.2324 28.9365 cv
13.2617 29.2109 li
cp
f
10.8672 29.0518 mo
10.6895 29.0146 10.5176 28.9619 10.3486 28.9014 cv
10.373 29.1455 li
10.5293 29.2002 10.7041 29.248 10.8916 29.2871 cv
10.8672 29.0518 li
cp
f
16.6807 29.2002 mo
17.2188 28.9951 17.7334 28.8545 18.2061 28.7988 cv
18.1543 28.2588 li
17.666 28.3447 17.1563 28.5156 16.6348 28.7393 cv
16.6807 29.2002 li
cp
f
12.293 30.6631 mo
12.3164 30.8936 li
12.5361 30.875 12.7617 30.8457 12.9941 30.7979 cv
12.9707 30.5557 li
12.748 30.6045 12.5195 30.6396 12.293 30.6631 cv
cp
f
13.3799 30.4385 mo
13.4053 30.7021 li
13.8105 30.5889 14.2275 30.4189 14.6475 30.1924 cv
14.6172 29.8799 li
14.2412 30.1123 13.8242 30.3018 13.3799 30.4385 cv
cp
f
16.2334 28.9229 mo
15.8281 29.124 15.4219 29.3525 15.0146 29.6377 cv
15.0469 29.9795 li
15.4746 29.7334 15.8809 29.5303 16.2754 29.3604 cv
16.2334 28.9229 li
cp
f
11.4453 30.6709 mo
11.4678 30.8945 li
11.6055 30.9063 11.75 30.9131 11.8965 30.9131 cv
11.875 30.6738 li
11.7314 30.6787 11.5879 30.6807 11.4453 30.6709 cv
cp
f
11.0195 30.6104 mo
10.8418 30.5791 10.6709 30.5361 10.501 30.4814 cv
10.5254 30.7197 li
10.6816 30.7705 10.8555 30.8096 11.041 30.8408 cv
11.0195 30.6104 li
cp
f
12.0469 32.4365 mo
12.0234 32.208 li
11.8789 32.2109 11.7363 32.2197 11.5957 32.2148 cv
11.6182 32.4346 li
11.7559 32.4385 11.8984 32.4414 12.0469 32.4365 cv
cp
f
11.1699 32.1709 mo
10.9941 32.1475 10.8223 32.1084 10.6563 32.0615 cv
10.6787 32.2959 li
10.832 32.3389 11.0068 32.3701 11.1924 32.3955 cv
11.1699 32.1709 li
cp
f
13.1387 32.293 mo
13.1172 32.0576 li
12.8945 32.1123 12.668 32.1533 12.4414 32.1787 cv
12.4648 32.4033 li
12.6836 32.3818 12.9082 32.3447 13.1387 32.293 cv
cp
f
16.3799 30.4287 mo
15.9756 30.626 15.5684 30.8564 15.1602 31.1279 cv
15.1934 31.4639 li
15.6211 31.2236 16.0293 31.0244 16.4199 30.8564 cv
16.3799 30.4287 li
cp
f
16.8262 30.6943 mo
17.3701 30.4893 17.8809 30.3604 18.3545 30.3115 cv
18.3018 29.7822 li
17.8154 29.8662 17.3066 30.0186 16.7803 30.2432 cv
16.8262 30.6943 li
cp
f
14.791 31.6738 mo
14.7627 31.3721 li
14.3916 31.6045 13.9746 31.7959 13.5273 31.9365 cv
13.5488 32.1885 li
13.9531 32.0693 14.3711 31.8975 14.791 31.6738 cv
cp
f
13.2656 33.5596 mo
13.041 33.6182 12.8154 33.665 12.5898 33.6943 cv
12.6113 33.917 li
12.8301 33.8857 13.0537 33.8457 13.2871 33.7881 cv
13.2656 33.5596 li
cp
f
14.9092 32.8623 mo
14.541 33.0947 14.1221 33.2881 13.6738 33.4404 cv
13.6963 33.6768 li
14.0977 33.5518 14.5137 33.3809 14.9355 33.1563 cv
14.9092 32.8623 li
cp
f
11.3242 33.7295 mo
11.1465 33.7109 10.9775 33.6826 10.8105 33.6436 cv
10.832 33.8721 li
10.9844 33.9072 11.1611 33.9307 11.3438 33.9482 cv
11.3242 33.7295 li
cp
f
12.1719 33.7354 mo
12.0293 33.7451 11.8877 33.7607 11.7461 33.7588 cv
11.7686 33.9697 li
11.9043 33.9707 12.0469 33.9658 12.1953 33.958 cv
12.1719 33.7354 li
cp
f
16.9707 32.1885 mo
17.5234 31.9834 18.0283 31.8643 18.498 31.8232 cv
18.4492 31.2822 li
17.9629 31.3594 17.4531 31.5166 16.9277 31.7402 cv
16.9707 32.1885 li
cp
f
16.5234 31.9209 mo
16.123 32.1143 15.7168 32.3496 15.3047 32.6133 cv
15.3369 32.9512 li
15.7705 32.7158 16.1777 32.5186 16.5664 32.3525 cv
16.5234 31.9209 li
cp
f
12.3223 35.2656 mo
12.1807 35.2793 12.0391 35.2959 11.8965 35.2998 cv
11.917 35.5049 li
12.0508 35.501 12.1953 35.4922 12.3438 35.4795 cv
12.3223 35.2656 li
cp
f
17.1172 33.6768 mo
17.668 33.4697 18.1758 33.3408 18.6484 33.3125 cv
18.5977 32.7939 li
18.1094 32.8643 17.6016 33.0186 17.0732 33.2412 cv
17.1172 33.6768 li
cp
f
11.4756 35.2891 mo
11.2988 35.2783 11.1309 35.2578 10.9648 35.2266 cv
10.9844 35.4463 li
11.1387 35.4736 11.3105 35.4893 11.4941 35.498 cv
11.4756 35.2891 li
cp
f
15.0537 34.3564 mo
14.6953 34.5869 14.2734 34.7822 13.8174 34.9385 cv
13.8398 35.165 li
14.2412 35.0332 14.6563 34.8623 15.082 34.6416 cv
15.0537 34.3564 li
cp
f
16.6719 33.4248 mo
16.2734 33.6182 15.8652 33.8486 15.4512 34.1064 cv
15.4824 34.4336 li
15.916 34.2002 16.3262 34.001 16.7129 33.8369 cv
16.6719 33.4248 li
cp
f
13.4121 35.0645 mo
13.1895 35.124 12.9648 35.1748 12.7354 35.2119 cv
12.7568 35.4268 li
12.9727 35.3916 13.2012 35.3428 13.4326 35.2803 cv
13.4121 35.0645 li
cp
f
11.1191 36.8096 mo
11.1387 37.0166 li
11.291 37.0381 11.4619 37.0469 11.6465 37.0508 cv
11.626 36.8467 li
11.4492 36.8447 11.2813 36.8291 11.1191 36.8096 cv
cp
f
17.2637 35.1719 mo
17.8203 34.9619 18.3232 34.8447 18.793 34.8271 cv
18.7412 34.3057 li
18.2559 34.3682 17.749 34.5215 17.2188 34.7471 cv
17.2637 35.1719 li
cp
f
15.5977 35.6025 mo
15.6289 35.9209 li
16.0645 35.6904 16.4736 35.4922 16.8574 35.333 cv
16.8184 34.9326 li
16.4189 35.123 16.0137 35.3486 15.5977 35.6025 cv
cp
f
15.1836 35.8594 mo
14.8359 36.0811 14.416 36.2764 13.9668 36.4346 cv
13.9863 36.6514 li
14.3877 36.5166 14.8018 36.3428 15.2246 36.126 cv
15.1992 35.8496 li
15.1934 35.8535 15.1895 35.8555 15.1836 35.8594 cv
cp
f
12.8848 36.7275 mo
12.9063 36.9326 li
13.1211 36.8936 13.3457 36.8369 13.5791 36.7744 cv
13.5586 36.5654 li
13.3359 36.6289 13.1113 36.6836 12.8848 36.7275 cv
cp
f
12.0469 36.8428 mo
12.0664 37.0381 li
12.2021 37.0283 12.3447 37.0156 12.4902 36.9971 cv
12.4707 36.7939 li
12.3281 36.8105 12.1865 36.833 12.0469 36.8428 cv
cp
f
27.4395 24.1978 mo
26.9287 23.9639 26.4199 23.7998 25.9258 23.7012 cv
25.8672 24.0142 li
26.3516 24.0874 26.8604 24.2231 27.3926 24.4316 cv
27.4395 24.1978 li
cp
f
29.0547 25.165 mo
29.0313 25.145 29.0039 25.1338 28.9795 25.1152 cv
28.6055 24.8311 28.2236 24.5913 27.8418 24.3887 cv
27.7988 24.604 li
28.1943 24.7813 28.6016 24.9995 29.0205 25.2588 cv
29.0547 25.165 li
cp
f
28.9102 26.6553 mo
28.9102 26.6543 28.9043 26.6533 28.9043 26.6504 cv
28.5059 26.3525 28.1016 26.1099 27.6953 25.9019 cv
27.6504 26.105 li
28.0469 26.2808 28.4551 26.4941 28.876 26.7476 cv
28.9102 26.6553 li
cp
f
27.292 25.7256 mo
26.7773 25.4966 26.2656 25.3247 25.7754 25.2314 cv
25.7207 25.5244 li
26.2012 25.5898 26.7148 25.7427 27.2461 25.9487 cv
27.292 25.7256 li
cp
f
27.1465 27.2339 mo
26.6289 27.0073 26.1162 26.8306 25.627 26.7378 cv
25.5762 27.0229 li
26.0498 27.0845 26.5645 27.2417 27.0977 27.4458 cv
27.1465 27.2339 li
cp
f
28.7646 28.1455 mo
28.3613 27.855 27.9551 27.6172 27.5498 27.4126 cv
27.5049 27.6025 li
27.9004 27.7744 28.3076 27.9829 28.7324 28.2324 cv
28.7646 28.1455 li
cp
f
27 28.7393 mo
26.4785 28.5156 25.9697 28.3447 25.4805 28.2588 cv
25.4287 28.5361 li
25.9033 28.5908 26.416 28.7354 26.9551 28.9385 cv
27 28.7393 li
cp
f
27.3613 29.0996 mo
27.752 29.2705 28.1582 29.4727 28.5889 29.7197 cv
28.6191 29.6377 li
28.2139 29.3525 27.8086 29.124 27.4014 28.9229 cv
27.3613 29.0996 li
cp
f
27.2148 30.5967 mo
27.6055 30.7646 28.0127 30.9609 28.4414 31.2021 cv
28.4746 31.1279 li
28.0645 30.8564 27.6592 30.626 27.2549 30.4287 cv
27.2148 30.5967 li
cp
f
26.8545 30.2432 mo
26.3281 30.0186 25.8203 29.8662 25.333 29.7822 cv
25.2813 30.0508 li
25.7539 30.0986 26.2637 30.2285 26.8086 30.4326 cv
26.8545 30.2432 li
cp
f
26.709 31.7402 mo
26.1807 31.5166 25.6729 31.3594 25.1875 31.2822 cv
25.1328 31.5625 li
25.6055 31.6016 26.1133 31.7217 26.6641 31.9268 cv
26.709 31.7402 li
cp
f
27.0684 32.0908 mo
27.458 32.2568 27.8613 32.4541 28.2979 32.6885 cv
28.3311 32.6133 li
27.918 32.3496 27.5117 32.1143 27.1113 31.9209 cv
27.0684 32.0908 li
cp
f
26.5586 33.2412 mo
26.0342 33.0186 25.5244 32.8643 25.041 32.7939 cv
24.9893 33.0498 li
25.458 33.0811 25.9639 33.21 26.5176 33.415 cv
26.5586 33.2412 li
cp
f
26.9238 33.5762 mo
27.3086 33.7373 27.7188 33.9404 28.1523 34.1738 cv
28.1846 34.1064 li
27.7715 33.8486 27.3623 33.6182 26.9629 33.4248 cv
26.9238 33.5762 li
cp
f
26.416 34.7471 mo
25.8857 34.5215 25.3789 34.3682 24.8945 34.3057 cv
24.8408 34.5635 li
25.3096 34.583 25.8145 34.7021 26.373 34.9092 cv
26.416 34.7471 li
cp
f
26.7773 35.0703 mo
27.1602 35.2295 27.5674 35.4307 28.0098 35.6582 cv
28.0391 35.6025 li
27.6211 35.3486 27.2148 35.123 26.8164 34.9326 cv
26.7773 35.0703 li
cp
f
35.7969 36.6943 mo
35.8125 33.5537 li
35.8145 33.5361 35.79 33.5225 35.7598 33.5225 cv
35.7285 33.5225 35.7031 33.54 35.6992 33.5576 cv
35.1582 37.9521 li
35.2275 34.2422 li
35.2275 34.2275 35.2129 34.2197 35.1924 34.2139 cv
35.2168 34.21 35.2363 34.1982 35.2383 34.1826 cv
35.2441 34.1084 li
35.248 34.0879 35.2197 34.0713 35.1836 34.0732 cv
35.1514 34.0752 35.1211 34.0908 35.1191 34.1123 cv
35.1104 34.1846 li
35.1104 34.2021 35.1299 34.2109 35.1553 34.2148 cv
35.1338 34.2217 35.1172 34.2314 35.1152 34.2451 cv
34.5205 38.3252 li
34.6641 34.6377 li
34.668 34.6201 34.6445 34.6045 34.6123 34.6064 cv
34.5811 34.6064 34.5547 34.623 34.5547 34.6396 cv
33.8682 39.2686 li
34.0869 34.8311 li
34.0898 34.8135 34.0664 34.7979 34.0352 34.7979 cv
34.0039 34.8018 33.9775 34.8164 33.9746 34.833 cv
33.3418 38.1494 li
34.7295 25.481 li
35.1426 26.4063 35.9492 27.3901 36.6465 27.9756 cv
35.7969 36.6943 li
cp
29.2256 38.7432 mo
27.9453 38.126 26.6162 37.7568 25.8857 37.9932 cv
25.8574 37.9912 25.833 38.0127 25.8291 38.04 cv
25.8281 38.0674 25.8516 38.0879 25.8809 38.0908 cv
26.6914 38.0264 28.0889 38.5029 29.1299 39.1025 cv
29.502 39.3164 29.8789 39.4932 30.251 39.6377 cv
29.8438 39.5596 29.4678 39.46 29.1699 39.3359 cv
28.3516 38.9951 27.7246 38.7373 27.166 38.6963 cv
27.1348 38.6934 27.1113 38.7119 27.1084 38.7393 cv
27.1035 38.7666 27.1191 38.79 27.1475 38.793 cv
27.7227 38.9795 28.4297 39.4316 29.1699 39.7686 cv
29.5566 39.9424 29.9785 40.0771 30.4082 40.1787 cv
29.832 40.1309 29.3486 40.0811 29.1328 40.0479 cv
28.4473 39.9404 27.8418 39.874 27.3047 39.7646 cv
27.2754 39.7627 27.248 39.7803 27.2461 39.8076 cv
27.2412 39.8369 27.2607 39.8623 27.292 39.8633 cv
27.8408 40.0977 28.4141 40.2998 29.1699 40.5293 cv
29.5898 40.6572 30.3936 40.792 31.2422 40.8809 cv
30.4639 40.8506 29.6738 40.8076 29.0898 40.7559 cv
28.1729 40.6768 27.2754 40.543 26.584 40.374 cv
26.5566 40.3721 26.5293 40.3896 26.5234 40.417 cv
26.5195 40.4463 26.541 40.4717 26.5664 40.4736 cv
27.2109 40.8076 28.0811 41.1035 29.0859 41.251 cv
29.4082 41.2979 29.7773 41.3447 30.1729 41.3848 cv
29.7129 41.3799 29.3164 41.3691 29.0596 41.3486 cv
27.7715 41.2393 26.4023 40.7939 25.5205 40.4424 cv
25.498 40.4287 25.46 40.4326 25.4443 40.4561 cv
25.4316 40.4795 25.4424 40.5117 25.4648 40.5244 cv
26.2871 41.085 28.1582 41.8916 30.2686 41.999 cv
25.5605 41.9863 22.6543 40.8291 21.7705 39.1299 cv
21.1787 40.2686 19.9023 41.1631 17.7139 41.6328 cv
18.6426 41.3369 19.3926 40.9795 19.8613 40.6592 cv
19.8896 40.6436 19.9004 40.6045 19.8857 40.5771 cv
19.8691 40.5498 19.8252 40.5459 19.7988 40.5596 cv
18.7559 40.9756 17.1436 41.5029 15.625 41.6279 cv
15.3223 41.6533 14.8525 41.667 14.3066 41.6719 cv
14.7744 41.6221 15.209 41.5693 15.5898 41.5146 cv
16.7773 41.3408 17.8066 40.9932 18.5605 40.5977 cv
18.5938 40.5957 18.6182 40.5635 18.6133 40.5293 cv
18.6104 40.499 18.5742 40.4775 18.541 40.4795 cv
17.7285 40.6787 16.668 40.833 15.5859 40.9326 cv
14.9033 40.9932 13.9766 41.0439 13.0615 41.0771 cv
14.0566 40.9736 15.001 40.8145 15.4932 40.665 cv
16.3848 40.3975 17.0605 40.1553 17.71 39.8779 cv
17.7422 39.874 17.7695 39.8467 17.7676 39.8135 cv
17.7617 39.7803 17.7285 39.7568 17.6953 39.7607 cv
17.0586 39.8896 16.3447 39.9697 15.541 40.0947 cv
15.2842 40.1348 14.7129 40.1934 14.0322 40.251 cv
14.5391 40.1299 15.0371 39.9717 15.4932 39.7646 cv
16.3672 39.3701 17.1992 38.8369 17.8789 38.6152 cv
17.9121 38.6123 17.9277 38.5879 17.9258 38.5537 cv
17.9258 38.5537 li
17.9375 38.5625 17.9521 38.5674 17.9688 38.5654 cv
18.002 38.5615 18.0234 38.5322 18.0205 38.501 cv
18.0176 38.4697 17.9883 38.4443 17.9551 38.4482 cv
17.9238 38.4502 17.9023 38.4805 17.9033 38.5127 cv
17.9063 38.5264 17.9131 38.5371 17.9219 38.5479 cv
17.9131 38.5195 17.8867 38.501 17.8584 38.5029 cv
17.1992 38.5508 16.459 38.8525 15.4932 39.2568 cv
15.1445 39.4023 14.7031 39.5205 14.2246 39.6123 cv
14.6621 39.4414 15.1074 39.2314 15.543 38.9795 cv
16.7666 38.2764 18.416 37.7139 19.375 37.79 cv
19.4043 37.7861 19.4336 37.7588 19.4316 37.7275 cv
19.4277 37.6963 19.4004 37.6689 19.3672 37.6729 cv
18.5039 37.3965 16.9395 37.8301 15.4277 38.5547 cv
12.9941 39.7275 10.8662 39.5381 10.5254 39.0605 cv
10.54 39.0557 li
10.9199 39.4414 13.0371 39.3154 15.4443 38.1572 cv
18.5186 36.6797 19.9043 36.2285 21.8223 38.8086 cv
21.8301 38.832 li
21.8301 38.8193 li
23.752 36.2275 25.1367 36.6768 28.2158 38.1572 cv
30.7158 39.3594 32.1816 39.4385 32.9355 39.0068 cv
33.0664 39.042 li
32.4766 39.4023 30.9707 39.5811 29.2256 38.7432 cv
cp
21.9629 43.1563 mo
20.877 43.1563 19.9316 42.8896 19.5469 42.3818 cv
21.0635 41.8838 21.5996 41.1182 21.7334 40.2051 cv
21.9189 41.1035 22.6152 41.8594 24.2285 42.3604 cv
23.9053 42.8818 23.0645 43.1563 21.9629 43.1563 cv
cp
9.60938 37.4746 mo
8.63281 30.626 li
8.62891 30.5986 8.60449 30.5791 8.57617 30.583 cv
8.54688 30.585 8.52637 30.6104 8.52832 30.6396 cv
8.95703 36.46 li
8.07813 30.0732 li
8.07617 30.0518 8.05957 30.0391 8.04102 30.0332 cv
8.0625 30.0225 8.07813 30.0029 8.07617 29.9766 cv
8.06348 29.8623 li
8.06055 29.8311 8.03223 29.8057 8 29.8096 cv
7.96582 29.8115 7.94336 29.8428 7.94727 29.876 cv
7.95898 29.9902 li
7.96191 30.0146 7.98047 30.0303 8.00293 30.0361 cv
7.98438 30.0469 7.97168 30.0625 7.97461 30.083 cv
8.3418 36.0244 li
7.47852 29.0596 li
7.47461 29.0322 7.44922 29.0107 7.42188 29.0146 cv
7.39258 29.0166 7.37109 29.042 7.375 29.0693 cv
7.73047 35.6768 li
6.97852 28.0078 li
7.68359 27.4277 8.51172 26.4238 8.93262 25.481 cv
10.3438 38.3506 li
9.18457 30.8564 li
9.18262 30.8271 9.16016 30.8066 9.12891 30.8096 cv
9.09766 30.8135 9.07813 30.8379 9.08203 30.8662 cv
9.60938 37.4746 li
cp
9.19141 24.6367 mo
9.19629 24.6421 9.20215 24.6479 9.20703 24.6538 cv
9.18848 24.665 li
9.18945 24.6553 9.18945 24.646 9.19141 24.6367 cv
cp
14.3789 24.4995 mo
16.334 23.1851 17.8965 22.6353 19.084 22.7759 cv
19.5859 22.9063 19.8096 23.2754 19.9316 23.7188 cv
19.3945 23.5815 18.7793 23.5459 18.123 23.6299 cv
18.1816 24.23 li
18.876 24.1763 19.5059 24.2603 20.0566 24.4619 cv
20.1563 25.3159 li
19.6055 25.1406 18.9639 25.0869 18.2725 25.168 cv
18.3301 25.7539 li
19.04 25.7114 19.6816 25.8188 20.2422 26.064 cv
20.3398 26.9058 li
19.7852 26.6909 19.1309 26.6191 18.4209 26.6948 cv
18.4766 27.2676 li
19.2061 27.2358 19.8584 27.3726 20.4287 27.6729 cv
20.5254 28.5049 li
19.9648 28.2412 19.2979 28.1475 18.5713 28.2178 cv
18.627 28.7803 li
19.3711 28.7617 20.0342 28.9346 20.6172 29.3027 cv
20.7119 30.124 li
20.1445 29.7939 19.4648 29.6729 18.7188 29.7334 cv
18.7725 30.2891 li
19.5332 30.2881 20.207 30.5049 20.8086 30.958 cv
20.9004 31.7627 li
20.3223 31.3467 19.6299 31.1846 18.8652 31.2354 cv
18.9189 31.7998 li
19.6953 31.8193 20.376 32.0908 21.0039 32.6504 cv
21.0957 33.4424 li
20.4971 32.9229 19.791 32.7178 19.0107 32.751 cv
19.0674 33.3096 li
19.8525 33.3584 20.54 33.6963 21.2031 34.3779 cv
21.2949 35.1592 li
20.668 34.5186 19.9502 34.2588 19.1592 34.2725 cv
19.2168 34.8408 li
20 34.9199 20.6953 35.3232 21.4082 36.1396 cv
21.5068 36.998 li
19.8223 34.9834 17.6748 35.8662 15.2441 37.46 cv
13.6719 38.4932 11.9883 39.1611 10.7979 38.9229 cv
9.44922 24.8691 li
10.3516 25.5781 12.1123 26.022 14.3789 24.4995 cv
cp
21.9551 36.207 mo
22.7617 35.1689 23.5361 34.6699 24.418 34.5791 cv
24.4756 34.2725 li
23.5225 34.2549 22.6729 34.6367 21.9648 35.6064 cv
21.9805 34.6357 li
22.7852 33.6025 23.6064 33.1064 24.5684 33.0488 cv
24.624 32.751 li
23.5898 32.7061 22.6855 33.085 21.9902 34.0537 cv
22.0068 33.0615 li
22.8047 32.0469 23.6758 31.5654 24.7168 31.5381 cv
24.7705 31.2354 li
23.6572 31.1611 22.6953 31.5371 22.0156 32.499 cv
22.0332 31.4893 li
22.8223 30.4951 23.748 30.0273 24.8613 30.0273 cv
24.916 29.7334 li
23.7285 29.6367 22.707 30.002 22.042 30.9434 cv
22.0586 29.9131 li
22.8379 28.9482 23.8193 28.4893 25.0098 28.5186 cv
25.0645 28.2178 li
23.8027 28.0967 22.7188 28.4619 22.0684 29.375 cv
22.085 28.3389 li
22.8555 27.4028 23.8945 26.9517 25.1543 27.0063 cv
25.2129 26.6948 li
23.877 26.5522 22.7344 26.9268 22.0938 27.8149 cv
22.1113 26.7622 li
22.873 25.8604 23.9688 25.4116 25.3047 25.4937 cv
25.3613 25.168 li
23.957 25.0034 22.7549 25.3887 22.1191 26.2485 cv
22.1367 25.187 li
22.8926 24.3159 24.043 23.8579 25.4521 23.9673 cv
25.5117 23.6299 li
24.0684 23.4468 22.8232 23.832 22.1777 24.6333 cv
22.2383 24.373 22.4092 23.8628 22.8418 23.4463 cv
22.8389 23.4473 22.834 23.4487 22.8311 23.4497 cv
24.2666 22.2437 26.7422 22.7944 29.2803 24.4995 cv
31.5508 26.0244 33.3125 25.5757 34.2129 24.8657 cv
32.8633 38.9229 li
31.6738 39.1611 29.9902 38.4932 28.416 37.46 cv
25.8818 35.7959 23.6504 34.9092 21.9365 37.2832 cv
21.9551 36.207 li
cp
36.7549 27.1182 mo
35.8613 26.2559 34.9121 24.8823 34.877 23.875 cv
33.335 25.7754 30.7969 24.5034 29.1816 23.251 cv
26.2383 20.9736 22.7578 20.9033 21.6689 23.2754 cv
20.5713 20.9678 17.3945 20.9961 14.4805 23.251 cv
12.8613 24.5034 10.5293 25.4526 8.7832 23.875 cv
8.75195 24.8823 7.80078 26.2559 6.9082 27.1182 cv
5.92188 27.1182 li
7.43555 43.0107 li
7.6709 43.0107 li
7.6709 43.0137 li
13.7168 43.0137 li
15.7969 43.0137 17.3516 42.8838 18.5137 42.6494 cv
19 43.5469 20.3467 43.9443 21.9756 43.9443 cv
23.6035 43.9443 24.9482 43.5479 25.4375 42.6533 cv
26.6719 42.8848 28.2734 43.0137 30.3379 43.0137 cv
35.71 43.0137 li
35.7168 42.999 li
36.1973 42.999 li
37.7119 27.1182 li
36.7549 27.1182 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (kold) ()%%Title: (UVic_hst_4c.eps)%%CreationDate: 2/19/09 9:00 AM%AI9_DataStream%Gb"-6lZ+#fE?P/^r=8#:6tdPe>ka0-nO3E_3*r^19/.Znm;Qki-k8,o$6U]UjCkqss5gX@h0f9bKQe/;UIjBcT'GU@XK9'7<n:>Z%?+p.1p:E8%^V>*h^OCWNXrMhh#@IBP\?LAReUN#=c0HJ'AM1&=((4H9lo^MU(U<f<O*H1C#L?\jHhHq.p"L"lIfJidlQ:U=^:Sad%rl:WQNdl?Mp@-7lhnqB+&-)M&mdAo'%p*s.?i=^7lLGb]GGdBDY>=WDhnT).J@Z>)h=%L1^:F./T0D-3rq6/\++b"/p:m@@J,:Hi%"h!?&#63]MX1OGM^&Bn=q>.^1gr%`.iYVE7o_I7n+$MqSTHP*)Gl6[<ro;WpJBIPkJ,AC$pMYNYnG_O)2t,W&O0?+^hn6]'iU5f_%f7X?HdR?:n)Y&%O/1$u3<6>8?bTYPVaB9G<1%Y7>2m<8ZF$RdH2fCpnqsfa&VdI2a`Q5Q:s5D]kru8Q49#:N9rT<.rlhA/BqrS!&%JhU1"Z!Y6Bme%TbD9ngA?=HD6?+0dq!l'$Vrqk:h?u4`VIDe>Kr(r?""fT.`q3T_%),'aV?iBKjm;Lk[GA=6U(Fc2*80qPdn)M5N%f5!:"!gE]@7J'#n<UfQO9<Ya.2qEZTkR0-S_lmKVIeE]bpM\pfgkGe3AGkD?X7i7l)gLlOiVf87qUfA'./\uaFA[em<W@-`!=9i3%]RD@o!Fe+hZI`U1`@o!f(]<EV5[SG:^&\XGQij$%!8V!f!>2uXIehqK@&M"`pogn$fAZ!J+-<9,r-4:;;o7G"ipYo)Tn"&B^[YOs%nQYJXgX?J$k,2+o;Lm)H^Tga1==U/r8aEGmbLDD\.fA5R[:6+=YnVZ(hcT/g`)=W#5']9M2od//3M#ZodjZSjqK0UC:FCUG>KlKr%p@'$s>C9>`pO;oFIq'qo'E6!LfI-&8Itp2(hcL)0KYOeLM@"_Iqh2`S%XWlDYpRI(f8Ml0hq2lFMbraR^6>hDn&J>Y0Dpf@:+(_Z%pgD8_a,EI,')q#@\`_aoDEG=ehi9;?1"$^4K;Gf%p`"#.&`d9iG<B@0(JA3:FG(M^r%.OPJ)_RCNlN5kF3>/I^TeLH%tF1!16jP"%q>L(XV#bDCdZ9D+[u[eSV&4-.([a;m*a?qWiqIK<3aQ&XJ$9@T:+6j'LJMupq-32-rl.i0hq105#sX?_Ymg>Dq+<)?k72!^hn[aD%1p"'Ye:oPf8mtoMH(e`jGj!X4f(m"<2f-$bM"Zh_NhuC8>WY0rht%AfS7a0I1QOQVL2/cr&(>HhmJP3!Q-RrEZP63+p6iLWmQ:C+%e")58VY<qg/GF/"(+CU#l&H3iX0u*ebOtFief+D$^W[Fpr&DaSoY:;;!oNaer3Lbc,=D<7rlLSsqd9=OL$q[^G8L(c]]=#-?iIUI%iqr_AJ!R:@Y8Pdgo$>PihtOn`A(hIbEu[:>c/Zt@HH1N/IkD^.FP.Ou:Z^()_T6Q-3F,,pR?DJ`f-Xe?hogW'p+H\3qGb>?7)!j?%''m+iSbSDnV\B%ePp,X7qXt%fS5*0M>g`9PbD!!9Q*9-VT#/h$n`S*4[6_R(Aq67J6_Mj6@B$+rjV'cr;j!NT[Y:?>2ZnUIBs!6E%Oq=dT]KL:>b&o1;,IUiL;nJg"cN1f&fC[QMpW!:=?(fLjHGG'KpES6#Q;.`ik7ZV`B(5U%4h5T&hjm]V`d;qhQDlk#po2"Ma,O7l%ml:\t%#c;ojj&.!!ll'rc@+\-ML1^=JE%32_8#UV@6IlTgMpbC"Rt7+$<fSX_\J4=;2^ADd*B&-#k.P*piQ/X%`/R]:\n(#Kc7,)%:&O\t!'e8,n3=>kko@m`BU*\>StT!4M/ZVHWE_gT!M^Z*M":X?2i8DY)1VKp`eO1!q?Lk&N:=H!`!B.is'd"!\L[Mm'UGqf65:G!%a#<^#S3bilY\!>&M0fjU^Pi*.1P@VUD3XK$K8^2Pk;N`kVXO+6p)BXB')6(?'k\n[ikF]ioU][D$/^^?Q8seCMPuf=,B9:LRIG(W%2na:J\KRL?'kNuHIEZU4pF#oGruqmK%HXj-<UhD@.dIaQf;[!Oj'-K@\E*Do@AVMiF$dp"=pCP#*a9,f/Ngm0qjdceOFR]YH#>AG%H%aB&LbplI3k'K\(.eJ0LY+fY1ZROq3jnJ@NDQWJn<'o$YE[o5)/SX0(#uXH/M>.E1@TrtX,]8j_L@8rD8QrsC1+c;'2lD($+97R%J6F2fa]%581>ccp<[6M,d/2Ba?Kk]L!c@WlauijH?[-J8=Sb49`0lFb;%5J_)kC%NL\a2O#sP\CV-FPrZ8sN*ZSRpMNo9ef<.\Ah%cR\8SH/:L<?p,0Z,G0'g02(=q3!0c+3a3rtkr@\7H!G!"3jqAIG@d/8JeP"\XPpHn=^-`"kcj(nEG:1^jfYZS?HXIWJ>Qgt`eDR?%;djM5\1:SF?Q/CQYC$6>/CAX`LemDO=@5)>rC=Oig3n#lg?q^_%uh@A3i*J7CZ?[/V)\M<5-)uEcQbqD5?9h/opmWOk^V^/^t8(>%mh#GUf6FL\BI$^^(N$_2On&_TXF-.#Y)a>cBtS#!<nO*0ni1>ZL=tg:Nm6TPG`URMp0BsFh>YHm2pe&-P5O4A"sri2WC<e$4gI/E%/2KfZfZ6GL]j0/C`pNZKfp1<lhU:`U4R(@p'>??G!#M('K+5VgP)8ZM5:=$#-2G:X]0LLTel,TFl+Gi41pipaOWHIuaV#IcVTI]O%Z#kJNarVV/nI;$RFGdu@!IaGO0D0heo!u!\Kk1]tD38Q^S!*DNB^goT(=LoJl.UOJ*1*CF?'_?p?V<t^UD9D6rHp$F1je>lau-T`%nJe#F3m'Fb@!5npaCKAuiEmQN`!FO%kbI+_phoHaoE>,HZ))HZ\TFejP26];3WTutreL$H=>StElFT=lTR%CJ'upr,lJSfC8QV1L%G6od)K1B$_mGU'iJ';%0.n\uT^Dk-Ij"FRi[t?fb10<<t1Z='Y!M:.?!1eb$[F'1,pE$OsWL*mJ`*sfbirV@%SA4;hVAG)cUPjL*%kQ\1gWM^`HSbO/g>^PG.rG9fgO\SE)ZQ?=W:\-Qu^j7g2]9hoR!)jeMp1/Y147SKSN5l[Q46DVLO+.Ja?Q:"&1"=ccZ@GDn6u'hs%WD&=pCl9CCgi:moQ)d:j/4,,V.aLq\&3nmdBZ"E%:WEr\O_j.Rq46QnN)+5Ypkd1VMO8-'^RKM_n7A'%pb(V@2@cQ:Q,\r<i)pm:%_RX,;i%o`TU6aL+XRt;22bNEDU5U^C#EGa'Ja>_bG*]ec"=;rX/(!;V1F%NHA=17H^2@m2&C\33.2M)*dN5F5oVC*1MtF_$q6/.4%m.ZBYBXpZFT$^^KV1.%"ffnL990fX.h?i.RJtqX4Mdl'WXTe,;nQY'+^t0E%,NdM\\LbGe3Of4*B.coK+6`WCPSD=`Rgl0g&Y!Yl%l3SigRC^n:Uf$BaFIB5Yp/4""X=%a74P/g<ASM<0D'Djr8g3OSd$j>XJRnuMAa8rO0lc0X9.5pHj>Z1,Z^.ZeldiS+?LM78;$rh1%U=".C??rLAWp,PFmrc=?j,15DVJ3$\W74VO&'n\1r<=KCkS\/G\MD?KYa#PeRN(Cih'^4T7;7]a<X8MeG\!F\pdUg*bZ!%1&0?pF%9lqrD4U+SS/H)t'eZr7]nO2(UNNk3;=&gi-oMf(4cH$5@oWd_oABts<P$5<BS=$LjfbQ,E%j%]S8%.)!3(q[ZicFq'%GQ!kRm'KV%#H2tV:5.aMN@I,Q4[Lci_pR$Si(*E`q<F>UhAW,^`**Jj4Jh.j=,0PS4Jot19BZ.R6ODJqQ$6juU+g%VoYMq(-J:(u$^GMk]M_DN%@9_,4?M)!*!=$!(5^k)BSbAGU^Z!TMARKt6_%+R*Be-Zfm#@k*/n0V0q7j5a=gn+M=>hau>:ptWaTh-S3dNMOb(6]bZNp=r^AC<c%5l#2jJ\Qq0g!F*%;lT_YgN%&?):).A*,SZ4hDm[AnnFnF5&/9qN-+5pjEgan>FjZBU:I0M!BW4]s4<_bnfZFdadV6mMq.p3;\2BR%mo\].`m](J1edVqUtlMe-SHJ5L?7FY4WD(UaSBtMmu1Z=,H*X>f@G><W-<T]=7=cCUAn<tknFO,/jl8q^U$<[eAk_OEQua,g?.Y`%1DtK'es>WB\QcjDH3u#796)m'7sR;p]b&qkLOh<Z,5qc65bCY:$R&jMDu*h72gQEgW@*U=e=OXWd<(uRhA^l@q'Fm?qjV@Eg"EI\%hI[dJI6YW&YDIX=NFqcHm(l*l?`2+((GWcdGkaMHQ..4ICasfjSGS4[-hPUtCPF7V9-B`0q&dYl+tp)tP9eQ9[ko#oGPR-^=0A&f%o6Jkm(YY4un"G^#0fY$I_-p\gfT)luPE#\@2;,^UO]D4\DVfht0erUjq!K2UR=<Y!R:!^YGPCNPriU[HDn^YuiStFg"[r+"qknX7%qTW4Q```:t^+$hop"`.5l6"ltqtS&^hYuKio!?O.hYmHHiR]_Ir:+`Kp\O9$5CS"l(uHD0$%UmHq<9cS/mc9fiTga7qosJH\bc<p%X5Es'f<7BR_ZK%o^A[ih_s>>nqXtZD(VN%<^&Rlf*tQ,3p[52lDuQao;nrOTnp_\Kpbb5(p/c/Me(ZfQJb>KbhgbF%HOH'%rs&8h%YIXAebIbAFhnO[:_]RdKg3^Z]p[(]Qh']l%FSGA)li'$&lJEtNj^7G*s6f="O8#1`#KX)U^Am]be_TP0s753*fCt?XG5_7Jn(uq4%BHu`cgRhg0^&)5OA:qOBqq^5'?bZR!TrN+"rp](;G;)Bt5'Jit]DhnA=qBNin`::bWOX,MGbUAY5(S[]?G:j`r]osR-*eVc?f5QQ%94D#(2#[t%j2h(']NFOZlKuA(s5Eq"n(n%?rV>Db^O?"Qjo+N6%c7ZX@)$%AJ-U.7LTBm0Ip;o$!@A6oeEM4h3aI>0>u(3[:@T#n%*g@Oh1,l,#S"&`5j3?-!j\<E;+<8g(]EpOr`nf8d"(LobqYL&5I<Bs`?*DEQdPY=NlYu6ph6f\rk'1s[4s#bda3.sUQ=E+U@m#L@%5<;Wsc.2(Dk3Dg.G]e.OGu_&j<PD(,nL@f>.sGR.b]8!?]Xb\h4C2?"Jqa:AD8&\Opk2:ikq;?L-q9m.?e8f$WgC-E;DX&ae51R9%eQ,Lqb>#N"a)V>u;(Z?.\YKj2-m!20><qL$`UK7unn"u7jIB.<pRMP'B/AcKkpB]6A%G:!WMYh6L:!h>Hud=UZc#eTM:_87Y<YIR%&O^;+0qo`q1_.mi_^XAolfJ-KFAi:HM;1X<-8uX.b)OC&EeCX=guq@M9%\#t3O^#5mhY6iFb)W*h;F<$=1C'=*UXJ_#s6,^_N&Wf%Y]J=-KmLgg`*RIKZ)?+'"?M`g(H]iH`_LTaZ/aV^lo]E?5n"#/!"3`d,m*0@q@5[)Aqbn6:gfV#%PA-UnN_aK#gH_'TGA%Pi@fUb%I)XD.N6T5+pd!6(%PI(,-hk*^!H]8G\2c]kh)o^`Dm*^U3'MXo4a\jDo$OL%HBiq2j%[/VUK9L#/b1&KHi_+OiN(jA]a)8\0)WOj%fKoVjL>oj#b1daanEoesn'2`Zq@T_^(Q#mur'bsMmjiYBlFLt.jbFB1Np/)"V9K0nHhcbg!rG30"5oMi^d@dgnFHV?U&W/Y..If0%)pC+*?SJZk5!_<JQ\G2:o*41^a:m@:41Zqd$1,*^F$B`0n]j/\N'5i5HYni;b$G-"0#/]qNPL=^Fk0a&&AP`P$%5B$N`U-$EZB`%%XMAcnrO7b#,Oqq05e!WXH<<n&2>g;i+,K^Srq6/TGMaEYrpgt`GJ&S)]FsU+O=RK:[(5bQ<S#b'^Zt60H1ngqkZVB24Eb!pq1>7#%k4=$skH<qE=.ar84B`d=<hFI35?8r,=N#HKm<#3]Z5cMPbS0fs1,,5\jbul'fhNR[P0eH7<Lne'clu-hfaon_AjqR3;h5dKVpKXG%Cl&uBZ6j*WaI\JZ>nN8e2MI*i/B"YGE@g0ROn_s"hW9TD3T=KBA,$[iXVDl(=dD?>g!`:5.2K8L0^8l7-gY+;biKn[(1TT+gAP1J%_4Uc!X;)@VT45F\cBWUWEomF[^Yl;dlghmXlMS&sO2k&-Y0UCsq6,P='=dE"V+c46ZYVp7p@J;dKkqG>dPa7&R]'knQ<?bp7.l_.%92mK?Z"17_jR0$E2Ka&B9R_jKl1XoK6>SfWAa@sB=C*kVSf:J_jljkt9-5"^nFP0)q1IHB3VbG7o<i</1etdEj3&J_5JtI4`5.cL%'E:DerE%=M`>\aQ6,f8%M>jH2W_+l/^T&Nb%a@Uh-He+qA3NI<+jl,<A4WFDM3fB<njGt/%IHbLP%f21js:q5?t.!<ai["51G7mW%!Flef9f+g]OjAm.:,G):Brg5.R@e;GU'Z]H.%6iGLnZ>U`[I7M$X'9AP9+Ga*876&RBg[eeg]@OCnY%,cP,sgbu?T#fi08-FV/tc%/QT/[`G/trPq?(F?+Y1&Ws("3XBMl1$QHC(=&"*Xl;1E'RQAp?i(3I>@!9_:)3!=QCGl9=co=OdZa6Nk3>$UA)LiYceCr\p#4J4/%G)LRMH'cO;en4BbiS.%5ZaG2&p0D:jQTZMgdg<]\C)-NF,d9JK3X7/]XKo&kK5+.`:4_1KSm3`.9X2K'd`Kt9ND>jLZ:sl./M^%Z%G[9G<_UE"d*.;GkH-p9DeKR0pSJ4XX1SIMK,Q=)p)_T*&e)s%/?Ob55KdHluCTb,[JO3Xt=[;0ik<Nn`)tDi;K+mE)Ga:kr8*UU(%l:9RCg=#sUG`]Q3\@Zl1a3M]Qg=f^QYI?94hn_+ZGh*q-mc.FkEUl6Mk1QI$*D.CnSYZO48quC^-B^n(o1Hri.$[64E&P7Z.i0Yg%gmt(0ndrBh0Y)n$PT9CYlp^Om*`BKJ":s$H=K8p$_uZ-)NS=9t;qt.*]R9>Ep[A+Zp!Q#iD5m>%T><0A\j_tKn;E<EdH*CdU8(q7%Gn.UQ3-ghQn;E<jApFm$kW!":[9jUqb6?hCiC_<=lNa&.EJ8%,/O',:^:]>E'gBA.nt^&HY);p'gfl`6`+u^S1pY<>?WKq^I=Lcs%?K95V8%a!aJ$-7_IeJ0-O#V"&>aDQ^5>7Dji::M6e:g::g0X<#CX6;9S4:[>cd@$qOnb"6792OTKF"Y&",j+n.^";5>Qa:OJZ3:5%Q$?[c&bhXpMlFL,Y(5V=@l,G:D@6O$"&FfiRkjK3$G>Y=!N'uKbj,BYV?LRdM#eeS[gYs5@]BK;HIot1:;@&bLAq9QN5-Dh0Za[%%`YEI;CZ(d3R"-;TP@&jB7UWD;fPC_7HNe6[)VFKbB\rkQp:+T;fQ.6T?%H9g!SbUW+"&1@$`]<o^)hj?BAi@rpc[7@7pu<TJ.)Os%^k#;f+<2""M#tQR&qn7:KZ?eMJ[&ZMTQh#!&HiMsj]BYZ!g;^bkkPA4Ns1C$(JMjL+tA5DWZ\UM5]g96<M)O5ZlmdZLpdR5/q^+'%+S)[#oN_Q1T0P';TV6[nN=f]3#$G(pAmR&34Kj=K:S@2\&?;>QHP3I<<16?JUAY`;X<SXA6l(IrJad7igF''f5A>!2iAKo`j?*B#%=RH,/l1-,EFCrgZYIC(7c7Im:\A%_%f=JhS7)Y:ljc^d387KEC4BCB=Y@[5&I)a-afg"ru='Ztp8f)K7525b^<[!IgQ^CQqf$j19%k0opp[![`+ZtDNR?Xc4d=\m5-Qqr([e++gIPGp?*"t<RRH3N246`H9gCh\ocr3J5^jd`@D\XM)i:=]2G9kubeC437^[@C1'5$-3:%cDb!.CKdf2D8l!SP5\<Aj`17_0bnO22Va?`HmFO<T`E/&53rDN:=j!lR*Dot)q4WHimF0dV1!BF>[,TEN;0C3r)qR502S0&`G",A%*mtdq*g8HdbJRrfVuM.=+[99`-@@F4jkR6[jYC)a@g*peG5Ygpl<*q-o7K2i5O<CMm*j3L%C(0on$K)rbB%s,<P;S-b<)ikeacu%%BiV@&kOMBKHF5l%G?UQd$QHerebVD3jVX11.sNKQ,KrI$dKPa^FT(0-]O$e#*/`C;Zq)&aHE\+8@k,2"?5Vm+d;+Rqf(2]eY/eLP%,m(akn>mqQ=O0@2W#kB.1mKbn-/=<LLIuPLes=&@23o)[H(`N^XA"'>iUuNK_pus)LL9u=lXdeaWr.@dnc&iRj6n/eJ%n+$97!t/%QKN3YO*8tB*%pL':0O7,,sBsRbB(1h7ltG\4I7nDI%I56()OLC^#mcGN-?#qSZ`hP#h-#OBS7">'%jXi:LlO/hu<EI"#:kqJ9A6T%(Hlg#9%\tiXirLM)V8P$&RBH7='g(0<Ij1m;Y-Ej?r3FIqn$5iiXOc<jZMTqX57?6h1,8mr^6KQE;GX0P-*EAkLeGY<?,Z'__QKT%p=ojV5JYFJ9NT_ZOV$=ogFk>0RU3C-QgMAIle&B+FoacB%cJBCMD\SG2lZiPFp5Ec]+SHYdC3GY>ue&NG$VNAfWOO`h8j_Bg+me0%Grq18POp60Mdd[8rfX1k2U4?&[a'N=T;O@#mk3<YIBe66Fac?W5_!rSrirm+AT&IcJc-Pb4#Vgf(s=/90co!W_=Q4(/4+Y_7n@If%<bL`0S!iR6412&c'98tm>%D+,A@cSU8#D3g&"OGA=?9Bq&q"QW9foPGR[&DgBRM,Q6k#\j4u3(0g37u[epg$hCe+PV#Zuni"3H*b%qnk2./ln,?QaG0=-rT#YU,3;##*oajp;ogf&Zd7DKd%cq8QN(&\>Dgc'?LZK)NH`:#Eg)Y4Yjtr=-=^X78T#;,e7'6TFC?;7j>oN%,(N5SS9-@j#o=@1=-Po,>#JW-fo9ILmBUrAr;eP\p-5r*DE"jEJi?-fV6&daD0r<'O'H5q>AcML;Ia.XeF]<7m@fVi'Q&&am#YH*%Sr2jR?E]+NEk9/_2AVj=I<4_fF.k6\l:^l[d%/oZ\))6n;MkS;f[obcZ%cr'/^G;MLe?:iS?[f>.a)nQ)BpLEeiqc0[q<Mg`E9Yd%9n)e>1t;I$or'D:;31A0T(,=An;fU059Zae">^8loUifk3'53+3.Jq'9od7LA3;"A`c<E7k\5T.]5I)8m;1ME7Qn(PC"_/G`;ZRp%;&XgSh5f'(9'TRE^8:7''!j5#*[^P7FYD4oY[(nsQXH;lWV`1+j0YHfR'n9mk)*3ce((A_7p&f]ElNJcgDpUCf^b-e`_F&XR`"u:%Q/Q?#De"IVNVaAA=/g%IGKqsHSN!U^2J(O<dl6R%LQ^@B6WT]+ZJ)\1Ki;<I.C5"M+P4;]RbT5@SDf3FkAed^S54$l>uKDq(+$YH%+#\pLS&BO^bVJN"]?t-4BL>JN29)3l-9BsGVOM+<UQ"Obe%K;WKhtQumOOJa1i7`1mP30227hCuM3eKmThT14a%#gVkQWm"KVf^9%U<n,r9)!14RVklQCMA/d'k([>XhX^Q4n4N/a/)Img:"<W(7ra6LA19&hR4gogk&3F]i5_]MTN[+R^Tp=%/RP@a*..<N'DHpb&CoK%mqEG>f?t](kC!!A(OAlCch!cls('`6ZL#(t*ql;!pS*`kA_B%@p-#BZ?cprh6N34G3E4Q^Q.`&rH<"Um9)#EKDe0OD8oq0E%[QNl%ktW":ZZJF4H<S8=ZA?+]*A6DnBhfIf]*(_!OsLnD;VWoq0qm,[-L5ka@ok*mrcopUio*98,Z;sjZ%(1Wpj,O0$Y!kZlc8>\i_PB.%faju`G*JRG8(?l/e?&8)4Y<OCnq53=-HbHa2JGAiAM^4j/%e8`kh,&+^QSugJKhb4$#Bh(%bG6r5ihBD^&ScQ_qO7jjW7R\N:A+F%nrska.7s3kWc!]F:7.'E;V&.<AOX"5"Aiu^PtrjQ4U-@,0?m(3m"K]RmK1la5P4]D;P17R6#"[EQHrk:HC8^O1R$mLi76:hb(B>o%lt0&<R!+d3[u"!)9HNTs)bD1]A:F?h5JDVqp]f&j#:^ha%M!([s,'6o6/+S$qlI0o?iEC$rs_0k:B:Ci&.ZH;r7h6*L[PNJ0AjR;%?I-=A;2)Juf4s_t<8_qG%e&7PL#;AFO,<XcX+=IEO1:p0OlPEHn0&XNnm:bdgjtK<HlrPj%g8\sl-h/1*:@:D$jaa,6#4A9G`rJ6%!c1]*a@RnW:KU<J6NF,`+6nj'E^+:@)g:G*C*&l!>.\[R_"<1Y:tnT"$uOhbpk0=WV%<79;d8KfCTBC8>Pk)$-hZT'$i3O6gHg'B%F)sE+1mI6O#f,(L6ZZIS5>K.>YBN%-o[)+RNY&P5Prpn4K^Nqeoq=S/N>V:f"JD[cU#*M_`Jk_u:<0fN\2ANe?@>eFQq)]kkg3(Q%S@_!oL0C5\ou9_ND=kVtc.q)LD!afBH#K<=1fG`rgWV5j`kAHWgsN)3otoGB4p^n/VkZn[13L7YB%`hM\\lp[H)d3^,cF6Y$%3Nh%ka+K_$Vr?l,XHW8^obSX_<^f0EuTb!#%F1k@isn%:RIgkkX3%';f`mLE+(O][nidUOts>!Og!!I3D]E*OMj8JoMlq!qG;+&[eR>T%%80/QN.L*MY,"1o]RT\G%sK\Aa7Q+D%8$3YiSS9>7st0)r^%VRkbp!0AEe`3^FTJ:75BtQAs`s!\M#Qb.F<<YcJ_Q&g&:DNX/ae.%?MFc*02O3rB14pEN.c:X(Z6tI=DO.*XtHN.>eF:sko9J_rB6IA4tXfmC?VLRR9sPl\6GjjOh5Rp/XQb8_P-qe/kWBTmpJ7Dj.k!9%LkV.AY\h5\oO>Q)(F=En2[IJ@kl&:pke#O'4*tBcO;Ng/KnTp"0cF&'I0Vn>@n+Wd#c<J<)6!0/:TE4*V@+&&R3=a@TR)`[K7UAU%:[$L.555L-'>Hk"q81(7%ab'*o5q\MdKb2h;5Bk(&I]LEnKNU_^UYrcHuRL^![U[H&rGt>]\V@45atW`18nM]d-hK+KQ-Bs$1/dI%ieT]\!sq6IKLGH59*7C4TZFUrgAUNX#*UrR!h$<QH9_,'_5-*D?J$+np3o8t_A'UY8$QH,DXRDs-qK+)RVK[Of\R-<csT0g/m\5j%ioY\8[0C,MKKii\Q-J\]bR.:#G;/]POuE'PN+ju6;@YML`43?"Au(#hb3JK=I+DLpUsQ#gB,8?**3t?3gJaV#15c.nT;1l_\\Y:c%\c]CVcK#e.FuqNT6&e/Q9+<uW,L92R?jYZrB!0nDO-jf=*Xn^%'M@$5dV(B>.#^YY+glh4?+9P1eMJ+?(7!#*<*A)h`7[CB^EEYF%C>.I(F.g?[SciTb0LVE-@BM&\nI0K$>cHKTObkJ[k.M2+Z3@cR*YRcBSoCVj6uSc<E#,sOkB\qkUVah3I7b<t6CWhT.EnJa/"no&%i.P:k6et"cnr1G9D]=Jf0a='/l5"\K$=d=LTX`X)]`W:AcF(1f^!.IE97p[HXGdUe0'Do0cPN`4a&\Q4o`t[s"Qkf/gYBCJbXk6a%_LSG&imq1qBBsme5qbo%@3FZ1JU&1Tb]T/Llh^s68`FA$b[,N!o`DF>89T'H@JEc#1_[r_<`0Dg\:LQ6hD,=Mr'2.@P?#6,GCP'g%\GYiII=9Qr#XrJ^&tMC-s&iNs<cYC9JW&<(PLhaZgE23sUYa$BO^:ci;naB=4'&le(7k[I6C@M_0L5M*ZoIl3==q<^>nB7>Sk6%F%)IlapTiJlr&+YPJ;Ajs,2+6:G?fg7?Tm<g[=4`F"jR/:^!+eG6+"jX1INen[4k2o$J>a\H/pIGt`%m?%f7G&F6_H);0CH1sG!I1R%X:Yb5M?EH[oaf78%@*100LV?PO%q8H3jZ;"k>,XN@WR]S#OZ!:JWq9`&+^s<p]GWS'Vk),`?nutQ;I6iH>@k,OcisJILlL8V]+Yo%+"pg:oN@CjH7]0%EUlqEkKp1k5Q@@cEK9Z")'gk[$EdnZoU&M")kqtBNA->_Z4u:OUNDN(EnB)N;%Q+&[0MPG\CO,Gm?Ig:k/`0B%>C4]IY!X,,,`'.s)iIrI&B>1hXT>\9nb$Y6_rso7!mj%$.4:,mD'@_)Y">7+7I"qF=7o8n:T\_S=)YfV:X7t8PgOSnTf)>Rhh%:/%4>H8]fapH=iQ2u5UC]S%7@jNB=7n;Ydn\(<Lb"QYL\>!?Fk5umiV->Acg]T6cJGbAS+kWmA7CIgq"]=?^pK%K8s"-8?j@8H.RD'G%W]E2_)Z7HYoEXSLW`-2hZ0NC)Ri[IJ6C%uS7`L0h`XljP4?Blk_r*)8kd$nDqGi3S)d?\M&3QELE+^.g"hhtI-Yc#[^ge]%3hP./%1=:7<nicJIa,GouU/BAHgXKpjj0-!:qWQSWOk110&D+h8(1<M$q0"<BjN`A:a$a?'-5?_>b=!U7_AR<`VgZm0D,8>,.lZi*eK88Y%r2;!I<:*nrgT0F_D5KGO>5\SIcCtr5V#j6h$+)*V)@\+$4>LF[q5cOARNNQ7!MqqZZpKqt`9'3^,,IH5m^Ob((+SB6?Mo+CZLlf!%`.@$p)FO!F1>$@$)^n\-I)4%.3i+=b9^Z6W,YZJo;biq%:L<6!8^`.g.qLl)Qdk+Y6-6_A,0f%9>6CK?O0"Z[(Hs#:[(4iLTYPea%+m4F%fs;9p$j3BIL,u;4F:8!RX-0AIY;*C&olU\JdrT\4.JM"ea54FA)t-EoI,+$.LeL2:W+]iu&Pr'o`"G9JcPPHm<o+>G_if14%rXeUo8KCR26$59?#.8997%'!foB`cXM3=+0"[T'8TkG"lm#g9Ih7J>mdQbmkNm1["^UB*2p:/s<*O\7!DIl>Ajr-M#G^Qc7+,,dI%qt4`AT0>I3i!Hb,l:cPF01:J*FJle`B&Wp`+/s1)dao64eWGscaY;6!8Pn:ohp,$KVikG,'+ON7&/?*4SI4[NL<uDbLH`1[n7/4;%]Fj__nkNucbX&4jh_!rFG!1+u:lBMWp]/K(-6n=eoJND+5EE_"&3iABLKaT=!1/`@Apr$dp"H*KH*)N[5J4#m!S&U%25=;/1<QE;%U_XiqM?]n*cT2ZFCXS&-($E_U'5.._L2[gudBS6uk2:O(^h<Z6)RF:%1\Li1N0!Vb)XAaBG1LMWD;?8a2i4Lr4_Nq=GD0cQA83/R%C7HR7>+jSHSf3$sW9c;i&a^i:f:k*^Ou*]$<#`7(h1>2s,q+l"&_6XZK2gJld9mQN0Vk`n)H-WabKq*XKU.bUMfrJj>!uNueB_BS%3qQb8UO'&XE4bP3eH+<GEHmQ"$^4HDO3@1hEuh=\B^_SY%/PbRY@#%-r9!,0mp<c?HhZK[?S>Up+V1+e@JLm]&=0r+^JG0;H\C@A%TasWlNkV,P^@4U60`R$["!;F$$<-sI?i>QB2gkau5n$7Z:6=SKiR@91.\N;FV,m6'@uPn9MRC=pT(_<?@Q.>CDC9-dHVK"_KScrG%!t-AMQG1noh4-MQ?g:j$H`L@nZbMFA4e_15lSJBfkpYa;gk:(,ORLc&*H<gA?o."<?CUShDLP`ODrd`dhjIMYR1PLP38@*pT&t5l%>tQ?mP9N/l?J7,.V9TLVOnY9CCL_;,pbnmc1NUUj/)'oIFEhqcl?#]u$dqi\^$^>c9lJq9n,C+$=jaGQo)@bLS*r$dYC33c"'5'[%B*RGiO9;M<R\pl1G@s8RRM-$VBP=6C3UiqQ.Fi?Y"[4!qVO-*2Jp2&_OpItKr9srT48l.fBt%E!p\KX`4U2Z_%PN!7\6sROT11YR%WuKbP<#7$,eakPl-]K"@->55cRX01lmlP4X'RKQ:oll105J2L;",<HW2lL+gMR/,27hPY]X-6A87Z-h6nEk'C[gL12\4cg`l2As+%!;sIl9&LBVptPC'roA=T_V\V3s7kUr[@X#he*B4?jQ9jb?Hh@@rr:06Q]K=CQ$o/67UBWP'L=TJomf-_i"JPo!#X77;r[klS\^tj%"L'NsgabAemZkG]k5B&23$fhK>c%\i8^*9>?U5,nkU-ITX$l^s,-b)MKA_PG0K<\Y%h&lc$a@E7&>2`t9.#i58#u]W2`"GFo7ck7%@TfpJEX3G2n>Rb\5\R7."N5O1BZj9,)o-L7p7abZVD//^L36'8;E=+;m'tu\pq+`D+0OM6qXEY'gR%C/EqhYFIc`BE.9?KAiU;m'%hgU(Mg""X7X&gD3^NoS4,o6IUn@)6`^VG?CBbZD$&W7_Cl)57/,-`)c<t[JsDAo1$VE5n*E!OCu^Fj;8[9D!E],6M;OgI20`s8OH%_3TgG_$U;[R";]s_ep8s4Vu+oZR<R-,A]HWN3GHSfHm#.,Z[DR`D/1M6:M4t$]&F^H%^XdBEc'q>9QM0B:MHmN&uK;NuFVo28<G^%iFcL>roKbl`sg[;(\42\PiG1AKkLNt/h5m0K,kqfh@mm17@F>s/X2bC(i>p[=MP"2`\XifJh@$-7pPkbC15+["U.8bC13e0YmN01%H+aSW*d<-D,!ZQdYgFJYrID7u%#hTk_o.`o&8`]!&]+8-$oVa<8`&G?5FX<([Fud<]Ct6LTHmNi'bmkY;l5mooNtNa$aZH4DmLZA%Uh9]7aV`3/M[+khOSV3W&mc0;\\A7U'LTc7%hb>)-:<t6BG(msoG/o'=@-h:L/EIC5G*H:;a6sK_$M,Lg#*,\1+Tn4TE>`pciOZQ%Fb%>sE&5[+b#5ZS<'6ZZaW>P"CBYr5n%s;R&lJ!U7QLta=SUAII#R;=j#Lk04i0QeJ.<AndTi#D6DYMgObc[2D&CF3A=>1pPGeoe%+CbcV/i#RnH2X%"Bd3!YoKMMX)p;'&at^8,B;I#qFti.bQ64J'gbgAULY40eJ-f)C1c@@(R@s[A1S;WP8t^Yf$@LcuM0EAE07lV"%4S)!j#nf18@jGsGFt4u]c+Ys<S93&MBLhX5b//dQ!'$%j1YB[jmA9</`'BC?+U3N`L^X\@'h/ZC'bW2X^n?mI2$DjO/Ar+7hA'aW%nO_@=#bu^umI-1!@kCPZemFB,"Oec#lrnKnme6bm4EmN45Q*4gs)g=`7(\)^dkm:)^mg4t^>Z(D/goG3^nD\KG6q((D$153I#$NA%#WYj[q\>[Hm18r;qo8Mg#h/>_0r*DX(Id&=1ug?;l?L2(i)M9q7@tKB8]f/Cg6f6`+B<uIZ.d+`kVItK7J*CHJ]+G<Z!.7l<2eiq%*FZ%.j^KA"S]_'[Y8mX8.T;f\#%\B@i_u*K.KX6kFq7U-;Rt?fZC%:Yp45n%Z6o@-W#ue=8/)*L`<i:hLiKNC3ZV%%i5gRlG`<(n%THV/C`42HX2(IL6C4Sl:DDG@b\#S,+XrsJG.B8-%RGS.D#nbom4iD[J'gToD)HUHgq!UZ!%N&P@8k_iH7fnq%/@q*ZNgc&s8:4jf%OB?rhM#aZWf#hB..kT!]m!<)3K=[>T!+2Q)Ztbkb7AW@4P:aNIH+4qXQ1)0@>`09<H0R07PUg/Zn-[B8AnQuJBE^!o;;rWoiH*(3%8K5Um*nib"[HsoT=odpgGNhJLGpe#r:)V!ICU\hQ^\PCl__kX3lA0e;-?8:0Ad>:NO]XD]WE*&,'D.m,+&+ZEfcgtId.'sF;2f!2%Tjj8[Xan7'-k%Ggo`/r2!@&F_YZU_B5g72==\uFKlT)K:F^HNEL4-=%<([an#l?8k05&^PTsYT+rNI[X?9)8($kCN+@;qn2rNmgB%6JQ"(]>-or,dIgoa2g#NmEfKY,_,F?`=Ujnkh.7)^LSC'(ruS8)J8F(*R,jS)&PMiH^GJ#D-l!kKgBcRX2UOKo8)[[-$3EE).rA;%CH.&$PN%D^18,b4Oho7b_h2k2S.1mK3("^m3ijM/RENt:.PFGdlj6>o!14J2"0M4N@A)rAA<[DE.rdJOY.qrCn2cMVV@@#5:RgCF%Y36k_l1Q`]p5unDq#)AiiQi#gYRS3C^4s1i\@p0uGoO`;ZU/8l*Lmf1]5#,b=4g36j/5V=5Ce_f5/!Gphb>0*-TV#ehpY("Tf=og%;pDKkDJ=kCZm:Qk/NpLqcr82U-bK/APW\8Br@)k;#"tbFYlhG9?Q(+QG.T5/#$mp(Xc3OZTW_E#93Be*'HCGoD(C[-H9f2PS6Z';%EQZ'8]dK3ZAG[f!Y`+[u"t;YZL8VJArm]e\@6sEk!n.@[STXc;!\79BOe,AR0_CH/&kmg]0m7Uj]UI)-aK\AbUBdXb/-gIc/b1t7%6FaR"J0pICQ`KIUj[q>8]3NbXk=!WoA)!Xj-5d#)!YJ"5gqlu59)Co4&tb6h+u3CTMPj(ZVkETUrXs>#Z=IOj7WAQ"[:Gqa%QV]?%13pjP6sRA*]dHSg!)'GfW?3b3`1/MoDBd(,-Ydkd+BiY@FAh0f0ijMDQkG![GePHo#f.4c_#,=L1e(q`nA@9ln^6\O^eDe)(`ota%7PQpHR/Ef24RTTVL+mGka7W'HJNY2#WbkGJ`25"Y/*d^%K`Qda+J-BM\)MXo80So=W8\#WT[0eIn'sTbhSH:`^-Kg*c%]%\(l0%m%:ho>Mm$*B*!M*4@;N2N"6]23PWFB!eBdZeI\\Sd?M,jYYqGsLoBWYInSQ8V=A9B&=>"-Pd4%^i'74Eg@@O5&'":VK8.2IV<@<8qW%/./@QB7`PU+fO^L+P;!kR<W@r9s4<U42p4%5kK%`Z,jE79X%p_iVqbl?6dJ-R(0"p9WjUsSI$&Z#L^CUY^c_:qC@.d0RHItJjj3]%_TG-J&N:!8\0b<W&Nk2ZTNEHt)\9O`phHER2[#'),/o6n_;_m^Ao.XdVY7`!YK>fsaG.)LN,d$iVH3cO<9d/\==NNo.saoHG(-=?%e;TD_XoM,'g,6G#!ZSJ0JQu%]o-H>97>nS9]I$]nVm)nH>QKY;5A,9G@)ZOO'tpIQ%'ltu(&^YUV\Qms?##m:dq]SRS-Tl]4g?[G%MM7B`YPjo!Yq<%i%MXh2mAU6k`<$NS&c<(P$Xf%``JJ'Oahs_6JRY>(C1OkaTNE0M?F(Is(0cl*4m\?iX*r.GODL4N!,Ib"b2EPf%c2E?eB!Z(E\"[$t'kZHE"3k:XS'+L3flh@!cn%5>'@Z,0ZaI'Z::06T9k@&*fs"GDBGO(#p)>F)66UA4X_9Usj[K?s6BBXJd:jAH%PSIXrZT0n0_EbGmpS1D=RrKlR%B3+/R+]A4O6\Wl@H\.Va\K2'1)DQ-cn%5F;iN;rKaE?10[VFt-[_q0RRM2\)?A5;ietM+"3og,%6$.9EZe;95GbE`+3&GcE#%-b]k*BVqat0hp1!hJSiA$Z<BX[OLG+("MK2C`VVqGN-piI_5Jmf$$>;2-i<iT&G,[!C>--8',/A)]%%19X5L(?O.)>;4$)RV<NR8j*!sR:[tJERCt((>9J@[G#?'(uEh,d4DGI<F=<6>69SM:,H/TB4B53ROreZY1S]o<]WMI,rc5BC#fUS%Y?N"_TX5MaU/i7Gn(`e(lUlpHC.4]3\.uF2aJ?2;ek4o>CLT^;FnI7o`B4?BV%Y9IXbg&nG@+f_rq>a6QhR\uHPYA.<\14gC.<CQ%7e2>fN8?h<p;b[3QgZ5f-Z]2\b00s/"fuH]/\r\VQ&8^\%cTr2QLdhTAAjHW!jipr@9?bi:fjt11Z.5u$bd@[)?ZDec!O"\JRK)7%"W2h0L_+M3Q;qfB@BF\VenSL`ZJ*/b'btjl>$F\N^k#L0g%UeHGGI^*(LN[#D>Qdk&ETf4f1%J=F"/i*bHS3FYlYh`8/6MdPViVG%GcKb>i,ps%?/`cL^i`@XV?92iXY+M-[kaV^(mT(qMN)%J0t/@8,ZG$s[&8,5e<&E.=rHI75%p;d#'*gX,s>MNLTujOU31.O?A/qj%'Wgd=P+r*>W#]E6<``8/@',dN#/k3*Op<+O;3q*#'VfJWd!*;u94UmSh0?o2X&eI8`-@;1Od8Q;\&eiM*?$MhaLN+C/58!Tk,9S\%)1A$Q\(&B40)1B&XO_',BdE6ns!M<!(`4nUQc#rjZ4`?h\Qb%Vp)HI9#,<**4tTVAEgo9"`B#\>a6ll\iIS]sUs8f,rc&jaLh`dR%W$;epGihSJ3R^3@*mmr_Ohn#aCTG<NT-NJ*EW1Lq^<[2pBEpG8"kN9=m/0#4Tj_.Z2[l-"-=_%dD'WH4_13bA47Y4CoF6:Sn?!1[%$).H!C`Je$*;b?[0@?9<+R60MNn<<ea*b%m$!pl^gO?)kF#d&m0^jN?kg6kN,uPnNlid[%X;\.)l+;N3YU+'q*D^NZ"EI0EkW>&t%_>ro#l&aX;=[J/$X\d(8&Jo5=ecD_8$0>nNqOf"rM!,V0d\i'AN]A$+4Q`o'_hp>t0Pul\5'_uPoUAi#F&<\4l&(K'NLBIg_#<EW%%R5Wg&bpMR4*:DrcrcN3EX(;LH+UB_!lfuRBdja>04;[jI@-Nsil&p/9Z)NIHBT@&l3:(`%BXs(c7fPs#0P(cJ@%Y?AM#R*q9X_L%![SL'?j,j(,R9UR77LV@_@-d+kqjS/-2&,$@1<m)b?E3B6qno#A>"/5`Z<g7ITLQDK2ob2I$b%.S`Za9F4mL3?Kbe+Cf[4l&$9bn%q-qJH/rNAR?5AMg@AbD;T%98j!=^G0MfH8>>[a)uW<9g:+DKM28HrUDYo'lbju#Sg!M*!/!Z.eG@!LEm\P_I!1#ad_bN#mn]lX64%SBZb=hNE/<4!8s:EPk'-8rL'D,L*UZC'bVUb54b(Z,k+!R*a,O6mn(YTs8QjQ^50uMmi,01QgH!fWjrL/_23VnidY@_b?sF6(q:,%3-&I7#(jRV(eA)^>Sbk/;H#`)O',_`(<u.ofW,a`Tq+ZZ=,RsWf'gZGF_D=?OB,cdpi9N@&JUfQNu20J;QQA.p^8HKMU<dkYl^<7%<T?EY+d3IG.*&kHbi(rCUJs-P_eQ5"S'iV,da]QrEf;bcZ;<fKDlb3oQ5b4/b+c2WAqX4TJq?6q?:Q=Ro[S#jPo%YYCioVk!g69\%9b7negLI;3O?.;R@=DWP$Q)2,`Q/a24!p,j.%$8$\!qD@BV_ge/TXNu7RM,7hkod`VTANL$"]cCCpN(UF!'ZnN!?>@rQnm$Fu(US%`iTQKUC?p%Wdt=3]K&k$Q1rA5KQ'4QO!t>]M1`O8!*c(00j,mB:SJjt[]_AR;;aul&=/o1<_Sj18E[:o/Qld)pdN13^Kag$Y&-^l%QeuVc)DVL4e<-K9/A/Oa&gF2RX;]q&e1GY]AE#)a>`H;taSpV+6XZ=40kS7W2')sNS1uB.K?+2VP-)X>#\,QPe!3k%*C#BA,b$mt%=of8oMogg.XK,:(b>4k/8;ng31<J@`7u`gjJRY=%l<X\4fuI4`W&Dco@mHBiN`Qc0;q0KW5RH(.,8iXKg4)t*:^AA@"5cd':J4SX%[_<I/irXO44KO)_jNZ1G\3!uA9o3DUTlQbdX4-a#ghHun;e9mf:c-2#G:%8gc.sq"8I]>'m.*6sSkeNe=#almMt[3f[?.$%=^!p;%BnTell\]QfneaSg7C@3fkl)O+EfbJa022pGNW#4s1b=A:>8.,3@Dc?E3QX<%#X.#c<B/)N/Qn6n9P%(&C!3Hk,jL0r/c5h5-&o,4%O%[YfS1c`j^%`FKemj%U"WW:sUS$*+L*Ksgj$as1m_C+Xmb6#2ZHR,Io!9erCFUJIkn@(\L2"JtH-#G?%&r$uUo0K0>VV9aqO(t=%%7i!a-+5e;V2`:GJd87'JcR6Z!X]W<abq%'ZBOJSC,M>PXR6\lBPY7pLpA0o17&`8O^nLgdLbWmR&;KC<SJYM%kG%OMMmkM\e.^^%%?QL*^nN/PYUe,3o=?:NM-Ih@SQ?=..\'Pif)^hXa\1#\Fd]t:Q(g]_.YZ:9G\*k)I+E6pj;(JpSWX,V+&@Zt<JrZ8Wpo@,_!P:a%d<Fg<i+chN'fVsX(!)7?!bk5!+qR_!`Is2ea(nn76LR-c+p+X7;he_=mYX>h5SS[k&lCMu\gTRKY)$Oue5V4-J_)(k(.<+Wr=jnu%V.>j>B1S@Q[9@;CNOKPA2O4YO0]%E)!g+fWE<rib#r<TJNg7Z7^9(JJVJ9!&3\Uu>M"leJZIGVZlFO3?pPo5Q51-@&D2mnoM.I)4%,!AYjTLnIg(pG9:I>4XKVF<B]KAFYM@gcFW@:<t,U8*Oo.C`N7b@814/(6%M2OZ5bI'(;&TX(HaSe2$f^4\b=ZEZq7Ah[5s#/ls_%T6Z,Jl4XeXCD.+<^ep[L??1(r(K!,3,!g1qa9Di=E6D.W`J'L"@GNB4fk8\LToe?bejG=3DF5f[SA)/20^rHXoFlh$`opumL">3k%J5)/2EYQ[C1hm+T`]KTN793gt.$<KP@7<BaQ\AjZZVTUO?]Yek>,KZ`i?qm]njXXge0N5J!qB$\M1K(B3bj[D'So_2"p-JON!5:i%lBdA5a3,7.\dbB2`W?Zr3j;95\3>>SX:!OrlM_t3eWB[X60GUd!cnQejqBGQa%I9eV:&EM'4tUrllR7+TcE\m*6#8Yr,*:]\G@E>%Z!D,)W`munG<H%n<+/^0jl<6ln.hA;?Oj\UO#U]*i!%m]99\Ul2i\>$LE*Qu>lpd6pL*PC#$L4<G>7dmBsW0J,\-r-P5hms?30^=%rSq@\`V/dc(S2C"n?/\1JUO>g;.BAGgCI_KX@U\BNY8UA2ckV$5e'2WDSPVOjnDD@*arb;!QAS6B4H81HZmoA>(imN&KQ''YBu2N%K^uA!+Q+:SL@<m(;lf$b"a9Qc:1ThS#m[$i[qZMtX!D[76]6>#%H-Z%6[.G$>;nK4o5%7#16b)3(6M<(a.ES1=5>'!RnO"E;+k"M%AnpA_>?A4Q1EN9i(LjHaM3>Sk()AO>(`<[&Ko"=`20]V9HpJN?YX-12E0KkKVT,Nq$gn$Dm&L_IUKaXtMdf.W*8e@5cnoro[oRCi%R@J')rOJQtK6nJ4[D(J#s*!4Yg\l]7h'])S?)h6HenMVql_NoBTYN)6e_8b]$ubIBh2KkN4pl2"6H`RIF\4uM0Nslg%ufc0=RB.I%6T@P(Hs(j8_8]%nI%"#rkkQ9;O.&q@Nm,1##;$jEcslKUD.(Y_2a*APSZZ`BW/It'K'<Utl^q#YSVBB+QJ]VQ!+R0BjsukK+B::(%P#Y!\PU\tN/Yh[?`;hTKqMM@lddn:['Npnu(D<HsS($Kp64O5QVi"2[X&:#Uk6Ud]<db^1P]/V1ZsUmLDt7LM,TlS&?A<Lc$l]9?%.#'EK=&Ug<"f5TT!Y0dTQjD&1%Z/9#>mQCDC`)f\'m8s^UKd7JJ"nhn8lA(rK*pn+KGS>:!H'Tm&e4&Q>NTd1,*:)J9t"UD3g%30%/TbmZ[a-dB35FkZ>TNi97fS%\84S$OBH$Zhj2hch4VPRu3D^%"V.Uq_Lf"*<bZB#`ji8qlQ?9M)9Gsk54&B(2G^pV!9e[jB_!)^L%]@Jj=5nPp&oo0\o_%bWJeTk:3UGg&V())Zp0V(6-.!^a"&/oOU,Q6/g0lB,\MJ6:^d#FWSfMGa;7RO\AYukRQ7[>&[&kT2;8/Tdr%(,%6]BInp.,uonZ<(FO<g)sB_)'NU6)eGE]Z*/do4A9?kT.-;cJqWS;@s&WFPa$2GQ.S>Uqr!=3V&&)KUgBafI#<WNkul_@nTcfK%=i"8K:CY$FcLu#a"6ZnrMqPce3&=`b,J-SNkNHKD[W\WhT43#DHZpOtU&"&:lj_fpTT?]ij0#WfkKZCeU8XQnc+pKMjHm0q\mh"u%atdNQb7pQr&B\0(HTO$<2ABFhfE2X]HG.>DkI,"6btgEEMVkVo(&7-c<R#0l>04?e%6UGNQu04IM4)nU#9/Qa+EF:Nr<DW-Deo/6%4VG7_M;oI[S2Hj6n1'0pUt4Ud(krh,9Ps#0/8s$a6&n!f^1dRf#WnV8<mn!a!je@`clMTNS:R9`bIN37DS$7t1Du.)_3l4l>mY84%"D^FR>@p?DA=Z1nS$LN^AMM;+bmgO8`IW]%$tU#Xe]Oa$br7K\Bb7Y'@[nCQ%.r(a(S$I(+Cto,$HT&9@,:0\d7Dkc5`Gj`=s1U^%b8Mq$!tf3uQOFsXfU][4Z`rQ8X5C#_2RuQ8^`cK6[;?J`Aa`P?O$Zj,2O$(a2bgQU-uBYZO9ei::iL.=dPt^Pl!=S;9Gq'MF%Cl9%"_"$5ffg4J])jORDJMS5j"q,aI(KDpN]RA)`N<"05)9bV4p7Mh\lBW]'qSI.YRM3h2G@B"FlgIE=GQ&S>$A'[FHCPH/:">&[OOmo%H"AX`G-!ZD]T6WDF^MV7Zs#P1Cqp<nD>!2A(jk@KG-VDV:'5$=Csck42-r@`(`KS4Wq4U4QN(h>>r7O5?-tsbI2"K^6s_gCb=::m%0i6j0*3")_.u!$JH(54_S2]Z=;jQ"tNKl%Rl`rfSG7ClUEWiOXD?+[=e#Fr'&X9rf#:"3'D9riOOjA]hLM,O9U$5YmpDUl-dtO*F%B]+`\"V^nU_2['$`X`9VN'].X5ct(nLt&f:Ci5\?QO<n7PT_r#.*j#SnA+=`fp#Gk%DYhu%H&l/E3Y]$ha'.e>@@lh[2_W(0mP'd%OZ5<MA<>)m/bY+KP.]+p60e34gXUog2@MpEGlk]cJ^G->PYI7_J=;RAL@e?-K/A6BX6sWNL^H0V6M1_Gl(!91pJ[)[e*3g_MUEop%l`#0*e;*1`^o"C]J?(sZ.e=@>!V]&r=dO$M1C97[;LrOt/8I8cDQ_MFb?MHkBT0pW=JOOWa'NoHKRj`jYgk6EnCk:#@0A-ZE1"\G%bHt\W4&@?`\?C27EAji3q:L)NMD<Z3;ps2h`>E3TjhQWPA$h6;`&5OgK%ql""Cnr58@"V*N"*Q7@hVs!2H8Bb<\WsdV&<dq</qe6%0SZ,2WR<LZ!(Vt_%.`A*cjaK#YY7N6QWU27emb\3VXs.1*4O^B^8c`'i(b;jqoG%@T_,FqXEb6Bd>YW;b$mc7&rgq7!B>,1!Sf[Z%DP](1`B//&UOcKoFoZ`XN#O9X1O/*>R"):8%Au]H4d<6%gIJNlNsXIl*1C0dNaos[P;r5$Jka$5m?"i0>=h<<T/W`$EskH_4+UBi%;b-t.Pj2/ZaMu&]`((edf_AS"C:Nf,8"fl,Cita^3O@nSL8.`r9kFHMX_.X#EGqTc<P.QpV1gU!H5Gr\E@\_<Qj[2h/!B";NPn$P%7YPd_X%nLuql4D]WdS?l#02*cROWn`o!;@Y9\cfN:;AnQYL'FPe&FYfd_Bq4\Z=s.-QRI`Gn#G3f=jM.i4r[V?7u@/W+p.b#jdPA%U!bRsWc?NB5epu$2/FEq)4Mts+tt@7qD&72ON-T7'i[EN\.euV7RKcr!J-ZPG+E5##42/qVCr'F7,M*IFp3n*3s#WoT><9%W)b(%%2K,MtdH/mubB.R^arX$F`5;8:RjksQ=O6Q>]*@E'h8!g=@g9@jK&C,'lp%/0E<at=]eTbf>.`d91K_.2euIsh)ugm^0_!d6/:<k)%+O[Z;E&$_a7\9d=aI'lF=B$)P(EXl@&2b==+Vq7^$&bW"g7hR`?mBV%FsFL'`_8tX_X-]b[T:.dNF>V@,f_"LHJZY+$?8Cs8@:bA%O40aN#NMU[/RjGDq!XDa;!CJh;e>/u+kK<M)$dCF7l1aOX-4_rF=$LYWE_6`WFmI.N$P4,Wm6AR:#Ik,LXah>G$\->l4gEoFJX':%S"iTj_bTZHIao7ALoA.FL;R&;i<'ku\1t_)FLOO;;%dbMA_j9[<:Met,+8FDj%^&0pk!*[a!=]cWfg]YK"&Sc1,S-jM,l.rC0r(s%(/55SWghLlGNm3T+_k0kEhquh[9ATU2gi<srGg)oe.O>pcHX;u,&(Y<4M[cgreSBG:j-YeN:Z"L*KnfLmPt*4qM'!e-)lgI8:#F%%HcK6G'\s[o)ukVHCJnf(1T&E#W&/+aCFhW&Mebn39btj<U=H&l'mR8*E6PV)]VUt@h(jPLTfSJZ(ibd/'<u"cRuHQV3OH"iF2;"Z%BX:mc^/\IgA2-[S^DP'CAWa-?5o+[\M#&#%_+BHq-#CCSXdX43.]t2.=q:eYP)Bo.]CP)J>i0`d!17q8,`pul7k\QIM<.**0^u$L%P@gn@FX!__V@%:CTPJ"n'fT2O!.Gb"(L-`]TN3=3HCf:lWh(\s7rWO%;k70V&0fIKF`YoY1k$M+$M:P9$>4TL>;WW;1AOkR)RE)9%gc1*j1H]*iD@B8a[l)"+pFU,/Z`fUE]!;E16qA=#)S'-2XW.CjdaK6oEl(=0V$:'hp8M%'3AW[UJXj?*'uVSS8:+$;:a!#&lR<mm%kugWO)Mk;cEug<SOB#Fte:Sq."F"1'Pq>Oc7&7.737*'DK\7nlP"A>Ek?9FEj+3s@i2O>OW6;ZG.1R2";,s0]QC/0")*eLWqB0I/%>0H=K,qY+<et)H#j&X5l[`q_SW;:,f%uN!hG_.OZjhq0VW6&1b*<VGF+Qs#E"q0J1aC%#`_mDg0>A<S!nnI4*N!;#!;tF+66'3m8%Se'N=6^D5'mu;oCa$u"n:h6*+]O.rP$3Wu4p/+Xsb+*>?,UbG1oT;7P9i,@o-S7-(&/6!`QY!G+$&XZm=fdu;-o*,='SC04'H-^g%>NZVbOXWGeEYK*"Lb5=3;,ACfk+lT2$OX&P\PZ0GN-(.a:gddUcl,Qo5nL(^"U-)8G%Q_c!g,p/aXAPSXX6hq,%FdVhL%*d$3X:`%mO0Ip-lZoiTKjEW335tRADLcN$4<Z30FJ4Q&oPa0.m]<(i>iP`TZELL0Gb1:@mQ6`dt;p86%RtJGaA\nN0+7Jb^omGAG]sS'VL!d%g59!?2/42u@8n_R]r?0,-k't?$'V#9<dFE^.#`#gs%uSm\7Rl*9*@\d7G1f['L9c7U^Vi!f:Z$@$OR;@erq&ATKjWj`AJ#1_uOMg%US'lFB%q*QJq-QF2aN"&f`ft2"Ti6RG!U\K0YF1f)[&U49oU+%:(;T^g*e?\#E]np-n#WXRu@S<6($24H;m]Xa-eAXJc`b$B%R9@%nOg)m:`pX#R5%uD&B1jRl[j^[9=7"s'M*tq@7NVGanau?,Uft<?AsI[(Xj_J+=K"A-(;b?VDur$=]@86kscT4kqD3d9WD]ZNNRG[%Ne3%*Q8??1,?QG+h66]VNhJHH>;AD$H'e382/&N5c!0q9;T64!%K$@)&>*rch2F/+4>TAH^"om^l)6jC?En(j#1%k:ldq^3;^Lb\%1be;S-PgSVK::D/6N]=?1F0;E5gOJd&d(!WX8pf)8Bo]5b,2U,4k/2:dK6OY"hr`AFk?-P1<8VckCs;)lg:5[b)TS;[;Jh4C*-r0%Z>JKt)N>dGgj44[!rHSRU"LWHAUV``l;6B^IK6[n>ahF.-sN/3EN$8IV$1&=$@K;`lTpiSbBb5cTj\#`H@%#cfa/$ilP;@]p+[oY%@PK<nUs0pYEX']@+Y\XSV?+pU@di;kn.FFl[>2'Q0,SFEJSjn#^iq;J,OFr3D$l42)lCg2M4nbSmSN3R26Z^.-E%'0X%TAn<R+ti%-Br`n37.pEJN]0h%6d>6[ZE;09tI69XE=ZS_;>:NXh]q#a-X1_0K*a7/n68`ZG!k;XW,d&g;hi,0C6"KX#fj+_5bH$,I@<^r@8ad%[WT'9"LFU!lgqTT)BTGi*GZ.$nn:?[d;TeI4+jFI@P/<hL34!mpkXiNX7sI/Ptqa(V$FUoeq^]]X4q#63D=9gXK[[F"&WD7H;)]l%cE:gaWdE`IpBi\pOk@PW0`-PlCh6B:-bu[0"&2'9!?K1?+/K"$k=i_'(XU^H]%(sAR20nA3TnaplI7]E2uetZgB&M*/1>l3'h?Kd%kZ:#Sh.i!pTTdU"a_I1NX]IMG$s\sW.T!ggOjbu/A`^^D[.iWp7g(kY@AL'kaCt3<08g,>,Si&@bY8b4:oGs"[>^K<Qhf@d[Xu;X%(mjK]V2:h;'KsK%?IFk(F_Q<:!4DVC9I[mSEHRZS?8[k-.`Dn5=#.&/YQcFc]fP7gEGH"V_jN[O?HGss0+M41M\N6lW_(YDTP(*Q%/*LBm+olR86ecKEH"NnP][]<!D'^=5[4NtGGh60Y[B7eFd&R<e=pp'V&6]@U0Ol?roi_HQ60NAb^pbh5B]lfo3>\1=+QifcUBi%j%[!ceg785iR%MdDI\iW=khO&h"6X0hoBnS<BC0Hu8-#0aFbGTddMAaap>A/<*[7lH9b">]s"!\cB9Z!E.mBb7j?45"cb<*Et#HJpA%/6OCKNg@o+GZ6OJ%DbuPV:DqllGTQ7V]!m27eWb>\_EQChfB8r!nuE>=-`h)"`ad,'E--d>rtM`W"o8M<F42ddDPPkXGTbF_t/JH%a.`pR,^c=k,i0;,Yga/HlqlDL_mW=jj_=tjX#qb;a&gBO)4a(XZrq7n%Hg70SBWW-SE")ffbDs&_&[4BCSHV^0Y/J'Gk^!6[::7;%EK?gR_:K9tX'VLbaTl"8S;$@W#*[PAP6`rQ/+]o,06&uRAXMi"a"Sqa<\PA">dr)#'o_CU3+.V=Wd!J?c9j8qli_Kp+c;RFR>cL0%1i,DRr"Q(E=AJRKUa9YFi1ZsZi/G_(l[%t)**Rm,SWm0Wc)M:a?5&U@8PacQ=1.^]WN7Q&fZ:[QMslGtN^30fl15ps_-&4&L`GO\%&+'L$=a3nR>BlBcnO)!.q.R$6_8$=L;3/g9^nIqppWiJH0VC+?rX0a!%Sh=8-#U,#q)D'oXCkFqfTJ^4?TiIca9o:t9D0\K8V/?=%#\>l)!@YK-("i#m?G!HnVS[H'Wg3cGW8CVMk,Vd*3^aTCTWsFP<,@+A7RLnU-04dk@1=86qb+Nr%>9+ZK5f=AT)lFq5NjF5T0V)_%&$$hR[m;l)I!2VCU8!9U4:`M(b'Vg?\:NS[m$Ji5h2O3uD:K_?3JfjXlg@fSR\`8f)cXpt0T^f.LDh67Hg^duk(RH`r5Ne1;Uc.D%F[q36:?23dG\kD<o5Xh(-+Ebo5=Pf)R;0p(J<EKH#mlAR2k<jQ-?'Q(Ki//TO%)osMMdX8e`XE?I]<9a2tm8a=o\:*XoH&=r\IdY%?iBE]0&M/gIe2jBRs/dX^AlC8k5b>rH=K399OAn@mb89@hn8pen?]0rb?(l2hLG.b_b2QWp#0h_i.$=Xs)&="]^J,<!IqN[i>HqP%MXR>>#:DeM`9p_+#@/*EA&O7FY,;P!5bQYFicK,T:ODh#@#U8ei0+8[M^8@,FRCIc4!9]X(s2JGco'UqHe1=j;^Fpq\0#2Fd$=?V%N_5WLWoe`&Zi7Vk2\[XdJ^+(R9jEs#4p=n:D$_.(SN+1N5@ACe%<qD.ck1D$RoSON567qb%s(nD5>[SGcnI;5%a`LEs$P%P=gSFe%=-4tFZ^cPt_mTAmU%54Vl[MXNCb,L`"_ZTG(Hi<P84$t[5?M&g9Ju^lq[(n;&-B:GD)#O:C2f&3ofre%m=?+sG&N$#qHO,3(SY*4%jFU3dQDF$YE@^5RJ>!<Z3Y92#90]%H_3g6c]&6cu:uEHFBkuHJ6br,AW9^bQJk-g'S(dck?G4`#GI2NZ3&Y*@8P=%]5-9@a.#cV-%p"UN-D"W`\G!Y>KLN4[43/jRD$n_hA^b8GTngj5",B?E)%#dl%h$9W]-)I;91^8n^=&+RtP%h].+KG5(P%W6oHk9F^k\KHY#UeI5%jAE,S=mFg!Z#XtsUo8&g,]UIND$k9jC@B2dH@`0aUR`$]VIu$4Kuf>&QrDD:8+JVV[:q#r8ph;LS$8=pP^mN:8h/ViXG5;"[F0U1%WeY^q$a]g[2)LP[E)Mn^ZZ)A5?(3.>HAV)d@!_42JAhhl@'8+YDSeu2*371uZ!g?HTmOW>8QX/kXL_Ghg8dqV"ggY>X:D)%*!?Ms%W3Zh#;&qd;OucD[+`u;U>W+Eeh=,"j#)XXg[`>B-Ro8!^#6ZTHVH9CFL40Utgm"USP63dXl=4jIeSu;d+de"-"I!FC4cg3khpTGQ%%nnSXY^+n_c$?KQKq)*16r+cQ@7(-KD?_+#MoV7k;>d2GRYr_;9G9EA]N-_Pe^M#^PmiRW,ReYs:Vc%.:L)Je:A3S=_ctmrY,.a[%K7W'I'_k;%$eZ4QQ;+r=N]\2qDLdtH<\%!ci1/nMGDCIjObg0!eq"=,R<Yd"'kb`E6'4`-!QLkinoC$r*.idI!TN4!*!di=n60Oq%Z4^a#JIO9F?YD![3V8;8-#pB''U27s(4FMB\)O@4a0VDk'bW^f'pA8r+ZnVu(%N=[f[IM_Fk<*<qFCNJ]dY7E0Q@;uXa1c\W7'$5%+`5uY;`lg\h]oH0p:M*PkE4F$HVRrH>X\(k=!sGbY>3sKlKj%tOr^_9KE'a6HKDh3jV&V$H:%#A0pMDQ6`E1LJ"G,ajE;_>T&$H3%`@60Mr308e!LM/0o;B-P7W6T!Nd^CH9&r9a1@(4NHNA%#7C/Oc:Ra[4Y-b2HO',A9<EZN*hme-)r<d6&!#L'4>SXEQA@Yu17`le'%R[ZWYVfc^^<j5Y74pI%HSq3#.Fd*6_0TBQhne"QBGT""sEQ<h$XNoiW)clMu-1p5d^D\h88?k.MRM[Dp/"6`=5cG_b1B;D4/B+cg%"c^oF8&3*7\-Io-BJC,p@n[(\L/S4L0KTJF37Zs-+:[KP%b.%)PdOHR7lulN$klM4!/BCa!Q^ogn3g"UF`WL6?hYSY=eZP\&GP25%lLb3XinDE$o[RX/<Gl!si3nDq<lnMIH:1O^43%8Em=G&s'WC0>(fTKQ-=DcrC.?\iVkgcn!%uN8cX-R26hD&#J:3\]Uf;M!;,tM%%OR<HpLt-6GkjqQb[i999m=<&j]\&J3fR$<mMVp2t9a=1dD.^Iu%BOD_3jeNm#r>#o7;^Ql%MD+ofSZNJb2o]LNf)I,7?P$[C_ani%]M`+/;5kSD[bdeN@,K9Sg%=fcA[ed8]jH=\Q#!Tip;)s31#V:)GVXq9h_a%c$m&bRqbgG8J#OpI&[B1N*e&LkT=#3$PbN$NO(_!M%oqQ,`>I(k41[<mi"WA;c&,l^VW'@)a];=GK?"TW@:oKNI8EC]kE*t=4<&kNlCCN)G_LsohE\m6pde9II]TBGjp_DDNJAblW;LrH;%&?t<DP*<WbhHd^cl<Ko9&%***9d1;+o'?fsnSH.VOu!2ZPXuOuj[m<h(,lRcBn9'*!,;n_7lH_$Ju[#JdeE["Ek+1&%F/N`N%8U,%!P;/qI-!KM<aO?\/*]T<k:BDtaTPWrVXuJ!?/HM<0PX&j=LG*U($D`<Q'O(Kf$//&a0#$Eg@Ec&)IFM+gN;he[#NCa-CNW&RmH5]%_p4l?5OIApQRseGaXS04ga%7ubto;#;MmEf&jF;nMB)LMl0-#akkb32EP(?t!JaP91GA$]2`%tu+-[Gb#Stof)2<.<C._8CdOcRe%0A07[D5@Qkbc1\Y7S;*$]<-h`"*q"[ZKk+=<!F;G86VM1=<(H2(dYcFWa.R+^A4<hh5GrR,tLhp>=/VN7o?aLDA8_RkRMi8I-/\1%qr"UfD>X!V5-u'&pFGa3pgi,[A+ma&i`",feio*7iL`j!h`e&,*B\0T?)[r+ri/fir,_YCm2D;M%'QCJQ`NIAW#CVZS^=fs8H/LI%q\Aj%`o]O&i8*,AYp+8NqaW]@8X_Lo7ZT\k_m)-dNakWI-sd=hd;>n'8>.kNe\O6<U3eE`XEH]d1!$*(e)M9;97I&l-5nmA!kAOX%KUo#;>WFH8p4qRXZ6j9-G!^FKE_"Qfa<D/C?aZmu`LuP[Wd:<[6^MRMR.0MH_&,]&MHtj3M@%=@Mf5UDflib%#19Uq3&dh#:W@fZ%F\QM5XeUj9TPg$h;,Iu\)uHH!lKd"hgq\CN5q>gXgZG'+ApUHQs0q$n5B:C+Gte^Z'Q]#?Ft%EtB$\iuhH\^(2*9iIQ:0;WZmE6B%N;o:U2oG41B8F(gV3W@G[R<9somVW@a\02XM.aV`duH:8U\eXhB2C&EpeA9tEH-4u.>Gn=_k6[14h11>>JJ.gpd@pD61NpFUb-tK%!$9$q2<$[G8\8O6hlac#"mB!pB%Hk*J:ToK^f6TF=]4JMK;Vf1A<JXO1Z7eg)#%r*3QiIgH=b.Q))/c;(]=MgS&%ohdl`\29ahBK%a.KL;HmsL4SWWO.oNg7@^5KLg8DB\7WYK'=lJeC%eJjC;?IkB,4l:1&@ft1Q^6RZCF&TFJ*C=8!_n(OBI!2OR-Dt0#E^bi!8r_nY%R2(D=2g+uAS4;re\FQ?dD;Opl[KB"NAP9.$CG-ZHYn'<=mfsVO*:/;l'%Hrf7(i6]IGu,?S6BSgj,"onp1S"+*UYK.</c1^;6+Um%%Vhr4*DOZdSk%&Ge.ff'7.1;LgYlp;&jmisE(#]Eo*,>2./+%>a/1r3WES.aA=>+<U?4-p@,u-lgBJX#cPcS3b)2DIjD`k9PEtI)%=r5rm6c0-]51D>JB+j*WEDJ55#pV+W@F1mIqV*hl>8DKeT"JPC,DQtG[,[%Z'R=mQi5@#5@[8ijD]t4'I*6(p%CiFI^JI]gW2q\\%6'C=!Q+,W9$UHA,<,WJ6J%K'Eme^_/ZI$YUeR]XJ6rOM%aoTdQ=1)kGZ54=$IjS;Z5`bb]^KQ%-L-ei9MIlP,]mqCZ3A!\(V^>Tl%%?EdE>Ys9;As3k9Ga&P7)6kc[51Q+/XDbmS$O"kN2WDN:ZR)s\\S3E$JZY+B(MK"Qd__N]#D(/nS>*sXD/5EgiR,]9Q580dUEio-%E98!Jg.TSk+TOugqJi#cMLcpb8>&cfK8U//dkEj:C!<MR%2RbX5[&nf&DKJ\j>O_RY[eo9]P`$G?s/"Hc7V,$&K!CYE_?hGWV>&$%,"Gqo`Q<G`TUI1?KkR6uV5\PcgTU[9!bjr$BgNeKRP-pVY+;&ZOLAI70M;>SgF/cR5Y!jBg4RjQXq@1GGp=0J-&Y#l+""0RD\OK?%ZU`%r$BJ)9S6&AD-M'539qP[$PCh9qZj&R*B=D0(h(g&MK.ALtAsDqZZ(6ppnQ\-b[qL?gV4H'NpgD9W]*>;jpp*O6?^BH?(tiV*%r2Kq\^mh9d\XdJP>:d:$d@52[EMUl+D2<W,JqdNWm09`%g7;FAfnl4l7%C%B,8Gd<*La;$_Qe)]:$nP)4BBbm]H43i/8l7H->KBY%DSHB`0P9+7TWD/'0WnK%ko9Jjg,U,c\%QXp,HM,d=)2=cH]YL"TMV\+!Q"i$;kO_YH1d5%5oY`XS4AN_XOAqeSE2l9f5'#uHS8bS%RR`[]OTFN;(AU_^;#tuC-QF`p*;+:h,"/E\ZCj%qfuUJ"AG^[e(Wng'Q%0?,Z!BkpSKA9[j:J>;76,N/^c(I]7#VT-:<cm@HYdR@%$M'rFC/]Tnlu^R)T&"r_&PecL4Z=1\`rfC[o3M!d>OhuGPK&ei8J]!frK.n'?Z6QJe,te;>@YYI+PETAMFl1q+&,$@RYOYH&25Xl%`sQu\:Iq7W2g*'&7`PAIZjj:3=Y)5mj;)q,2<+^<,"IPfP^dT*J%Pi@GbM?Q4e]EXV&O^%==k;UW63SHl%Y/=;&Vac:lF72?]nrb%a1RjDV4j%-?0G.L>3Vi(BgN^JFW`<>N_[h2e<?'E@WG]0&u>n?;-B[MB]32$?dcf$]2D",!F<Es&0TrU^qM"]-,g"arjB>998>DF%eQq1g&K6h03qnl7WD0nXe'?ltG=\h;;WJ4`1"LRAEt9_GJ,ie?D5-LMJ?&SWQQulcA_,"h$?r00bo55'[Q(Imj%_9YJR)#uO1FGH%7H)8o(R@a@jpH*7Xh]5<*_,C\1_MXPr62a-JbTjZT]QLIe1#\`,fUgCV7,p^bV99+e@)\XZLekf[C1]q.<J<8cm(7kIiSVicj2>P%N8&>H;,;fQ<n&4]q*K')F4]`hUL=piUJXB_G:Z2rhIk@2[=Z\_WW*n3UJW@ma[""7,#[(Y8O\Y,R].PY1Xp`iX,DqKKhYZ5HDej@%>m>%%$ORgBm<RX-@bG=t'T.\ub&mM)%gO]6qJ4>-%V*J^)oEIoBkO,rMd:IH.:uOJoVdgdV<SV3S<ULb4EIBt61`!S=t<Jrql9>3%Tb[@VdK[L&.Vc$l,C[&W^<t5OU\.5!#B%XV5o5C.Kb3`P+'24>5AVeUenX')iRg&KTYR*]Tq1-g`rk;?+u<24^$_Wsrn>Z1[oQc$%'QLtmgs[0ad=t[reZEAhSuuL=Oq&0fOD9\'0Ms_sdU"`3^re8qPUrqBCp9/L?tkjJ;h`W?%*,V#gjn#u2q$I-.0C#Zh/jG*r%6\,%?=\[l<JpjM1><?li[5kDeVh5oXSel?.KsA@>eP`fe^D8^_O!%<b-MIA3(lq^T4ZB.[7NDYUg<&0brmITi:^I6==,,@McAn\48FoI%EtR<=12XF6,a:WlO]%lkW\+'Gq#!IqP%9=tRe0BuRA3_(YoTXM=P)i',<`9E?4Z_P8^AI0?0?QlO+NqdH$W.*!j)[076-`tdV>gW%:<-XR"l@2!r@Q_)M0d.O,0-l4<Z^bp>+/&[PF@#.ncMgtPcE)F7SmuJ2=p(&!3IA(opW9oL5Bb*k"pJiTU9ghcrQEpW1m?<<k3$S%!J)LJBaZAkW,4#D3l*29DaDp(JJud4=d*A2%&crO+Q&qp?t<Xr1II-Nbd@^kN#[A($=D"[J]93:AhBS3fepM3D5iE4TZPB^]<Ubg%j9+;%$;5m("EcjSYp(kKW)6ca1eb:&4fHK*GjV46a.R:[W6O<\[@`C'r5nLqAm0a*$\22!)\Y9mQ,D5k-mqIC$tuAj2EWK%K[dH,%+Q%")=F01RiOF-&"FVYQa9'Cp%-^6?_HmB9jqZ_F4eP6(9>^0E%Z3ao?WAJkoiaPaB\8&57lNDu*Q;`aC`O>4a0K[gAKX_Wq+NAa%,1;dU?Wa@'l6pOR+mu6@#=*K7@mUi#4D*<q1$t+TfgWOM[/r?]!sp;bc)@LtW/b/;$l%HeOB?f4VQ-R*dIp*:M$G96@p>BVn^tIN%<$;`r2`[0,;lchio3/>DpT]=GMN&4g3WcEE9ZV`u/,1;&E.3(L=Osf?YT'$5YNLe\4o8)d8P6%V2C=8`c&1Z(T`cet3$jtd&_Vs>%Jg(:^,M#-kqKui0JX_S(kuPU>k^6:3"su5!<@0?CN#,Dj1DhmH2!Be<aATECTe2t3mm%P5W#lu^Cf67TNc%^\Jgse<dOa+K@JgCm%bnD?Tp><RA2<1LlcNU62f76/dC+DnEnkCnoXSHQ6,1CX6O3us/pCR$a%]W5?A#mPE[Le1c2%L8#2fcU?3Bo&:0u:Yog'JL_pD/2.%78Q?@VH2W/2FL>f6*VlIkdh3lMS>`p4`N+4^mO8XXb-o.g^oi9W(ia)kD=(ipUZe<'bo1!..]P'/%ZdYSC/t5ie*`Io+IN#[&T%Q%Z>:FRMCc=&M)nkN;qKA'*^/##W-i!DCA&RU,A&qc6B3F=b^)H0.W3+SZ(t5;d9&:#1&6,W?%I<F.q&#Y3BjE4W[Q#lkoanY(`u.;%WedYfQpKS>YB*Cl<P=:@dH)<H($T`YZcZ@7c"*A:a,FW4:l0l29o1?/GjCYr+R(tM)"IO<(U>fi[Aj`[VDaopSJ5Xb0sM+uW10>d%WZV(L5/qbV)q#.X+$Yf6X(Z1FVT]NbJf!$6>`5;\(dGr'iA"D?QZ?8%hOo.?C#6*E'IT0@=TrnBQ7eG&&VG=I;CQ<;#4:&DRZ(tr%`7U*DW6G=8B#UW-=2BD_\roHd7\A:t%bi<9Se4tfrFmG_4@.3UA>W<F3Ws3Lo^uW4!umf:WM!a7]E/<SGZ8#a*OD7NL[YZ(n"h18%d5Sb\$jZ=@Fp9Z-o$GN_?%?X7\@o&.cjEP5'bo8?FQBl3hD^9?17NioGcPnjlH@]Uln=**5nhe<MbCulX.1VqPU%G;@_NAtUoWi@%\u%WK%pJ9VD7q@N`XPE1ZXF8S78fdLEJ2<2]u@O2PioX^Us&hP.rAum%M,1^Uc[f3+Xs1FP'B*4=-2bOAKZA8CLao`$?Qlq0k4u6%kk_2q(&7(Dg53)<&>l*_,01AaZ(6Z'e0XA/cS%,sC*Ksog6SZpqh\ilAfu%N?!CuW@^H5!:brN@7^L7`e:5&8;XZ.'=kF/)&m_-\%ALYq5GmZ1+ZoZ)lD<k@gTC-=Eq^BbmqL_\E*9KVHghkDqpc@qNZ4N!gmT!Z?APo^G+^3J]@?r5d]%#:pCSME_S?G@]92tKgJ.at1%lq`&IgQbgAQWEHup'V*7\X?@0SQ-_M5qD5J0"TFM%n!e:Rm5"U!s$m4+EA9c0)gbYd%1cJq%V]6&]bp<XB$\&OIG.qGk[^lDes,I%BVQ-dI)sGXe3+UWg\g9hna[jf2J\aBb\dFe2RH#!o"ak_J2QN<fI`"43bZ+)jX`F`!rDprA.`038dd$O5a\LtQ^R8@&]L&.2I!,J%"pjqf.\Tjf"qn1]X_<GE0F1m)S8LkJ0R\(M4Fn[>M/jl!jk.f(3pYJ(_A.`)JZPh*:l__+]tl/!7MYg'O\F,-jcd^mRh2't.Tr[S%CfH1o'sab0o'1)_Wm)YGBS6bq.n^\Ag;KGo.<l;l:hOKX=&hE.)VnskVk"(_c*XJ%4f=U6kR0F((\_SMYUu^1nQnfQe`@#uVpq\3%WVJj]k_godZrYKfQtCl\Q@L_-h8N015UI?u&Z)M%Vb?db<oq5=i[F)[YGa@ZB3ot[Gcn'q6!"BuTPd2;S3cWm(!*qL`O813^((i`%,[LJ%<K/.o4NJ8%-?_+]7AV^[0e@K.i6JW?\ZLI1VA?:F$.h6)Xj"k^5siZ4IF\aOXc5TeB%.1eJ*u0Hc&UdS(]ODarklQ1+9@XG%cRK]?WEJV#0f#4!j&U@+D=sV`h87)-qHL5;O]eU-C!!eG^@utdCdW<9aJCX:,@c!D"Z%u%MNc`5WPh7UA[6p=K3EEed?46tjWp(A%gp)"g5GW#sS.LJaSS"aVSMPm]/\$GMS%[B$DBU]/JFKeO5/90H7n8lR)W6`6Mqg^R[+$"R64<lJ6;B-u?pfePM_OO=isQ0hRokJQ%[t9r`F8NP!M52NA=`,:?2E4tFTZ>Jo>?,C,DFIeIjmNDY"&Q4g3QR@%g1'=+-#/oOl'uk2*MmGU)"m-IfEr*SK?]%V@prcB(_3(&%m1E9@2qZP*9@`T]q.9]M_r\aHm%c3s=L5S8rF_&6i2?WaOBQUZQM[7u.dgm2VMkX:LfYpMjq#jhKGD(3[W;k#ANI`ANtIs&C2(D@%(kBt/g#\)8(s2C/A%,XN\N1b4eP7=_,s5bGe^DC+9qpJP7$DQ1^2R3;@uD`R-'M,\^uQV7;r(U5apXEMA@p23?C1R;lHY7Y??.G4%YE(LmO6?.N7sgIjLQKZ8X?(0><XXn#)TTpd*9pL@SkAjm#I_dJ2`XT*PUoEPQHP]]qdnih2`!?,d$?Xe0&19Z[gZuO0>^TTk:iA)%c*rl#6Pm#_`"CNE'Y"ePMI$[;&*!/C0,%8oJ?ClH#n-fG1KsK+QXVUoB[r%T#_c+,HGo%XACX-%B!,Vee"Y:3;7@-R[8bn.5eOCd%MfEr#<,@]L5%4M3#["-h1");k[FmfbW!lknPRh6W%`K+rB,ClI=9Pg;(RGQ':e=jsIs\Ith0OKY3P,8OG0=\*)G!JQ:&*Sa$ld]>%7*pZgMC`67OY<KVbVXp1n%tc5@%]5XZtE#uBDNaJY`\;A]j&!jYUCjp@N#'4?bcJ1DIWq^>?MDe'FReP2J5)n>d51[U3*=mW.9`C%oEmYqd59Ri8k_=,8($g!Xo0HL5W&q<QBo1?>lIpe6T?D,1>7d,(^hV#pQ^]S_,YkM+BRC-"4Yp>@14C$AVhOEN'=d3,<fUr#b'kN%6[=M#E<IVO1Pr9\3srXjYaEmn@.fK;1>lrF7#74`)[2q"[51KPA1u8IP(st)'RL7L6/O@QK/B#ZJn]UAcut2a1rU4u2V9N2AlqkZ%?eTZP,GMafSjV"hUI!6S1A'/E6DUR`\>cDO!^DT(Y=QDB245:pcnI3$.df`!'k!]Kr%>1<F>eE<ddC#HJr"`=Mq#d&mChKu%&JK*%hJ'o9F<KktT7KE\(jHEuWttV-mtUp3aQ)@Kp*t+]JUpuR3@`53W@]EHpa2B\k\27aca:C,2/$M,k[u8*U@D,HGVT$[<NN*3EEkq]%Fdo")J5%Q2pCON"B-.f?"0Du;[=IUS<b*+%KqRAW<c*mBLa?X-q.hmrLYh[6k\'W%LP3dblp=rpU478'j/;"k\Re#?r?QoG0i.rc%U6G>:%'`,M7_C+L`)m;/('q*M98['r.q79!0Oi"qF[o!'=C!M,/jr>:;#;=H`GUa,AMZ'?N`$:[KZmTYc6-SS]3^.b/(l/qO\K=P%KLXKeg5O)Rb@&[,/,S1VfG;K.Pn(5N>2.a4^Y:?UVNZESO1#<"$-U%M-fVrJECZHcg\\hRV)9AU!&33QB$IR/&=6q8:+0K\I=uF[%%]]bXoGgT!.@mB+(oUK'mC>L5G_aU)+<r:lDh2*sHg6fqV8NXZAbPM%CRZX"#%U`lpd8e"LdiX7s,1+j)JY]$0k$XYLB2?6Zk/GN%FR-f(F1.V6/2Gf37gY@/ATLk^<ie&ho;KU';9.@aJ[3kj'J`-bj?::H`(uPo.j8N7=e^_Ri(?SX!edLi=!#26;>G`_$DID</t"8_%=GTQ7DJ-4LBh.0)V6H\/WF;oY3lqKXWe$6):nu;,NUZf`+o3C>$Fhuk"u]\2pZ=47+S]en9l=R<#W]u4Rj5*m.SXY$8"(:?O[9H^%1"jnGXh`lXXsNBXY+;9pi6`Dn1F^M-7UqE!j/$`r(8D#gM%nE/7&jruK7-/+^D5@;:CC"h#[uY1-'Vk=QRdo!BAa3T/q>Km,`!0@%Rf&a/[')<V0nL0YAQqZW@'q@P$#mIRGA9l`@ROTfMCt&\.qm'jU9NZ(",H_(6-k=@(>b?rMhh`'WBcrGGR5mJ%N?)sD3<bQg&aRN%V:2d+mTU%D81:BrS$=4u%/Kn.&O=EP+Vk3Y3'@]2es-E[k43?)pEb$M@^QKn;?4)MqZr&>V:]*L*A.Xa#E3iV,WVZ*\^G3;FOmr)%!gV3,ps^Ub[;$[Dgp,BWe+aK;1DWk^=J$03&k*I?(g'bXRg`X_HJnL;^kQr#k'IWAQIAOgJf6:uTOO/EKN"llen%S`jf;4SD*=7i%"=Hj$Su'3d`3lt(6)NkKb#/X;-&,%4(>qkSb@^*Yq42n;`X3pDBP<K%)6k"tK13p`7UQ\#hpl8jU9U]I"gR*M">4"mM'D2KKk`m'%U(h'&C^pRB%F$N(p+*)`b!7MTN,CTnEBZ&pZ*Ujilk%h>YkFpDG4i#SeMOaao8tSlBI5&0)d-8m>?V&ihmaKGas+-;]Y+#f5i.<!%g>C2&^MTrZ_%*:6OUVWYG*(iblj=r2Bmlg#qFkm98S,48l.ct$O&ft9`j@S^HiO]j>-rlL1)L_TnDRI>JBFs`GV1SCD[a9K3Y2_R%KYruXe_9d>fJ/!Ofe$*c`/d97+d8T9>NXpY-'O33IL/lB%P.`mMq=tP`t'(Dc'\JqJW=JK+Kfk.h,8hj[KV7)OZG;:l"W*>TR<"g%p4c87=Nd^ghQC(0@gQ>]CU%LTCGeY.KoLgBQ2lD#HG!FeWrt*DDeIMHq/QEH.VTbPLOE&)eG'Rh7$&HShXI>i#cG?p>>^<g+gNaJ%44IOuG)oi1n<)>[H(0V(S[5]TC(-QtYV;Td'QiFB3D_TZ.NhT$WZ#Q,.5T@G+-9mGGR"gK(X6/>$r&a='pb7QaV1QDkRJ]q0S,1H%;l,;/[2/34R1?RUph4?gCdq6J(=N9_5j@>cH`><[U)&M@I?@Lf^=Q7@N%6';8g5#QZ60[O\aS&L2cqD%.\5`.O1(hp80oJ*1)8"&%)]I9n0cs'3AQqp'S"&Oq&+Wsg;mQJ2j08c/<5D]W`&sPU"=j9sOf9*fTnYU'HdS-($qc=@9%@t[CMsn03ttBY^b4P1%et>9YUg!d%[s_T=2*m0*Ci<W(9Y(pC\UMtHbs\:dC#8U\72iDq+CY5X`GVE,pU,@gn)b#J<c)KHC'O1U9LXm0ip0%gW:U<-TP$mJ0RpMnKGHWL%4,'!X<apR[Gk>bJ>O^HI#0D$#Q\PY"_/(#*]+hmD8_@denbkc*!]HPuqD=5"L/\d!MX6'L$YI-,%M%/jJ88KrgN+<]gWE5d=C$<'%/7@Q>D-'pE;F517a^b!n&5f'bdkT#X)ja5;_.*j@STV97Re:PQJF9"hQCnG+`L2lt5T_:!9pA7gaCq?50Ak[4AD^A;4MY+Pl<2)B%VVtAnPP[sQI%]2g74jpL#E46RU]MRW)Z[-sa<%XS'-EJVXP4o7-E]XP*9L_amg)]Fbu>@L3G8KB't/c2pH\l)68=99&W6upDRA%V%@SeUpAB+uF&0IAPImatrVq"cU9B4iR=QYql]93Hd\e?8#]*J+nW$djR6g&flhZk,ZF*A$.K'4b3Rj'T21G]MHPY4WY[SYe@U)6Q7%dD.[NfbgurC2/kNe+h1cCXF^"Css,4+YN@lJ/N$6'mVX"/Rdfh<HDq4pDUXrO_Dr\d22inU]6,MFP8X)+)jn2Qck5XnP%%qQ#u">%<2.Bl3)_'TcAte"Q3e?#'k>8=,20&(R(]5o@O8Wd7PP!r!NuIMN$m,C\LGQ7caI<dRRrNs8'86TN=HMsjVi4RW6$d6=i'rFW.:C!%*a5f'keN%?*lKuqIs/+?ceLquZ11=c,9^HMrVYEicl!?@/f[oeO[HhlY]q*pFtM,TWO:g;K&Blh0sX/Q%;X+rF[AB1<I5^(A'uE'%A:hjgX!<Maj_1W"hJa0LR,f+DPE:^FU"gD\>)"XrHU+f'dTVqVN/aJVpfBHq^#_8b(822(I#A9R_.'"LeR?ZRognC?gB\.p+.LZ3%LcS8*]UtHKH9HqF,%SGYmA<a4iXkshd=mO)T_T'0mo,6(:_WD/Bm\T4m2uVcQ@5W@U]iK_7'f]kUKYgUJd&4pUF#MP3&k[L[eqIj%auBDQ3m2D0rTUSFb]FUU8l`a)AeArZO5*>1B=U)p#$VK9kVPk?,W/s9=I3QQeLV]lfcmJN"45\"B!\1Le<;Y\phU#a$Ot`SY9iKV%qEcLV[Uf6C>E5\H1A&qVg@'Z[I0#iJEi:kBDBH!GQ!uuFDeIL4,)D/=?pZVQUPBU[#e\%.k<K%KR9f)&<[f6-GemE>#86:^A7pFJ%e&X*=S-ou1MPNO0e/k;oK1Y*p/H(l_`o)l9-3Y2_U'LZ4S9HO`!TlsCY<DitDopQ;.`cfa_?07TB;cU4R2Vc`YREhYC]LujBEa.'%jLj8KW#"au"?-J#k(MH-Bnh;!!oZtM3*K:&mEfahdE&l)`<I93L>]':"-0[O,tCc5Xc#/:(i@Ak>nfMX"/*R).u:6ddn)7FA7=.V%3F%#"*+"eP:c$bUGc'Ph&AG!0)(BH/`2"H]_5?/O]t(&U%hTX_S\nj>UZr"+98PP7NmZ`F0(;T$po_mmH=p44+%Uf(mBn&kO95XT%H^n8+%b,gOK=H)L`B>[[%^;?GRE,So)Z#$p[_YsENJ&[E<l%HEUsVY>\_24$E*L*YE4hi=_,@n7G@ZdOU<4$<<C9^EX$'l#7SAb8%,/nc0$U>?;>kgpeD^=4*cSD]4;m!*\mCOL#d]m.XQ`;/Y).B&i^8hQPhEm=>^]GN->`B8FfBlfU!XY"Y4?/7_)J.7RO8ol-PcR6&%_>&QAIA_7^_8)6oVHD$]ClGC+n>jI3k3$F&XnJVs[2_U$J8Kf>BkL2eM5]\B8]-3DZE>[4+q)2k2CW;F%??=kjp^URiS@B<]nEfV%LR7M,;[;t;h?.5K!8%G7cZ3W=57YU\-UN#W#Aj?o%.?6M7\/$Z'I([fNP$uS9h/*hCV_gf-k!WB/GF"fIi-WbdQ;)R73Vt=nCWaM%6k,&%,-hZYBHKPtpkW/aWK^_ZpcU6,f:kAWEnG)S.:X%+LCJ:2D3_04[R\O&+Kcb-L^j8?!,"Q&aG.)7YZ2j%lXqo"dXmahS8($b%#Kte(Xs*0!$25A:_/>-n\eo7D!WpS4'MJYD$3o/%(JLLY%X<`P4;EfM@27EgO]Cle2Doj1:(8>JRcBRPhQ5gk#K"KRcuXg>nRt]"%V8`1+#J5P;7R9C?R[WTnWc;5d7M)3;=+pP/TmBnj>SA=D@\Y^6Nu\<N=snDGn<Gb2osAJmfeXhQX>YY16p7gb!]L6t:h=)/[ss-=%X3C]W4]o@_eQKs!Rl/te_QStb_#p!_jnNgdUKnq,OiYg&XUU^"`D_]V<@p^kbt06dlk9SI;oj>,Q.kdH4p6&W;'3$=fJsiQ>li5H%9`j@dG@M#cd(Br#f1.uq1)N(0+I[*qQ:XE/phX3oZa9m:%M?\Dpseit%:651d4Q^\`4&e!#-41@qpPTnVFhpLfn7fbR]k57C4_6E%%'WA*O]M<Ka](k>c%oBj"r,T-ZlL2bl,ql9e#$6s7hHEaB'4O7ioR]2_6AR^ie>i>#rq(]P!_K2;WkQ&JZV+Feiic:oA5f`Ap>L8%Z!E:]f:If;/9Sd\5-)Z417",1^tY!`)D23!:3l(dhK6<YT:'o\YdffOe:WosgQ[p]l@EDqr!E'YK!l[&"87<HD4fkRODm4GN53/e%mP1k\)1ViO1STh!2QX2t/e]Gkm(9\ug^^N]_5KaSBPGSVQK=_JX<C3@]=mULg,ER$p?(9L"d"GOj__lI'K#)]hHo%>03G9P1GMAB%L"Y/q(meQF=^+ArcsqrBc7l(m6I;-`UY)p*U*9De&kjc+X9^Ne6YE?sL5/06]cdl=K!l,cW6](DO5SAc/R,)76el/$e52*7_V:O1%"LXIm^TJGXQ(1PdKmIDZ@]L%P;(H'0!X(pecIU/;S22Il_3(?DlD8K>47M!6'"_LdgQl)[)7QcT1!",`\dnUG^q2.$m8SC_l..#P%6"Zg6l>ii7]TbIE0J6,!LB!7`!@<Yb,$8$ZZe-->7O/\VJ8G(qA[B3H'!9A,'1[#t(r2`&Ct`J5.gBuaH'(uYS\Bi5_a]6e)3O`k%8_LAfMCZa\L,K`e7jnT=7"hha$)ke&TkW89AZ/Ei1g3PRSCW0pD4L`u1(JUi@ou^?jddED.+Pt`W-RlKYS#:%6jFlF3]lH9A7Y\K%Jr>lO&g.fsQP=9b6GDQ(D[[%!%L*1"]?$<Q`;Hc":`\q6A:QNEf*f%jBEita4YZ@0PAaHCQJJ8,JJZr:?s+I^9&@Y)61PGIabg,u%&TIeS1#=5"1n22Gh-h;.];fUej%%"AMINSUg]4-MC]P\VTE:Ja,g_]-4obi7gLX@rRR9&R!)IMjA'#1EJKWN*Uc*I*2T7@MK&jOH%geRuf&EacQS>.610S]E&Fs_HH7>!c3]qX;oL,9jOK\hllL'9$/$;5'K6)N!UK2Fmb(^eAC+U(gEEWE=3As@aV].'`jE<n5ATtqM0%iR@lm=eZ%g#r;C6[L,X;i4J`2Mt'6F-s$$P(+N6J58_%rr6)hQbH18@qnWcJ(3k/qqn)UR=7;Y!?Cb>k+09rp]fqQr'%UM3LN%$O%pVGDVjS['Kc278(*?IC)qs<>-J=>=u]f%`qA,=M-<BB0lTBrr/0D)S2[:fQuk1G[ki44egHatp^7Fm_7*Gr,5Q!?KTP5Zk%?=,3T%5+RmgCicVR1dFiT-Z^T>*/*)o^4Y4.4I>_cNnZYo$Y@O%U?$R"_IqQC<aa4j)R6*rVu,4/mb[43X>@QEj)`u?Xn18u9!$ml'3MBT%)&Ye)h*-JITA5WE2bu*YB:=Fp3_d8E'$tU+PPIGO4Bp*4=T*\MT//5=#Fo[mc0=[>;pP:4]Jjkj[H"rIZ2UHmr6(u^5EC-@AP@]0%@Jdd6:kj7>#Aj==$Mdbph!f2"aI6sf<7-aj'%N8Es*cff8<._5;(R's"<On-OqhY,a9/`5.F1h"[qi@^*JBDUfj%?FF-PHD9%Y=I%4F/8S6L'_8;9=?-YK?'TE)^VL*('2pX1,E5I[$'#cuLf\"[cn2iXQ<,_$jMA[uM[7<(`<MQ45SPOjCWgrD+;l7c(S9<&F[A2DPF`%,KbY/Wk4+RMuk6P`kQ^^ib-R!^W2#@6A[e`KBm2fTLSMT&r.CM<Tr2j\"]>?.0LWP2=245B[rESd0Pt8$:m)oKCuK8P%d<U:_>,`%ZjP&!kL9,Lo,mFs#/6@mAGXHW<GWof&K\rtRdFYnJ?G?4eWF]6F>UL>`-*%&?HL!82jRZ]R;k@N`s"]a8n@_[c(Ao#l2f`Q'Lme+%Y3(7T7^T(TE79puIm[,XC6")^Tnmc^KP4f6o^&5p/h]/[3t!l!c+%HAMWe1<G=jn:na@D%=(Ck`$DmbPbp0'id3tthp.L_:Ho(s8%Q"JdFaI/RZ>\&]tF@c^1j]/=`\l<t=(PXKFAQWeTX[B>sPAm'.e0M':dqfC64*bR?NT@)J8[a7,FkOmcdH#""H(#`6.Chkj:SZ$1%hojJXnhcas,ocoMVaWf`jD!#f;G<[^XDARZGmM#20fOA=3+kQ4G!`Hr&`DfpDT_=D0q4QQ]f\/-9cKhURloLr6r0W$Du9:s7sqjb%rd28(\bt8;^Ri&g)U2KScUMu.a]$g7e%t*Z]X(l(7^Jq-[%'j^)N?MT<1ZREVqL-F13jd3T%55aacn+BP].3X:C!)]Tug6fbFFZ)%o$k`=+?CF&Vd!iV/qOXnjVAbgB]@(_jQSQHR2m&-hb)B#N"NT0C6PR#':bUUD<.D4dq&$V1jPNaT&s@N(6bYqaj\)e.Ea7^FoM,p%K<%J\NfrcZU(fGLVaek)aj[?^e-[son:WpSRWT%M@Ic7C4:NW5D$?ks0')8+[8`asPH&fZG^p9un34J09e&dF8S_:rbph=id+Wm$%QPAYH1Hq9s[,lUAI%7-E?i6ZQh][(hGE5.,>m@E]2)F-,0PSNm'Kp0P8td2f:f'PkK4k(\D!nJ"GG;l1q79_ug0i+cO=Aj(US@;t%BG0#KZ"jQ%Xd5-nXWBear/$pqIlLRK.fr?5^-cb[[YNB98OJbngc85IE,79H,agH(!e:n>]@,iZg/rkmZZ>B@R-*P43bn59=!dEN%SAW,Z"Z[Hf#n[@;O:_268DM5:;Uml\QoS<h26B3LQF6Zt'9J#%o'/?S<>`I,(48:HGl1&;p+ggj-4[kGOUaY!*+tVF/\J5+_<[B-%)+YOoRZ)ef@Kno(!kOR46"2?I3?5hEocc?7"YXp`*#:stAA\qFOZeS)P/%F;mamOVYe?@8pMH00m$3G.RC@l+Nd1AVN+c<fZt86I%g0?EXSHf9..kh^#[<+jFas:Q&OGt-_!JT*%@X_kkUILH.HjkpAA1iY@?_?8GAH*@gh*'L8;iYVt(dg]o(Y.V5\6D@qA1:%_aHhBK%YLTnC*70j_V)/VYLk+L5E7:,jC.3)!SsF35"/=/QE17!![5cGL&MT=]ntR<-8jqkmC7[?Y8e1Y/Iq<\1&ok_$*_U=Sc9@Vt)f`;d%,%cObB[=X3>!ZRkAKpaH6NJ<MQ6WPCIH+*N?\I-H0kH#;/Q9riQ1O+Ko2T",`%Z9!7StWZ!MmZjTL97Ai_kqe4b7j6!JlUgB:oO6%e<c'S!WR&*s.G_fM9*9LRPqWt4V/Sf,$'V\puLd*"'Hg`Lo_IZKUsVa/1%a'!XlpoiW)Zr0L?Ets&;=t3jnZt;INp5<";c?I8%#H%kB9<'jEh&7-Z1e26B]E1!f*$YZVme,X9ZRcO[kMP]+a7Ajf_8ie#Jb@[N.(q[aIQS71K__18mSKmd7Nmnt'9o*NO_^2?c)^7Ifo%%W3A6dVFmQf_?`,F@PAr"Q'OmKrkV[jN_W(U&jD:]p&s,\U$:CB9jN;6XL1\)/D<9)A&DFbh_%8Y!P"]S$8rW]or=PpV`,F+pr92K%Z1Yp"idt"Rp"93q,*9U/Xj3hp3tY22-tfL"a3b%34oN&`[hmY:BM=Tjf[jsh.4Plh6nHCmin>P6J<o+,:tMXZlAb;`BIk?Brnha*%R'B#=57TP53XYnM7ft7Y%.mJPO4#:AAL<LbC,%tVHLXT[:i;PT#-3DN*&Qi5iYBDNNrH;FU%P:F_AlD`XpLAP(\9[E%9XEmIXbE-%dK0"@W=_04br;q#Wr`k8=p;%#q?GQ*C<eP2OL>Q,h!uZ%9%-i6A(_c2:&H@oV$7c>noT\XXb:f:)'s,9Hs?H>VGpGqIR]\OAa`4_%"\7loEV^PMQ0&t3>K,lBKrspm9n^?t`%X(L)R*DQWd.qjj$I"MjU8=a7(sj8C;]b&3h[8</Rp$b@+!`[OR^FDc<?B]9!Zl.`=TdC%LuT>\0S"5Wn#NJ6**Z:Q`<<b#BYA9tT_qL*RS?[.QaU(:YZR[Ip9qt2HO,7e)VSGZJ/j_"%5Y"=kQ7ilfJ5`T<!J:HZ.W01L=+]*%.C?Y-];>hN+hNM#8g63A.TMqKoRLO3eq0;FY+EiD<5R/,m7>>H@DHo;glZDYe=rjf@[!`O6X(>#'gN,q]4Aj"BYid+%JoU5be>Zd%L2W7IYR"rqHW-rm9YDqpgdjiD-]".PbWd?(cpf.G)ar2EFL.PC/(W-C6-6H-K[.##!#*N]ntsTu9Tjp*_pOAHcs&7l"6[T^N]9"a%!(Cbt[d+EK7Yrf[NrcWUOBVm)Ea"C/V)2`5U?45r.9Q<`j+jueUo&t!)1fgB.50'.>g(Ue,mu=Zk+*H:K?:jH:oS&&\eZ`jOMr,C%c'k%a2%q_WfSpalMhd+&oBgi0^8bfWA:eB+Zt1aYS'7E;jE)(i?s&7T7MJp>S];=i27/g.$#H(ND&#.5Tu9c+'K=;a1QruE19deI%=(ZA*/lZb^M+KJAS@Gi2/M@I^$3`:S?Bi=eO<DG9+U8_bWQDu0g^R<DJB:+<&Mhh@N,kicou-3D"qYZ+fedph+pJ<dPa5QLU!51A%CFR*Q,unb;4>pI[>;==k'2$.GB1.AlR.3VF+0R3O3X%H?!ZE!i6i2;S@p\f(!29<EM`.U2$k@,h/gh+'A'>Y*L8iJ?OH1"+ZA<(c%LkZM3S`&$r6!I"<jL\VkIZR6=>qe-N">Q=h=&H<ED/FC:]N)$ZY$uDt,*70g;eXO&nGPe4%`d?A-:J[UA[E]?#O%#E3(>424+pVg%!s9(E@k6>8//eS4[gKC@PM(pTg08McA4VZ];h+iW!roA@;,X`#%C#VX/4<$l3Dj-mEF/M^O03/`^bqKiYDW6I,`g]WZioZE<2]`Y%P`+p:Q>jph9dYe3h75pS1L2c:3"\m^N1,/s4TMhQ'Y#d'[qUm0MQmuPdp0o%^bg3*@g3J\a`^/`-p^IBjUG8n1<AS[#Z/D8^4I5,%P@QBR;)(6h/c,ULqB]\*dase$1TZlR262PZ+G@mXBAch_L]B'(Zf"me0]PR3!8c+aC=5L5\8K)S7#1WS/R!:*s2KH3fuf6'@&EKG%Oc<QM[^Z(tUu,_nXIbKDl9A`Gm!;(ORT-XSU98Vnd!u;gV->?>RcV>^B0ok189Y*V+>\.X"Xb$BL@"V[nPWdd!<hAo>q7iO*%1%e%XZXQ](-0J^Q^HVmX[n6/LN5"_"^eu/Ka>DNiU5A7BNA\Fm'$Z#niCW="N\G_l\)Q,9-2_m%^1;,dYol;&6YO;ADTe\qb\%c+_lfo%=bG6K=;\jY\]^F.9@e52q2Y%*'4OVc`rKk@oNe"jhQ#*?+rCB\0gcA,(u;5K],;oXqIg:F6+)XZ-0q,U#"C-f2A<DnU?"0*',)Vo%X?diQ'W0Hi0\*1X'uc1i#(f.W\[qqj(9B(r6d&934CLuW8$mj-lU:h,+L2+7,XF-J;n1r=cJ$h]4_s.Vr8,/EAA>Es6_+D+T$kRd%]$#*\D4]$._BiPK!YG140a;l;'RcOtT!e4+Q6-*l90Wpnb1.UmI3FY`Z;B"Y269)YW3;E=6)52Fa]gU@=U(NPohm)C;MV:#h6;<m%/;P<pB;=.hWu4>FckWsq3br:@5]\(NhnS?CoR>Iu_8YhM&*.2Ne`3guZbP14)f:LAO$:O=1*-:<c9Mjf5QY0q+r4/=E.`VT.cqs&%H7N)dh,Vr8Z0>=?-^80>6I^D@g7-kX/h/AT5O<*\)W%CC\J=*PMYQ<>1tdm+<1?2e7?MU5oG+rBK1"*rZO7\4_:Xdp@F`IbT\&J^%,OJ*OpJd4&6*\t)@'kRo)PtX[e\=u=<O%?Yl:fAodAofUkNogF6S?haPhZ=/pg"h\$jJF\)Rn@n.$$2mZl:fRg?nul6;jBh&cgQ7%BFBq;VPAAMVV!"<39g7(Ybqn[,N'!-MMT!^mAZcdD$2,4:i*+5'S]N[6.OC#Y&,S*]?EhU2C2Q,%!)T\_!6(5WWHP0AB4,f!IQbf%"A?(D]p?\tO\]Il/87FN"sT6o&)U4R7+$=14-RW\AlE!c-"9<hOCq2&bT/<4``U(2,CkMNBRLr)?O?KI-O(2i,@nb4gX;0D$"Zs%%^JT0g&7L>4gBC9UTM]f]g$_;-+<jn%_JDaVLp3@\`Uo8<XN6udEhaHc%H+1-`KqS(EbJ_;De2V;K!mpQe@StAC'Gia6Z.]>K6X72%6>:,P+TMW)]#.*M`=3t<=$^g8`ZSt;BBt=hLJuA-jr#(k!VI,Z[lrM(hG+7<K`",uZ7,:h;Z:CZMh-kG5E4=f>*O%OU3%:c"jV^U%afLaKY;[r[jG*)UM;D%1#@sV_7r`:]".Lj?SMiTUCh0Ym,/bU*#8(go)YaESHRA/ckQ\.u8RAkCS$mDU!2g;KRU?hl>M;O1`R-;T%[JVV95U)Aq&2o-k<cqgpMFhc>fLFe_h_kYqVCQ>67!-BNQoZ(lV0sLYMOq";PZN4WVFhM!8i0sb^`_kfPrjrXH$?6r:V?3DYlc"a%HnL1d`>#Bn&;AaI.-\9Y%C.&*bf7sue]>C6cf*:l`WY:qWPJtNM#/)E$o3^gg]9CcN;6LRDD5i=h8ffO"\gjGDE3@U!\(DUF-'p0%rAastJHW-1`!Pg-qhKotV-&`f8ft+9N7;YFbo<pX([?0S_j^:)A0-F_C2jr+BEo5?WDuU)<45c#@c;S=&NWkq\DK0D=GT67nQ(($%]$^XKI<f_5K9nmTU-W&&:.2Iub$?P3,["$W!Ws,BpHYb)k#>cAQh[&,W&RGaZhW^"R\c?QFX9Y?pmek!L(,F]a+C5tH;rn,DZ7kQ%Tc\C(j_4Y;!P>%Z=*.P%(".b5?o2IH=%%]Wf@Q^KkJTrSESRQtTat\i\e[uV!1UPieZS*'QjkcO@-u2DM`pJrLYB<B%EA\iAIqot%2BFV\-aFMRT5CH&iJ]PD"pC'_/$SP?s2LOlN/2c\2kr8C<ETai#nmNb<2Les55X9=BNRRgHenUk5K!b'MbPZ'lmEd;?suG[M4lQ4%DCeN::PcXk*ACg&.-F'1Nt:]LAQ5B^Aq<m:@NQU!d^d.s:N;PTW^CXbD,#:[dC,7iGp8u8s+^e$qK7g1Hd*;plf`0N$l[pN+ODIG%YhT?7e0$Ztb]Z+5B2hqP(QTPe2l.iP,#61`:!M=r4%b<4@u8nh'N"t6!`q'PoGSpo!F&@/#\sasA;ci@kr7au-K-'O0<S<Cn:dn_%G,dEV[E26%F(r_-ftcR&C*i#A%h3,%JrpMJ`YMLmLJK>HWAPKK=UomjK,!j0TK@;S'"LPUSQp\Q8_pi'S+A;a^81$.PS`=Wqilt&%b!d>Qrb*.^]!,R,i/U;=/NduIVMJm/=HDAtjP5s86As#ABiO8_D;JE.XU8hEoFf]";ND]4$oL0\"IgDR]UCbr[)M9!d#s`(17M"2%eR,#YC1a8t]NjT'O54juf:mjREdj$ckiRX1KI14U?hHDt)Cg0D(h0$e(lZk;/RE?!Y=HaMG'-n\+\112Z^$OR=c$U1.Lk*lM"8Oe%=(>WK*n^I$LS\&+[%NRsBn.r*=SJj]RiAC>`WfQNo;\r<fW*XlA7%%NDNe]`B=i.+E)OcbknJB**R]b%=&#?gOA0R,fX3+g=H63M%M+"1B&,#*3UFI5`ROM/b!WC*$nBA'E#)JpjeWig5=<Mc=VQ2>h^T`UBV[?Q(:;-!i8%27<9-#md@7I&2Ed2([c'CDpkj?l1P+&&r%K-!W(L;QcnlGXOh78/m/LndEZpKJl3F^uh0q@d<N-)6'6^C=hoe5[u!"3m]:CU<4pAh8Jd\t&6GEnU>lgrZ0L640d96q#ed$aq#:%WL32qUuY!lhSfnQ>:"[*Jo[P@Z5Q1V)`#21[<>^kgP?JNdM?G+jXW_P="^nGjc@fHQ1rX>6rp'[A@R)^%9g3-E4q2GOgE^pG@t.u%!InIuN6B7P(p.8#5DOtC2Cej0;oLYPSIfTpcNA!;#R*%',knAdNV-+tO4mme$u@Yd^)RS0G9TAT`3)3C!B3EQW_9p:rs<:*7G]3m%)2@'_iE"Gd]CrpH\C9@lD(BcV7P)uQa`uSR*_W`c8D3KNPmkBd7<(:@Z.1]hj>1?k<[j-<6SWM$4(5C^S)i/99lbI`R-7)=NR6h`%_(J,uEfl4io^./GBCbh%fF*ffCR,&p'FH]?]:Aftl6E"*`.Wl2OPLgY5p6>6Lm<eU"mm0q36!sP-+<Fpe7oIkWY.m+E1R2jDs+4%%l8N=`=IPORV]PHbj)1'k7jI1IE*!_4:3mPC0tmT>>N$@;L/:ko_-]u+/7Lr1-9lQ=[DuSh.E<"]HIkkY'!E'T\g;AK2]kc]9';B9%8BkML/U.=>1Q<1$T#LVo[q.<.D\\0CQ:PB;+R^u*2#7+;9U7jFo5W-6bD,EMV;du+28(Q1M3(IP*f"@`WtK<WVnZ<0\SB-J&G:([%d3PGt7T=N/#m2QpC6`#7TtFs]70-$pU9>-*@mdHo8:Vtk8,12H^AEhbpP<4-&AjU;I[COu^j=l$#IVui#PU.F^1Ym*j@*16[In.5%b[:W&9aj*^ZJ&K^jcCc=Y<o^YL<_Q1!3Y-c'uUcrJ1t,V)H%_TGn<k\C*HEt<>*8I-k,s\eHQ"h8<dWf+fYWpk3-2^:0JuFIU>s1%Gh*e!/Qr7;9AXVE/`2,8hMTTUfl(]YXMp]A%'7P4@V#SY3P[%<R/-A^^lmaS)_=-(=d^/WXAP^W5h%L*q37/'.:_6a;S4Wc6NuDN%Ft0`k\LN2ZM-T>U0s6C8*`WKE2/dk7Xa"oC!Jh\H$EiS;Xo"Dp&9jW$Ep*QYQO="UF24i/XZNos+#qXSk$s)6d16KBLE:J]pLJ^1%*9,aE@O.)0*IGsU.$DrY7(N0"-6@ejhJmAX1@^(*JL]c2FTdRF;"%MKW,-A:go;%7$q/"&s'Da"Td:P_[R^S!noV/^M8?,d-''`g%[`ESko8miObGb-#HdX+K3Yn1_]_1$dio)`q$FG/[HAdY(q!4W1YXWMAD/"Hn<A)A`?tD9-DPb?qOVYUkE\8qoJqsSITeJ.?gktX%%T8:o1/Co2<k$4't-)7?@H?=fG__5<)#uVACYql_.#h^L9s4ObG.MhD;N5:=+>9Rk5[JJ$K*)4r6a1QE[[B6$>8[@)]J:gY>.L?OA%hoJj&,df=s/=.+h+<i0@`.PMKfUZ__aejU/>F+;[$rkBR/`3@oV?g/oMIFJZLu+Z3RC]8peK&"EaL5B:J#[i#gU5#/-YRk`iqC&S%CCsE9-5&&dKAWHL-l?>fWi:>dA#jWAXTqd;(kP,2)I:p)f4K4VI#+tPi3W6m`@W,Ij5gT:9XN+;bt4Zc=A[dJg!DiH>gBh7::$/'%MSID;*%LGoD_<[ZKA?<OqGQqh=]7KU%(r<+!frS5&Fo.fb`7JtkaZndm+p<iZ@rB"%4Nc`Z)EZ9dPFmM-OuTTP&*oH#2?0HW]4J6%;@@'=nr;;0<Dd?I%n;nem]?]1(lG\^e_JHA,31V$l.c=#,-Q<-.u):%N5S*uNrf'l.ULUmQ<<kVW5,(V7U40;Po<H0$rILgJYMHh%MqqO(Oa/1'N)94]ao=cY7"JCRA(b-,LM@h$LV^B-nZ%gpJqt.Vhe9&Y708L?\X=;u778OLLe:;Pd2QJ%jD#NQEQh3oXXZ8^0o/5l%[M!GoaY+"G'.%-kLfVYLfe]4>,Og%[8uZM^VT>sfET-Xqoka4M_>b+Dd$P<Ze^P%ZL]IQ!SI+2(qKCet7#?`d=1ou%8J;L@B<s`J%BAX?4V6_Vp(i4TZe'1D?Ce_GucIq2]bs",2U`2C>K?<,d(9QpJV+i4'Pu%MP&\`/LbW#T3OgAC?e0nLW82AbT?)dEDph-*IUb.d4%Y:3%3NTc%\B>3[T6Jn;sebd@rH<'iTQiJ:EQ51':]amL)T`.e-AE^s"2hE3*lYH^+D(S"DMF/cW&;`[1J,puQlYNpN\rD9K[Yf4#%XV7dGm0h4NK:&>]-P41Oc`lp[J_]A*GViOV$S$KOHk+'VWJX-@*NOnrN?`+?c&^>Wm6U/:OeBl:U>KUZ<M2GbJTtr%AJ&_t0Mm9^%OS;&d(g"-c@%'M)PY%r^)3KkgP\:)(aTM$f;mYknhR>B^Jj]3P=pN[[(2L@_LXE2X=c/FqWrZmZXY!+5:t,_2lN>6]S@XAB6"[Mc%'!M+1>t5sP<&?/*R71XT2kd[K.:&C\lmEA'ae&1Ehbr&s2Bar3SYc@8agVS@+o5d!D/6ehJ.%.WI#&PYa`V'uZA[,].*ZqPjr2LA%BN3/j8lf>B-ahiTGSSN'mG#m/h8U_ifFY0VF&c><1Q]jX(Gmt@L]sZ]W5SdoW/hoUJ*e\;_9?Y1!#$P#LLR<7j"*r-M-(l;l=5=N%<V%K1L)7c?C@5m@ZaR\4+j"-[H5iH.%=qUalV-mQWMLb,bQ`fM6t>`U;t4_6F_qY+d?-cA0j;$J^m<1'0]/LP$3E`%#YuX[6>LHk%Zk6UX%YIFl>7k?l7nc6bS+3%lV]Ur1b6Y!hZ>)lcc?NaX<\nJY<Fh'?2M;:gD+p^eK@tK^UYtS6kIZupNWPF6:%;EPag9srMdVa&%CF_7=*e65.<]RR0cM8$6W^p,H'uu5sEeFcJ82M"1ZsQ4\h7KrF(,$$[9=!mH%,(]O!Om2gaVR0Z$m83?M\&O3<FJ;L$rPP_,Lh.#%8q3u:M\%J<M9rIO=K7:L^`?V7\0rl_aLY1Xk*iAs'XO)@0Gsq^5=>[hgS>15UT1X$Kj]HIC+TJh<0G@$05t:?$=^nrQ)kr^N.m^8%AO3Au2)EF/@"+%[3.jWk#&2_7)GCqcb4!$/N6MRo6R_LD\XP1N,+-anVB.G<$o])?e@#jjFg>IjM:*9(d3XKt_.h:eN7$@Z8\/a]%B>U($#/!k9)'t0[eSn+SI?7Hf[MZniJ7(>ig/@#Y"i8!.:Mj+C(5"NAfkU.u0f[-;7\2nA#.mpPTTMmQc_(7p'\bFNp""5V,'FhX%cnn39CB8`*<h),`^mu-Ic45R<VptP:/s\4\q^!HE8<]fjb6\eY/J`D#HW*SC<XSo#9g!sY[,2FFgdaeA8!KWT:i-mIDJ3R&5U7e8%Wpk=J#"7#jn7p'X`'OI=^d8Q<`YTR%66SAo`Gu:LjD$YF1$fB2it:f`/LPGmehY$QXV(4;R]!l(*eL5-H*P(X;Geo^)E'u]$S3TL%.[YAM*>X49%'g13!IFuqP=95nq=T=9T-1"]%FAEKo\?hgD5b]8,#Aj57,&9kf2A]DIo6`9Jn/[s3K1@=BTJIU6tFc/RI@kQ7n\`Z%HXb9%om&/\K1,V1U5081<MQFEW9-:N'd@,J2])NA;j:Q.X@=EMK2S-Ie[4_s_B^]k*N]BX.I[P**C6?o2]!6<X[U[)o_7&5O.WPH%(3M^Fi=-NAa!0pZJYaq!T7_bIZX'p6V=]@O>rQ9p/pYgjJ3AM#e4W*Ge;3,1+Q<r:`/m#U-s>5=9>L:$_hOl[+1:)%&LOb+6>3cN%+u](LQ8TeB4[:m@>DVQTjpZ"S;N+X2R3l]H2R.@Sd:SIhQ5ENDqn66Pr=2$D2!>K2ore.A!%F$(d9=qW"onZ:9j(Q(rD#a'-<80f%f[J^[^T*_9Oba>l7H_pHLn8>d:#-7[)/P=k>We_uq-]5DH"T#h%_>jSN(mC3X$nlQB7M=?!I,mt2\H_`]cg2$%_BY=(InXLN;")Q%?4E(IHTNX`MgZqXUApDV:.,p6?W0g#c1Oe!4mD$?6Y5_H4EU$#i[]1++r;tmG%2YE^Z\/$V(rQe[M6,LaYm8JPh51DK7TNu&TWlR%FWdO%4-OL@,]7]=S7.54p@.F'20QDXDe4n7pK`a$h@TTXK5C8J9[hn*ER-h._Xrjo[7Y1N)9=9W]SGK@[*dN@n.?6af;dR\@gCf;%D450N;Q>CQ./s'VO89`VbmNBeRQ*nt^*AAEb=Ko%T/VW'n##X"L<::uj\QNjKO5rYB/Y*LZ/A%$K/hT02IksXL2/_;h%n!qA"e[D%TA4E/gM=VViEk_k>FX*gQ#lA(bg;'^Gq2oiS%I2DZ!miKIR\4\5[sL^+D0Qhc\*bu7jb&pd"45""Cu%F$keS4A:9.Biq(Yc-t^jL%YO8MJ*1*ajlkP,kE9bo4%R+@=`?:*3^60'F9[FidQsg,f'usc`_jkn+:1N<&T4\5S(<ZlD!P>JT@hc>Id/&FLD$HocLB]+9X&T\B%m49Y&\6TNs/c'T&JA+26*`5?1#=e4:"n$gioKL.M9Z1K1jj>7\PCR]B.sV\>(67.b]g.LC^c>3eXHDIbC$=[.et0b+>G_&mb:G3t%STZ_[Wl<YSS:)2#XVDq$P:NYF06o2k:sgi'K:"=;QK0In\7h907*HQI+3ik/FKb-n"0JUhdI.\/-F.+B`b7?hFMAqnNS5kLhB;>>%Rp6?,!Z"^J(#u^Y%:fbp`b38o*2K7j500T,0j0<ieC(NfJ%Bo=Hchuf,c"%$Dm6-LX$lDfnGS/sXG'_h]VF9)d@7Gu%EkuhM(=If%1"id4U<:U1P`UVW:0e1eG>V=[0S"$sgIE=$6U]L18Kpe'4C=A+dK&)aG43Q*?Qnf")&o)n2r%dHBAIM/11\cF/$@R%+QH*!T9QN\%-m&4u)X&nZ2GCRpVKFH`C2*fq'^I"=._H8I=IT"W/:o<6R_?&_H-NQ#fYCA$Yf*c7OMSaoK7dSG#@g4+L@!P3!BI/<G@Y8-L*Bq/%]_M"4)3I4dA-F=t-"=l#r!qW5(YD"cH81er2+5VL*tW?:A>BQ00piQm&3W1O+b>h/V)3&+2bO`F"/DQp&2@ZR76Mu.UX;T+emC*M%N>fLNAfM<SoGfH%SVC_QK6QY?Hj0_&@sULuAp>EZd3:ut)!MTGa;3bEprKmGLe-CiMRs!!?m4Hp&jSiAZ4d>Gg!U$)ZU9b@&Y6ce%b__nH=p&Fmhq9o\VQ(-6IE6)Rh2\P_[7A\WB)@d'JWZKjeJSN2Se3EiF@f.agsd-Qp2H?0=j80pMdpgA.#5#hH&J_jQDC05cNoo]%@)ZQS'?p\:6@aZ'lKa&@ikk?j@T(;(:Er&-O;!?*mOK/PjK6]E(!6u!M_%20W@8VJ1>#M08?s@o%=N7ui*hdc>pBf++1.G*HTJN)%8j^FG6d#/NSG$81J.0\qfED@Ujdf*5cIDl[;NTuad7L:sE5nQqN6g3$QGu6m):o9IL.!d;Y7aiHc$&*[Tqi5$\!95JK:U4;qM6oR%ZkbP]XgW]#`K'Kkil2fH*9_])EZ*-a10EPd:3,+c9A[k*<ai3QJumaqOu;P.A0G]&,aDt>hjgU[Ect)PBdRkc*eJsARmT%,V`/S0%3Dg1&%@Y:]38[\&b;a=MEZ,]MS`LPnc8%BF)S3G"Dh-CQS>-F\2t/XnU"-VO_D<->PC(HfWKB7Z"Ia7#T#"$`p]tF;!L>LM#Zq>s%9]Pt^`)n='BuV:'LN,_4*%0I^eM%pCn7TGN?DF>k_(l!J:":WT6pu[H-Q.S@5TK^QV:Cq>+"^d?9.'!Ca>u5*djM4,;S]tG%Io1C%BRumMXh`sO]4*V45B">06knQ]$t+#N\1limZFJs[EZ/6H9BYAeOb+"N*\J`dWPtG1>T@!:Q3lfX?j)T,Y1srr"EgPkrSDJqaRpfi%8<l;njCn?31kH'a'LM>(W'a<#&L1+G>9YRG2\ART\GudjA&-"9gU](sZo8mu0l@a$mG9=+?q1$\O[ejulXpeXG,?FSI7A&2,2Pqp%d#o1B^3TMmc](dB/qdR&ISK*9/[e1"^JSW5[0V6pO[[#1"r[k/>&?)<$q50#0OEC]3jSTkk<t]b,0[!.PWC>75chDBgOT4H3jYq3%8:6Yj/7>,)fMu@]@8kTh06Ig7Ut]@!;^X:_ato"+qBDTs)R)2`eK[57nHVN^`TsY$(lCRZXc3[#.aA<hmC]kJ24DbpjBYXE:,9Fj%)NB\XA$UYWO;la6*:QiR/""7H&do-K-DK!PVR?iM8#mcOD2=R6p=476_#Sj?@\1Yu[R*B5"<sR!^7*&pJJhhF#tKX8CEJAuQ[7C1%o%>r>Zk#B9(c8W@Ysek\r4qJ9]<GWdBC'Z32%idJJpthdo2#m?ff.Q7=^)&ZXeS0fdsdUO%7H0;pR.-a5iI,Z)@I>o%?6</n^6>:%BBKdsl&/Kr]NPk/WE5u"d%n`HLII[EP7a:L1_s&[RITC7nRgD_$<E+--[%]\WO(IHFp;#(m3e8HOg!l!"aa0r!BWA<6Y-n'@J$(h%EgeP\L>!-Y6Z]f(NPcREUlJ1Qd"BDE>$?E:\>l[5'*.[GlMOU53OYBK$`V)#%(rDL-P:e%]u!d$9LK+mC5kpiBZ,QZ>Y<RH@S4m:%BI^`LIKc5f`DUH4%DZ,h>IT9g"//3G$L]O'/W$/%%+M<2D^0Hr8#k*kW0J4kLt94Q4h5fmi?t*-lCN<7JJCbXX^I5"CL_lAkmYBQ%+fpNLDm=?V\7sc36^@6Qpjbc6NMs+2=gURNM"VeshEE$ElXsJ-9H+C,918DcMKk>VQL3YbTX1V36sNmbp7W1m&8gUf=eT77DetRA%M[&aT91/&JN&CjOe\(]-P\Bs*i]T@]cXG8c=9dd%BnJPq9>mbLXK_q1NcmEe'V%n,SRJ&j7$b1C]$[u[9d'M;J`5$'T!:-a!9PjL%R(=c<ld/;;2NaJ\!o_R8G<7h96gPG2YdPH:17LVY0W@f\.ccK_fMj_@ka-uKDL3^t^7MHk?74[;=:EDLW#6OW&uAT88?c):V7J)f%3$-7Ofqo;B0$7dPDJG-[0Pg8H4K"c]Rok1pQo<rY+p2Pbp$U:%dBs4:-JkAG*0JU/]O#6dA44q/(MC_YLffbqi0ot8O9@m<R;2:a%8q;K!npObr)U;K`d)h7uD-`A+hC<50d]s5Z?`eoI$3od4,-n4^:2Ab71ID[%[;uTWA=iS,-GpBtQ,FOP."-02eO"EgkZ374L$4*l%(i$LFRtUKkLDRki#_N6r0MOfrW/+RGW8\dF+i6?AV$o$p5lOia,eOYna%I)6r"Drf@d7><n&3fqJ:o6@\cbeg+ZKTIPW5^a7VE=H%QAqRIN(9iL:d]M8@@j@Y5mHPQ92^40g?MVG>HkBUDKStrNYn]A7mocN)pQOcX99OU7k"8[C*fP?5/*g2lc0L.Mo[AeRj3Vh%!gNs%icu3b1c/h[#sf=NI+G(WLtrgc48!&X<Z<G!p!+E!\E4\@o#?>?6&2%rUU(%G^=tYL\BT.*^n?hCJq^&KPbSCBKC`o-($UN<VqTP^%W,#^J[ua=7-kX>9CRX'-VTHBM(sVA4/QIm1)P:>k,_?Xe.>QREK3Wq+!kXV2G+(G=,\$r#T(/ohR<(1;M"iQ'`:+ohSIAF`KWSaG%!!M>_+U*M:X!r[YcEc".?&EjIrP<7%N3W]65`R8.!5ND0=?Wh7b1/Ss-7(U1frJ_48%%Ef_9`63B18sKB/u^)e]^,#D!LU(j9RtV%ECS`N6G(]smZGG/J3+2@T?46U=.i?t@]Dgpd*pK5q:!A\G_9PX>%4N2mUVt66l^d8*oULKL5O0>ji)*sDi3"I/D_guV-JiC:e2'[%^POp\YI!N&q8NbT<&I67o2r5#Ff&[lH`E[:;HAA;RS)noVWnK8$Z@.&HaUJc&Q*S&"aWH5"9&%7@phpKSH;NL6A:27_&"sZB+/AS%lPNIO9B/)V#6H3(>_<KXXhr)8mFbB(:j]J3T.S,Z"':;W3ip)kphkJi#'HT!%L-[^Lda[M(8'ZNjbIrrLdJ0c$A4YTjNO(\1i]Mf%*pjH7TFX.&?*m+/_n[FUK;%n;/nbZ_2o;t%/oQc*M-/;(k7r'(po2`XGN!d7Nkiemin@+).n0jXR=lLf)O[3.q]P(UPEi)X!i;hp%CfmV>1VO1;q;a?Y1`R\h8m!V'7%05gbF'[+Wp(mn/<=G`TFmZ_B#`G'2OXF"7FBlFC"X&iB=j?&R`_LSd!%4$XIu7KG*22GQuLE(%[4VI&kH2+-c0%GW/M<b9!-ra$';"%4gaG^KTe3)jCbYH=&_.uI2)3kRC[h7j(Y,snI5aT4'r".FcH*?*"*9C0<%$9q$baKQ-rH7=%_OSKtd7#jYG]B0f>IBE7_g?J;;4Q:$`^$T"c.Zp[?0j?j_Op))'X!;Znn_+i0?>Om7RW#h*HkB`C>7$H(.9C8DsDkYLaX#g7$QQV%apX!I+;qlp8rn(2)oB2pijf[GX9Gb<I"h8\$YHIM<h#1S)O.?[9GZ7N*gJi05a2rq-'%K:ZEYDYi's1j-jI_M]FlCm,]L68FYa4q%T!.+36-[L#AqLF-1e;&%P"1-9Ms\r/>:'\(^MU0/I>lGqEa,JZ_XAEnVDjTqmbG_jgrW"7#KC^K`Ynt!<c4#CWEhK0'5[<;l.l68%;*`Jon43,bm7#6,3&ebu!Rdo^X79`-A"]YdMf9!99nCOC!(tCO(cFi&$jU/hjIeE@%NLWP4(h12Q8(U;olK:m)P.B$l6n!Ri=X[L%O)ijI<bhU=&In!7KI&3_'7bL<%,n-Q]oEdA7u1>EUFOEL0ehYjpi'qNL8g[X?AjVS(6+LQA2@&'Ig"E!O;j!s0R/p%'5o0KLoeUU%DXTZ>Oc5V+7Dt!Xgl/ShSMPp9",EQ#(#*PNneqlBq'G#;(2Q".&o:d3QEI4W1]ca_3(ue+\:^=;$GRjI`C7RC\+-!-:m'kI8H3fP%bsN*PYCmb"!#EZjjd'Z'p+:u`am(gini9BCTjT(7M#&:r="jWB6@Z="D.,#R##<+6DN;N=-ZX)^Gm<S-ds0TRLo:VEmHe\ueLXQA%L'1n$]l09OQ\Y^Q$5k]LK0\F1gH7)YJ62iCf91]60Q([r4t0H6fYLJa6aJ3SH18?7GQdn9D?re=3LFClj*`2k'!OCEfWiCa340dV%JPY?M6*h+ZZ3RtM-@ddI:#'hhH)55#)'#J?rB6)c3!r>8oH[0$A>2PWl<TFt_PRp,5siLt&9`rIbs[=SA(NW$>A5?Hq>2+A]o7YM%/_e/g$Fam1qNAK_/JX5#,[a0\U,s+"b#K7o`&/,a)RUCKgfC&kn>";+d]6eO*)JeSaTfkh0%5)QHk.Y\UeOX(cW;-l=IGI4,B/D/%VMa-D'2WaXP1XT?QR0j0H%/-2&n(Y^-4,"SlqG)28ri$78XNX"Ws8Fo$e%+BW@q?`c,Vl;K;Nk:M1`8H<[AtnaRY5V[nI_UUFkZJ%mg$13As)6.TWgq0?D.9o-P>2+6^BUkU)+,=1(hkPlBl1DQV]t(!\$O"-Whcsr19O7OD:`eXCN&gW\J-XKhto$0qqZ@4+I?"W;5FT%glHE&#!o6Hqa-QMmHP6aMg:c15f$0k=<[?;Z<^2ekai5k1oGH$CU!+s1/?uHDiSSqOL>F%i',dO\$hS`m-\-W[e$!$3T0/E[pWOs%"hc8!D<F,BT76NMWTab]X`aodeSJtZaYHeNK9at.["M&L8p*5(f7]<_G,ZsfBIddpm3G`+;s4!ZKhhYB(5kmle^NA!+D*4md._:W%OtebkgF^"7;\E;:`f+j!,&p/?!?$9YKi;_q_;'nOX9:aQM/NK3_8E';X7\qlB(d%s3CR0q(<K1MCL+"&6NV7&K)ku%L7Hf2dM_I\%6kmB'-%Z]LRaZ#MmA1/me=JDq6mW1TGQX>2A9p1d#QoMj?R:/m)?p8V_@W0=X$\?(Asf;Qa@!#s9V3>YQ[ib8ro_Obl%]a'+Y86?%M26EFc,IODed_s0HPC+,1$1<q"=T"9l[<9<5Ya0"(4'jqn\iEk@s_s,?N/[;)"`e,[:,.K4)FH3C9CuYN#F9==#ESoCHPM"bk>em%^I6:Jkn]=cjKUa"$:dg(Wj[coU6IGX@^HCi_S^@#&Ai-$#SP^hMTEk-Z)D6N!PqjFn72U*0P:cU%="[*XGU&6XVg!,2lC%ZbWT]M%$]:_=YJ;@0P[^7Hge>m\aQ?&m(D2,"l-K=H12<Zt&[?f<@(3PNjrkRTqH^S?k+OE8,tVVIp0i_a";k6XiVhFp6>HrIl!(HQ`#&p8%*gV$-etBIaHb)q8DWlh06u<1%Zj^PQp:8()JaLfs_gn8a1:bDmR#rBT>Pq@!25ie/i2[2I[8t?kDk:J`MLNEnq-!fL"Cl-hoZ9od%O90!%oosNYnCb7jLCQ&;4*lOmdj^73YVK$S[+jQN1<)TT<XIP^@`12qIBM6PDl's+\K1ue:_iPZj8BEV7#f8D#$mgV<@,F>a)OF7%]6^AL5nBQEZ`V*BM-1OFe%=aY6RpRqGB):S_QD],>dEH"A4nn#ohB)[L0V?$6JOf?0s5EN>(-)*m%7UspYkW?]B;]Yf2"#KqXi_2%l?I_0`;@S>St+-J2a9Mk5<(_g>1Hh9h!3bgT<J6Cj2hbQ6BH#:YC;o=jnI4gr,!YVI?dhTXhOVVXcB@AB/Hn;!QKF.Lr5rngL,;H%+RdXuJQ-Q@q)9W^aGn=;eFP%H-nB;c#cQa'T`:F%s1G)id7KK`RTb)NaV967iMZ5CC&AAZ3ir<US23<QABtD3^F1q_>?IK7C;hK@%D)Z3%)-aItVR@edkVSq`I2\nad2&$d4p8]*^+GW'`M>QuOUp65$eIH#_5bO"=*`:+;@h1//d?fOj5I?jT#*?&751hl%Q)SJ3EdQ)%!&Y+Xh8&O:K.#R-rTRsI/E(^/"9"[IlV:d7O7\X8DO#jIs54!GJ==VPhWPAU+]i/KXTY6uQrI*lSM(@CD\msoV/N`P4Orp7r&lYW%T)fMbF4H2R:i(\:+T*j^M.rFZV)XFTnV:I'"fmDK^sEoaMA@l'%9gJi(oeTn&k!FUU%UoMD3j'\9CjG'(TJTt_L`\fZqu\HN(k9V%_nW*YGZJm'7-3K?=l%ar$?B&j1_ShF[qjQf$VfZPI:h2)lF/57RBZh@^&_<&WTqh8&1)0tc-UG5)S;0W*mAij,"f*Q,ejPEH!#ME%/0l'L&B=c\gqn9j<fdJCb2$R5*4#a_!$k^2!Aaridg9%gM2nR"JRX96EE)NsZTs7[YTJL!!j@JK%tjtO4TRI$cmDMcZ!%?8ZsY"U%$6hKe*TE\%A3uQud8e=N#nb.[PG+N:-(hl(_XbAtG[NR28O8?#V?f]6"IF^h]HV0hi6LQm#"2()nJF9<_,:8@e`"eMJcNkP9P!m`%0VEI";NJqVb!F38+Or(LK9?tB',jmijf'`eDZBi08iD)-m9i4N#jD,djT#ZpW*$XJA^ph>Q;4dS^T!"0D]qGH(/:542u\,V,Yt[S%dXQkgS!j`!Vur'0%rcrs)a1F0Ldd>U*<:B(;k;79PBARm;4Z)a)2Q8Jbt9Z4c58Oj8Rd>m;;a3H.R&HX[R._Rn4r5.K?g%n`-MPI%bZat&??/^b:mgOL>'6&ES3HJ)>Cjgd3fc$N'J8DU`Q'/,$*CtuQ_EE5W)23ShM]SXAX93G=8;#J'a7PF-`\GQ]U2)U$4[]`4-?kg%&l77J6OTXN.K6C];cP^O<R0:mN]8*P@["6q4?*$\W"E-hO771&`U]A(%T56FjpS!E%:72B9dcV_BOo+aaKYhkUPhc3h/\gkorU11%(NRhs-_.?\l+Wu%1JLJlS+I-bE'S&5-S<Ip:H(k,@o=$E303'_SsH=t(\h-Ol#C7A,#jJKTXL-YkqIO\C"H*s+4*R<UkZ5'NjPF@%eAX>/Bpr@(49`Elc;9f(ku8pn>HTo=Sk`T%(NH'ALI?^DN25Z/JV?\@1:sU;G)H^UX%]7QA'+rB?)#.O.GckGLf:B,qF=Vprpi<!%q*g?)"(t3a3q\VUd+tWuQ@ht^<iLreS.&D,i-N@.-5(QY4nrYIj^G#8s$O@QHRGjB`Nfi1;Wr5^'gNR3'HES/A0h0"3/VbS)6%_'%3ej/!P^$`&&kiRi;3]sLVe=0.eQB;&Waq":V_`Z\B@=j3DS5cCh0\IgG>8XO:+jg&f"\:mT1CmY&9Ai.Xju54=6l(A+'1DihnOA[%puLeJMlQqpH>E3-eF8I^5<%ZP3hK@VWg'&s`nOd!g1d`[SQ8kkIb,*BA1lJ:a2QE7PDa%D)Hj-0..:*k4TFDnC]*A)&\TM:S75"t%N,ZcPIDU9f=2.Z-k>ZW4,(.&.fKhD:k<-1KB$'<(!(f^3@<:OuP4^<'qD>o<4opZ=XB'7j/FE#lY?Hh3g^7QB[NXDOO_LOe6kV4^%\Mh]:1]kk$<]hh`ANpAFWWd7_"R+7JIJ;1/5Ad7fXLm)0F8&]A!BsF;!lYSN_5Y(I>#\\71r7$[]n%YqNEd^HI5_U.0(;#)!WZ`p%pS%Z4S#X#XLmmkF*<1(b)g_NlLD[#l8'>>ZWC>qMEN3FY44:U/Y!SK?&\9+j7)/r+.Trk`i*l]4ot+!\'6]uk'0CLZiYs8iVC,hB%?5RQEqJ[\+,OijH'/aB`Omgb^[dC-IjDcA$MJ(ACUf)H>#+Mu8@D1cd2N+!0lA.8ApoP=<s5-p]Pg$)IiMIW$YbQu^b70YbK]:3g%&'KL$,G29Ao<!o$rbn>GKcpa.KQ!+iSKdSXeIj5XKs`=4"2&.YW1)?W3On5GjtOu0Xg/&>i`a"+B5')FHR_jF[.?a<E:>2'D8tWj%"=.1868H,@62jrj@ARYbT*6<GE0^q##%V3SPbtKd/'nET8DY0Y5$:VgPNum:lkQ;$R(qlVf;(3i2!Sm]\)aK<'k8tR-\+0sM^d,*%Wkl*%)NHQaE#T#*YS\Z$.7?Q,#oV#keK.u=LuH\clX-4I&pf)([]r77$rO@QZmN'7Ku0/F,I1Sl:;<*1Y3=+no\?l&W=RGs?-`Vb%eE*F&-ha4=H.8Jk.[_-95YG>LCMlaN@3g.S]X/4tXaY`Cl:CWOUrU[lb))WN$?^+u0G13a,r0h<Ne".7'MUaN31N,P6']Jh<OcKa%lKZf226neAAs/)q=DV7u/(]<'&N&;XWY.2VMjB:Ej@Dpo71^>N080%rnJ]6&MWQ/:ZJNq#>9`oaO:X,0N<nMc:t1DZ/`SJn2Rjd6%6ct$];J4thi#W7WU\OM^RG/Tu1#/1X+H$tiLQu^Y+t@nUQHI?c/u+N7ILE8r.+=/`+>B]tf&/QGEiSTeOB-7[InBmor0RLr.N#/e%M41@o9t1363Qg2..rfmJV+Gj\#"l,]267LFGRP2b!!XqHWO$>.&4U/;NlNQ9mm:j+o?jqp5p0?a=DHEq*$ZZG0diNmbFo$5b5c`q%o;3'"nhW,$ZBeq=+_d]+Qkn2mK42T-A==^mNesN&T`D$s6q(Cc"t<p_Ym(17N,8^J2K#R25Zs).63TR+,]6s9C*ce^!l.o<(g<nI%6k6AFi=g$1S:9<A[CuIu1.7TM_`S/;!V6;oGnOpa[107>6A#0"gZg]@h&2.(I/>M!QSYTl3$;UMq&s1Og@t#k4%><KZ%=;,o=W)S%Ymknq!b^7ab?"4YM1/qRVJ[J7cln;2df#mRD3(ktXo+bGZgj4:9J&6'H$\ji&7Q'YJq6:>8r<fj6+>L?1)M#cb7(PO=tWJ2W397!%WHP8)'ZO'*Jm(##KlgS`YfP`H9[b_CW5YaHai=a%"lsBD*OlX]?WsQER;0a]!;7I.![73bJ7f:rc%qa,Z*dgiMIs/Z7C&:&43S#K%j;J'NbkecA:6@I@bDic]AmH6);(I_a$f\S5?j(-A[OPZs6EHr)7QK:3BNq8H<!.N@RV)ZB,DLA8af&]QFQP1C;6R"S>0IFmOf:Xa%ncKNsTsbM84dcF&#1T6LH]K?*K9cncKt$F-N?(a&o%`($QEb=ue]noFb&ZW.2\"blBMF35PTGi>Ol$DSXTefXXB=j]K>:\b;i,Z.%@*@`eqI(20i7\XHZ+7T_Z"kS%h6K,N2t>,m9#97/0U=o0kNpnH!\,Oc0.RS>5O-p)>lt.-Z0H36_ikLQT8T8VR@;R"a?&CW.t1Y?%XNDQ;Q\jM>*q0A=5nTKhH,/aAMZoq.J&@,#E7$^eN2li]H.+0M@Bd+3%BSKW!Eck%drh.^dREV72.2;;'iD.A;DeS::>-bb\-onh%1(n!Ic<UDtbTiFfq&uG6MDCbKnN@N$@>WKMX^`ltTXBYpMq`OX%L_:9UsOYc'EJ>B#k,^4.K;;Q(7htD$-?9m+``=C:9cN+O6-Sp%MF0`dod0o[l64i6kf_)51F+\"o&*H28cTMb)epo!V<!n3JM5-fR09.IX+<Ni$7d]*]`OsAglFfQ6Hh;eZ-7#qa'k$`R[dAHUpDQ4%*<l[GPiFRBCOq<S.Ma>`'Tc0`M.3mR%Bc"6<H&Z2R<F@::3);mP2Z&2-t7It%4u.X::32J#6h\$`0Cq/@Q]]X6U1tRP]KY+b+qO<%Eu:*E0k)XJ<`,EXN'8Y\<=s[OK2im4MKgXO>I'%?@KDJ)Lk7j:qK2X1*P=\];u!3,?L>V.$+gHFF,DsGP@-Dm\VR+k.F]#RKleMf%'\L2X,)2[2@o2bf6;T)L1BDccF/n<qA/639k[G:R4:K%_WqM%mgPluLG-HREQdNaY49gB88OUe\Xo*cp@KI3P1l)sJB3^Z%66b1j%ai`qD<gOD]Q0_/=!@LagJQK/=`/elLP*Jf"E,ILlDNldb#&,nj<nOoO!2Yj<8]-H,q9Y$,-e?cXDsV;PKBnO0C`VooH#6i>l-tO4%AT5nc:U+-.B8p(7M:&6FaG#"8->*<0U&):Bp>-bUJ.g8,^_q^-4p%%"Zp6gpW6&G?V0$"lWs8qJ'*`:@eq!kielC2d7fe2V,!64-%!9A\3e86\bOoYsObg^8@fKi2fWkV\#GI<7B_;aK[&c>).cUn<eORlejE\6U1d._P++e5%<[U>*QJd5XrgP-[O25-Fb$)L7fYBI!k%Z^d#ZYq\@8>HZZ[EiK/+=WF`jSZXk!QMAn&o(@(1ep&dDV/J#BU&p0,<rac6m%L!"h)LejN3!8a"3o%I$!0n%d)uV15;^2KV47!M%ArRB5m:KHl!0M+PDtMj[#]EDqnG+W]F,VV]l:T1uI#RTqKhP=eQXh6_#bk0Ua!$Fu*o9N:5RG3:pK0e>9@BLrRWG6c5sq40\ntOs%-sHkGN<+4'NXbN4AK4m<n;ucP:]S,HZjhOpd^%,W"6MB)#Xm&`D*2+YDF0?KEgF?3cM_Y04S\1!naZS,j7B&1S,W'=40iX>raBH'%5Q10J\D(2IQ@0A\X*a/Hjlt8S$<PL.qA2NdaRYiaS!1s<,KVN:T1EIkPEhH.kg))=NbBM$eaq@8L`P3\12Sl?0;#)']pZ&B;p&1h%Yd$(d&7ki"fWK'MfuA0F!aHa2&n3iKD=!RHKT?3</\Rt*2TSj2:`b8>WiL2sWgLUNgU*_`Z*_/0f8u8'POZf$,AQt/MZqd<-0rR9%o49a8<OrE(]!l[&%D*K8QHRtI;?[P\.V6%fUZJL';:*WIaFdKuY?!`EQ#Y2P.%Vj-g(CSnm%B`R*LcYqEUAQC!j!0YhSQK9=,O9u%?Xl"r&/!"<8oLG@2m:5D\H]?IEB4jc!^u8hN.Q5$cof[.8l?[p@V9dj<k44(Z;1bR"9+8mD7p"N/>+T<6pTa`CIaTiaDs/<2_=.3%ZnuID2?4:sAnYc<XDOG-a)uG,A@8:)#Xs9@l%=2\'hsaIP%0!M5q_jfVSt3-TE70?CPKVAgTp*8:W`\'7GGWtSos)I&Tn4Y09Ej^%\S>ABX(p$O!2>Ff7bbChoBNh<epnN0mTT1/P.6Q`M/0/X7,8dbQt"Q=S;s-49;:K40n;o?*p94A@_mYnf=/16i"]1,oA?t5_]*YP%`Th54I:MKZD`R8kM:-YgB\0];VW57Tq<fd.hXeI5S(9s;EKATL"XuhL^HnW2Loacl[")[2"r+J!Tl*?dK(P$rM_"4:\dd1D2CPN.%XBh'L>nF9:YX!;IWFCrOe/;<ghh4m<KGY/&MsR.sDB6%EaT.0H\*d92n^f=4>?/HjMU\/d`VL^qWI\MsT\e(:g%RJ6DjS&+M>7%i%([%Dchth*agp_20RC2P`%lZ\$h!+!oSj&SAqiceb4$L<gEV&&7`PZ39c9F?L5PXbn^%u8fFM,>1rSLZHa1[,Sdutm*#EO?q3Rj@E%]!s`5].0l%=0)'j&$ArW[kte+\im=^gNuFTpuLUjdr"L89`m7a(=[eK#I>M**P@fZ[e?-CIs1ACr9.k=RDmu^G*jo95<.^W2<4Se%oFC_^T0XjfXW=`M2L^.(E-]"*IsQ'UHl^ND%aL+Vb=&4gI<f,IM<!XVec,*T%pN3l$Z#V/`VSkteUsoTolUZb4F)0jF`B;kaJT:/%WtT)bG^=1YR,ljHk9P:a^P_JRIop(UI9S46d@0M%FKdsABV0-'_tTb0-+YHT[Pg3M:Og.Wl$?qP%bDN@iq.?cl1+TBNCfe;Kq:tT%`@PW7Y>:2YB1M"8*k@[3fd+/D4CAph5Jp:R4$A%u^3t*Nqt/t?m]G"[P8LWirgY:SY4HVmAin-,0@Sb:a-G!Ks3^@dK"Ui])sTZ>%F$S&%m^fPJ#sYC\8R@\^Y&;.)_UH9Bs3p9l\^_gNqgV,^SY2.bjrUL3qTlotdS8_@a&B013_YD0hu0%UD:aYe],GA.e,PL,s3ECR%kBR?A8VLk`ODsiGV@*MR0^nG4n:-kO`AH)VX6G+))9sb=KDh!l[UV"QTc8W@D(O0kO$eZoD]&_3n&?cus7.S8Rpok1j8\NQk^&A\%7E=rgn_YMD=/#=,7#oVNTL_HGpMCIj(!II?cc3eW!'V&75kH$E-`Bct[dD8)eM@^*H(MfW[j$7emTSC.M.?GGi4FJ^h*8sJT*+_u%'dnEn=,jNE&ppVu4-n#;X5TYn\%6H`X@[6P-k+qZmUsql1pqh'>2tOsR3#f=ooSEfBrb+T8;W_Z^O?s$R7pP'IbpTXceUFhZ2;sE%Ll"qUpFEp,rg.ie;DFd*d8XtNPbG/!(@oFE2RDrRdeT<f^gu`AbM,PT!s\/6nt"k!DtD8;J+Sq._>j<I^<<[Qj4uF/]8iEO29;FF%:k:gPJY)j,#+h"!:)`m!-Q,",>6%7YO1-Y(A^>_Qr!_R$d!WYm`&b#7P5il9(]?#c^Y=tCEncf'[dp_^T'PUoF%SpR$[qJj@;h&?%A-65\\!]#MQQB@L6[u6@m9cerL+7OX&?3_1ASL=Zlim:hD<rFg:h</d%S3"c&4c2Hmq*-D+6)m^`Q#NSStts`0loh,Uf)>u.o!#8%CnAl;F-TNVLhrK64q7EbcjSOM;%02Tli6dJgpOKaLP=&&J!mJ.#?SZ6F1H;b&*FaY5NdN!]mf#(2t%adE:Dr\lFU9LkF1PBHL8`.%#:F/F:QNo!jmBV_.akZ7?g3JsF`c[3V[(]/<c?bqh4;-Jrg*jLc);*?WH8"0i:M7tH61#&%rZ\m\Sclfg%<n>X#7M_VqFcB?Ja>1%hY?`IS'0&0Ilb,$mYI*pHukHWLQD:tG6T6%m`!`I:BVASZY]RR)+8D?Xa^]MVm,\=g!u/E*.@Gp]tqF[s2H_\0K]I9(H&5g`K`9M%-sodMA^.OG&<H%GKgqJtji/gLR,DSmGQm(APh2Hl0?H^0fT2*>=*nipZU*DU+ZLDS)A^qa8d/id.Psfs\F,$8gDC^["kNq_L"=At%H87YZGdT_MN-M=2[8o+>D)i1mH7RQ.(n*%0ND1@(`s[KmkllfrTlCLZOc!%[T0Sb1PP)cfO2kB&raWsef<htC\G7K])rK/6o(VE5%X'^6UCJ"]q5;$`HR*?Ep(XoA#Udlu2%'n+/dG".N5C0B;[H-2nCb`%LYL<&%D5nhO0;pbj_+rIc7D1La;g[t_Suduu0D<#^%1n"B%Y2=YE8GIP#D7_\5r&r]DicBQsI!SC<Eua;ppKRR#qd>>soq/2[j8F`l_FhbpCFU<C1T7+7s1\Nn`97-u)tTrL!<V]g:W/4lo\,0A%Y!+p,3gj=GfCRekM`/'M=3&@ZX8<.feV>51L!cu9j7(`D#s=_)I/T,RC?q\P4ZcslS0"fhrT3f'D#0IR,bCN5*a_'IpsOtIV=O(N%#7jUk%o4j]I_%E6U&<e,*LH4qO15%C=ag.iqV^`$kjk-D=C_?0m**eQ/+M;Ah7%#$,j!.]p\=NOIc!$GTC5MOoR(fMlH2$I;]*`-%+=n#J/tVu[HLTt$NM(&^5QCAi.1"9&rXnO1Io6GrQ"Qe?E.`X0c14X/o\c(BLDQl,k5SBN`+Xe5K=R$8SVtB5B?01:mi5RQO<5;=%c7[na)_TskJ"L$nG<\/Q3*k?fHuO0Qmb17]^-AU*X.*`,Q]Hg\6+VGkEOF3ZJ1Ma8WfmM]iRIDBUW4a+KTqaBG]C;qBCP3K]an3=%Sm5PpU>g2kM,4-6fK/!"e'(jV-N3Gn@"#DNIX&-Sk`HcGSt<U\e`Fp+PLD.EnEs@"m=0M'FM)b!;pYJlG'Z@Nq=^VBY>63'\N8<(%hn?L*+6X(1RoqiYr`uSBT2&.Bf#Kh"X?Z\Vs)hmjpmWq-?[i%H_><_^c=c#nrV9jL:UD_$06aduB8q=5D>;ibo;hKPjSW\[WdfcB%R25>/n^Y[m$r:6(^@cR$V#Td$cS*Rf%Cr+gl,DVVj.g7T)d5G'ci5ZDhHrAABDSbYFSS,D`dd9?r.!t(^]*g\+*D>p+5Xsn]u)4a%<u5NL=\8>UgP;t>*frgEY4P;-4R71g\"AQ`U]UR'1R.o(SC5S&rr.E;D>YJ>#+)58L]=R$@`jgU@>'r[CT9T>TD\K5ZQ(T5q4Eqg%5&52e;s*cIP9YDN5(-Vgn39#c]J+M'kMaD1FR/98s)@YQqIFo!4j2'8^\Q2N1/`WOeK'(\Vu,RY-MP]5H8Zp#N/rJBD#X="V!%am%[m,ea#8^1eLWB-<f]k\MrD/d0IsMB5a&`L9P;`':Naqu'a78I?[B;X8G3U!\[d?t]mA1'.V]Qm`]lS0QNUM,jiB*D(f58.F>4,`;%*h:ZjZ>\JV?qV^:\foqOcF!H,PWY,la6V9pPH3/roAeB_eb\8;G5AA]O4VF=a6T@Y<u4(CYLNrnBqF##rTa0mFW<9.V.\A"c1[gb%59CtR?*%*<%o*Y\%lYg+`_R(?:EH\L01]7Fn(%:0a(]h.%*,R@,uuC[(XnG+<t?`S@JYA]c5Zrm)4*NJ^AQ*S;f#cDI<IaOn4BrC%m9otXI!Q?"1LC$i^3K3N"g4=Ls5_;Pj/KlflpGCn]36;H?TpZ@p@.#o'Ao"KeYUsC8u?En?$<Q>TB>t1=e#C]en<N:641Wu[\74.%e>E6OgGNdR:E?OEoWo(u.<amHVVS\,pZU]'i8MfBaji'<eZeTAapb,q>N3cbec*D\O&$774C3G^nJIndju4A&+.YMSlb3o*]g"_G%3LgR@"Mcp5n(AK<+^M36mNf]W)\+OP8&n+m\Zi[Bn\s&Fci"!alJ@<'JbVJnk`;e!e`oqRm$`?&>?l6"rT`37+'d,ZRqsd(b%0uB%m^A&Hmb]W<hO-PX*Qq/3]\2X+AVH4qE^#r:As\QR*^?0ja.lkjG.Kl/#(LoG_+>sbT"9n0m,7US%mN2ViF4[.TXH.*55=/joAe<=%Q5iuh(JRf1:<m!E?!Nt/Xugf/\$c!8?*g(;qdY[tih"<2c[)#3$XR^#6KmhR,'!(t,]57JV=j`OK;0*Kn\P$`b/b$s2%t-'UOCi]%pX\m[5*_U%HMS8q<dVhDON+mK@G,hiJa1iZRQ^7O8b7FR[H(Cb?`nn<KKXds^*<igh<0OH*/U:\7I]sJFEF#>]#P^T8a^9B^Jo-c%F8Wp4Z_Q'g?WQWs:O]/C[jad*J)>>s\#kS+NKNRFe.6*Eno,hfATb6/O,ZQJChub!Vs?EWe$#qof_XgW`VRV:f+)-AW5[<!SZOLl%7IV/,T%`VqCIZU/*hOMQZ?rK?S&=j@l]uX-F*2M<$J*d6q;^/'4.#"sI7fu#=$&Tl8t3`k`T,cAro*e?cI(nCPAG)Wq;`]2't<jX%H09:\1JY+kbN5:M-Zh2KD/t+'j.uDII,2FgV^q<8MVU/AZoRf$SK(ldjN0m'bF]9A40DNL\$dKgqY^,/;ZQNnrql5V9tbpY)cFk'%%t&,2nbDV5.1Io5R6!8dHLd+FBcB:OrW'-_f$eY%3Bqm<J\\AucHkGfhla_5X/APJ_m<*Wh#.)qK0-+eNuq+5fq]T.XhMLEi6+n[%rV"h-kA^BU-8pq:(I+GJBSGhZ9e+9T$(e'$aNj*r:TE,'ha"OFGJX=Ml4b$A.mMCcT!FaU1Mu$`dBic5nI_nYl1m+GlLE7X1RHF"%^[T.D47D6HdSM;7n\`n`[Ch+@U7..p[Tp:'N%gm-D(?sRVr!s\5Q&;_9i&;_2k"S`V2pWi:OYDjR(\Qi2WR[2:sE0>D:i^aCYKk7%5!6A:41IcB:fD)7?G>L0?Jq%FS^`lSMKl[DW798fqhGf7GMT*?YpQ%2.18QRJ!`Xf:D`?sdI"36'gF!j?9>NMBnWAhO.WRlBY/%:%"MS`6ccNKbD!+<kB0JTJCHfp[VGDAXEb4.#66Nc)H>5J]C!tr&g>M[udhD:_HIY0Tft%OnJ"#Xg-AdK_lcX&Z\*5WrC$Ocs1Gh!%%nI09d1I_%PXa;d"FuDQH=?jBeO89_4gSga<D)^`mBY>SEG3F75f0<N1?[$Hl_`B#VE-_C0T!YEUX1;u`MUj\^AA'EspgL\7jc@_3%L.IL@.<Mu%^hdp:-JYLI2RClE<>cML8)N'fQb.TV770adLM+A,-i7)bMlWJYgKX*>H"V-m7kJn&/76=ICLeJ98Lu0@P2=megPrg5%mj[nO^@u%(_[hP#c7qmAiqhqYo3^gaDh%<HY.OSr8$BT%p.nbPr[FX%s7goI5Q&q.M?!'7I/?]@pYYdTI/hS!^]*T%K6Mc`?iS^V%)I@jXZguQQ\)IX2]l<l:bFdU8nV(%oqrl9@DLMHGnV,SD3gp!>f,sFnnEQ4h+2%*s7pit$_JT$EE-L49qBgEY?eE!`a)i1O5FMfN%cD1%*-\))3]Ka?.r4/?rq9@ZDIIEnZ);S0eX8CiPj1QBbY1LF:lf#P/*e4+bhu-urr9a!iRpY#tn)D[XMg*e1rn5!VkP)^idsH#h%HgB%nEj)'M0C^uNI!+oO/"]Q7m?_,-PmQ9'qr;Ul'jENK^Kdu"\GXh*a_N!0]BOl?UQ+V\GjjpUn<]&'0=djE4SSbFA%V`c?+r>h%*hL%@g\5'"M'pU+jdencmTpClVr>DIptPGEn"3@irq`12Vr+Ylqrld!DX[5rqNq-VLOZk@[F;ngk2ZCZ05bmd3\;_/GlPbMS\Fp:%c1Ro_EP9'7:]7ce=5igR>,O;cCu&F3r7XZMGBB:'\p<f9fC*VG1k#=fHdBCrdFM'Bp"iQVn`"KPB=C(]2HTY0T>#\c8#PJ#07NcU%hS!3crme^^lT]mU3h>E]Fo21*hnAsH_`M4B?/TZ$G#5Qp:LAQr@sR)R=/SRDl*M6K^,u@l?V`cZ]C>]YWS:Y#YBoB$o[ZNZY>1Xc%MoA`nbF@tflnk>`nuJhBC"pbXmD8WP0>7/"N_\In/E\[Q\@'f/Hf)eJSUN8pfYodV?YlA#S%lO[q/Umt]rfcVPJ?r1Dr#g<S+!e.%lJ<K;rGCkBl=KrpJ+MTVoc)XI9j`D5hYZ_ncaM-k=79G/n`$=U?Tcull&?M8ql`0YGfO(4Y?sKmnTUVlR->!&f9_O_r=*oGb$oYr%ptdN>fAF:2dF;lYI,i2j\aJ)H?YcQHhnHYKBmHr_kR6YIh/=CK2k0'(J*6O?GrK[-oYufU^\Zm'0'f9>s06OPS"5$#b5,X]Vn[TN%rSG4.SUPY'4a?r#OuoL'[^!Vt\Gbe:NfIJYg=keDn)&S(B;Zi$qn_aiDsNW5J,3d'IIZl0_q#"jec)bE4S\I*dBL%-0D>@`c;$TR%s6fc^h!'e7\'4LUmYf-UG<7j6qplR5q=:``[W_N/gCIZEf'+HDWS?mV^N]A4NWoD?\aM`Xe#i#.If.<KJ,AN%2db7ll$$3QrlCYY%rN_sZfr)$fo[U*>hfI]Tn\<r9hWZE&]=%Y#hW<T`Vc,8(mCRk[?$7dgnA,K>IdHd)dt;"5]g"_<Dm,d\q+[SY?X4Y?:O`8^XhQtY%qgLSk7k_Q`hONn=?hs%Ig?GC&Q&V9q-25g-R6(j2s7YR[o1nbU07WouYGp"*Xja6c'bL7d?MO6Gjh7YBhd%j&iO9VuFSb^UG@0*,%hA>UnpW:V,l$$44s*hDh[m#<7N=XnBrRB$?mG4Ter7p24q_.nblL_b;S"6]XhS,hW^Ac/7o9k'sq>D+:HBUFMDh#L9c^dre1=ol_%F.",!o-nhI((:'1psQ@[])(HB;l=%IS_*TWSq$b)Mt,'ZJ%\'?1AU7^pV6\*f"XF0Gi;BkiO?!smJ-"j^\%j3LUK-[Md#B=L-G^r%!>&dZ;I_2TW6>Su%]D?;ic]6/&`Gb=q<.S?Dlo^r8ifPAl$gp+SUJWFUf,+1<GVQa:k'!oeG\Z6?tXb"G%5+lI]\efHXD6TFD"(Y%msT".^%_If*+a9-rjkXm]\bN1?h;h*]=`5prCpJqp4Ji5pR]%OIbO;WjfSId%r_BJs)gPO5;@MhZt-<XI^^C@hcmjaC\W&PgYl?4%Ei&J2p\9^R-`L@RRB_BT-==r]ra5';UX*kff,K1P4o]Qop8`P*?h5-sfN<MYF7J]g_qTO]+#iSFGP/^7]"djoSHZDts6J]Xr^?bS%n&OglL>QA<GGbABb(a9Lrqp*uEU)h=4aqloT7(%>GACgWrSlS%]DLLbpuc4MLGchqIP("^0;gm+1NrWkn]p7gPLKB;^Er?`ci*TG%](Xb/=&6TFS=b+T\*hk+M`W#Q:<]_b:Zpp"pKmmgEoY!"V]0:<CS)0L\Gu*cn'q6FXkI-c5-<'_cJG/hKYR6*R/d-1_W&71Mk>p:%f?Y7NTB@!I3=;bYCiAH#P[;JgVo-d71e[..Ze2RN>26k=VO"]_]p`,Rq8(gN+2>OWRX_qg"ogUdqf?gnAcJOWKjOdMl*^1G^OQ%8%4MQ[//&&[maShS!k32+]1j75<qK=t#m#BPFmsJ:-)W(+p2g8<GEq<aDcJ:Kc@:Ns4GC0OshbYHp+.eV"o4@(;O8.Lk5H>UW21K^o%kJKpP8!BJQqkW2Gp4g&>I]6NnMpI\QHMjJuUUsI%q4kR6(WZ>A'keE2BAMF(5PFAJpuq.lncZ^g5H:@%`7+VUhQuF@?Z4f6;1-lC%jjqbQa2M[A'+EZ>?N3lNI,+YIl(*<ed]P-N(2\h]O*YTigC@SZ55Mh[US*V8->STN7?+,5US*Yf2,3O[nPR^eb%#j=Za-T?g$9RO%H2JI3`8do%SXt1Kj0Z,d)kNRKEbDDiEu.n"J':C1!lga'b>/Z;<jo/\H[1'Sj7hHO`;T[BS"TdE^ki@RS+$..-dV]15?d4LgeB!f%#4Wk@/+rJ>GX!5*o\slYm3_T)o<Sn`dC%ltkOW%f<)Fn?q2NqnVd$LsT,[S2(+V'TUHQ=UDn![E`d^)>OJ4'/Z+%H]4WF@?9?'<U%AfrUMq!dF<n-BO`a"Db+PD<an(B4K\:bjl;B2A(1Cb;c=;1$[n7e=?@FQib;#q+?T,(:'s967$1<]X7Fdd"S+es>hj1nTHQ?n2D]%pkQO7[Wqi1C@J%ZJ"FV;H-Q-PMZ&1=nP.6I,K0V0I_AajK#RSc].[MR)ROt:O-j:i*WdDK+///jXi:"UlFq_Zc[Ybq$oM0>NP0.?%p5.H4ls<@dnnmg@l`QaXn5VY^0k^G#T4d<[L77q8H!`-_H/tCno!a&(-e]oJ,'o99IoSq`p:JT@p]L?UbG&WYG2R+_fG<61s6f#D%W;6hUh7q'(=m`BIIeVp/[6H(oQf1/IA'hW%m^Br`hQIUIc+A"iEG0+Lf)EK^6S"d<1tD&4%%caR["k)2P+7"#GZ9VOk-<@5(2i-1%lG_uWnp1%u(bhTe$+'SJX&kH<q)0eoH#e5`]33_8j(2EOIJ3uE--)4Q2_j4@k2/"ddSFq]=cPIeWMQlEhV/O"eMlT6>mZ-hruuqo%pYG#sK0LCM?2Lcl:B%ni5Lcp'bM154+'pJfX.CoWW9LnT"APl.T^X%hJd>i;nAaYU8"u,)<knZ@\l7i0Eq7qVL7ZLOEoTmfY^V\W%)tPpj=ER2-^81EDm_#hNrp?J=<a"0Wo^%/nFuZt[E%haL),%X;Fgio%ULS"IG0'@TiN@peT'H'an,/NOp;qpVXUa\q2ViCS(B*Kj%deW?[^X:Q-HbB*bY$e"sa$TL[eQf0#?Wt93.UDfA]?$$_'f^K'`kK`HhJVf6`,+&F#2(#6r@7W]Z*>XI++B<*<]>aN.neS.B<3Z3%L7U+h[[>J'`p;ZMZJiA">@i/+mC;@1ir%/qbOkn!,>r4@jk)eENU$2TCnH;bY:Js>/b'ErjZe+_rRJpe&;DrcF8K&0o'U<K2f+<]%5<I]G5!M!->P?=embq;M(nk@hl[K;9d'R.@/5r$p=6U!)9!qqB,R(c$UoIX*CJG(Nqp:I5,C<."U%X;rGl:JMB9SNP1P`J50dNCB%cq43fL:69S/r0<h"/ta?4M89nLl[9"im"^l`\(!0%b7Oo$@nYeU+Q,sK/!Z45JEW)gA?li]=[e/;>ZSRFI`!*b<f:oKP-N+q&&F]%n,IhQj'aFP+cdkXJ^0U*XL$"qs6i8E9hZXQi6R7r/%B`TFc/2I4_uF\A=4#VlT>q#TC,rb2E8c4naNQ2eNFaTH<B"]9aF<0QJhGs%RJ,JolL0-,M4.QLTO<jYg]<Rd=Qo4)PD=obHkZ*Wi=1nHonUo3^16sWnAa/!jRho%<thnLQpfO,4hU'1d7k$7l-rE#7sCMk`bE8m%I(U:#")5Vfr9Q9!2.]OCjCS^4.'(c-R[fUBl2@V3?(UtNfac.]YJJrA)qUUlTT;s"RXJ(d1uZm<SaVo+5ukA4L,oUlSrR6olrVNK%C[h/Rdjb3[r0>l&UXe1q=k-qG'CD=(?TIb],ll6brDtK3h=W+l*A!`E5O'//=dYb%\8s(MAP!so+*@t_9BGpX5H<>]g\5"NXt+S!%(W%Eo-NJO$WJnC6/(t`AK#Uj'lkeZdG.\P.91G2gRjc>F?&cq+\8!Tc?KC,cgeQOa*25BG:E8+,Gm@e/n#Db',a4!tB?5-IZM/,Q%.shPW3^cX?5s1:%s/MNP5T?&F!WC*)"6\CR$hUjKl-o"ZCJl?_^Z[YBOnq'm>A'Sk&oFmCU)a[rd@(UZ^Gj.TdJj-DHE4Ynn261_%4+4tKg!PETNQKR*V+kkP4J*[;miU(OZto%,UZ!M&*Hm#$N%WM<`oDEbG!7gqcL*!VQUe*t4qipses"O6h+AS;k`Y89?:W+[9CBrm%2h9Kr.m[HH"!9SB>ePU>BLm>kant2$'='V"5Fe,6N=@+CEUPiDg#M\_UE?M*q:j[H4Y]%(Jc[)#9ALl;^il`8geb]S@gVO]*!1\n%e7sU6T(dg'2"-r(Q+Y\;J;k"pqR)lJbD]_k:W$8/kk?AMIJ3um_U0nuYcn<O@(@6rHlDk$\sSP<B48ofn;WEd\SV*W3h7/e'RM]"%UfDc!]c'>S0=AZ0iCKm!X#g3nY*FjsJaIP?%GT4G+CRH05E_e3L6](V6Gf(IZ]MrM(]/6TE$Q;!lajF,3%O%IW?MbG;&Aa#qTro9%QDP:=ANO?%`kh_8Z@f"nA?p-Tdt[4^l2%:$+B5%7es9t8f50'(,\bqF&\[VBceH+1IObC^p@lV."t;brS?CSBqFsSPggPP0%]3RW%Z#ncG/2cG/N<dq!^F_oY6f_FW]mj:HV/MgF%\(XGiZ#(N[+e&U6f'_L;h(f;9=-<=H#K@\bK`dDE5oKIa\A@Xnk&s2QbmZF)f&8)%2LDJV_7-!\+@;?=@^SS$g0im*c'=pBMuaY#!sOD1HnVYI1B2/;SQc$lhfHkt4.'2k.j+(4kU'o^P=*rn6._GXFNkf:p'a!f?:W>8%CX8Yhb8)'ELTWdmY+.(gr>`EB%(_;Kn`8')B@'Ya"g=Iaf:G8e0ftsH](QOnN:%NM%UJsQR/Jjr*4khP\ep,?-&8WdK9#W0_)ZW!%JE5i$Zh$4p]/9f,3>:W5T:rjGK_->B]GM?mIHSe$LO?'llPhRap@.3pLsYQ\YFh`1@:I?JI=-fkc&lU*bu9+X9n/tl@`N#`V%+V?%fuM^mf^d,D6Oe3Xk$7ZNo`jfMcBDRSjp^ZUF6;K_(p'Q,r@)f<NXhI6f1jg901Xd.'\bEK!n@jU+LLm4JjDS:O2j1LZ(n_K7)KJ9%<HZW_D?_H"Pp7H-!sZ[=1+H`QP25EZ2H;8A@'\Op6:&cBdSEPp?T0l;#FZg_<1_?"kPgR&Ps_dgc+:Mdp=S_2D"=%=a,Vq@oCVAB%&;S?jSLE#Bls%i-`['$,;G9*3YA4L*@,$..cBfR9@o_`/0Q=PO&!MCsX\0eJT#^,OCJO6"b6#R`KuQ6Z\!QLI`%ZIamA11Oa4Yms%D2^0/A$-0cW];qRrUTBoL+]m4dWGi.mo4?:I(j]neh<L1'E^Qf*oF0p=p$^<aQ"5,'@Y/6V&WfZm.mjTE)trnB[09hVQo]k1?+8+%)dp&^2.On6OJ)p$'(*7d<X+$%MnVHSbOrUbII*C,`'8SN',Z"q2r^,Tq/TJLdF:E)E#LMS?O6MSJDGX!GG^!)1XX1ol[s@bN4jra%&TZoVqW92#5T3\*eIl)i`C`)58Xq8Sbn]O<N&99ObpdO_p\s+8BQc+2fY2>\U:L\aVP?k,fkW6dP#ja0VFSf'J%tWuHK9]E=g=2G%e=,\:14=T\"'bDc8jQBj9ouE<3mAO>FXqD_IEZnL[OZ0VlXPqGF?/6$]=+WjbtSW1<7cDqH?%(Y&2NT5Z,!$V\Ag.$nrY)dD(%fL%V+YR5;lhRgXrAQ@-p#%/;Huk]WjOqVMMH[3Ll@eEc3N!D>nEF9@Xi^r.(+gN&=M=o2o'5hHT2?V;nd$4m*CYTZl2?0M!jJuL,M.<%;j/f#rOHfrE4f5")6)62cPm(NBu'OQ@Ko9TG>-<PF(7:OEjmHRHWPWPk%dbj#02^I;3oQ&a,uR1pIMY]%!43\#_h"T&#b+JX,EK"%T?(<dd-`Fn+!aoJ?dAC-Ke<d-+01&I1h@%)b,ZI6QE`>7Fh__)?@-!aEQ5Cu$4dUX_;r2i,#p?FG72sm?bS6r$![/2q=]Uq3p7mp%f(U.S4rhPZ%"Q;ecA0#,rNY>QiTd22a.3`";M8fJI(01hWaj2,6^^(-%NL]D='H9D0g>*<q/FktW8RXoDa%E#h,.j%bkZ2uWW\8(%+"g``32CK:q/A4"=G'f_OHf&lkUQC;47*I+3@;%0@^oRMlk0ub(F=(7]mhkbH9DP-NffD*gM)QSmd/ndFt1N'0YPU$0l1LP*.)Fs%heoTXJKHGjN`lIgC:l@krRPgfj2uug[e<+ZdO*1Vs/F?:)G<QLPKSg1(&H;0bN>AE+NGD0iV'nDCS[.pZuJ=fA(ZOVk@:IqN:!uh%_f"$U[PPcYN*GhAE5Yp=e5!>7]tTq9A!f,1<\?*_W#Ajp<+!%&(u\?r_ZJOW<P$GJN\XL>N?]\@h4HE6V#&*NQ]_.4cPSE8`O$LQ%7dB1$8'C;%FN[5Jm>N;LUO9=A<CI,cVUg,52C#VV)<f]uY)hnd%FS-2Fk@f]W2R$\^YH:-fB*;h6oSA/;rJYVfN;)25T^p^d8M+I%2,`D%en)LnE$O>-SQ"L%ZR`5K$<O2mo^Ur@8LdssW\F-G\0cU)UOD:NcRtrb;Eq]<nYmKN0jI0BW]kSg[Xr7UE#.Blp=b->!+]cE%>_mb1*TkQ&Efo>>S."FpoZc6--PoNNkQ5;jojMt4=#qTc=1ZnD,9h6:k'18:kUG=+=3JlTotq.mdr00>V-@k]?9Z-5HF\%"IIZ:A%a#br_IY`j6c&L8/YI8>=5(((eGNnp]424!3=oY\]6iZ6&k0E::4(%+)qXbQfKF%<AGk0%HA@KU'j'4-+fKi;B89VW8o(XnnY=^6O%lYDu.O.2<g?8lJe_9IA%-,U4reSb/\]`FI7^Mc_f)j"KPY*qQ^f4m6n'J@r8V^WEtTq#Om8Tm0P1AYZE"UqT'c9GK,G(U/XIl:lj%l%PE3]BPm4]uH*[48ZJt)a4W'n]g@>>G%@Ih*/7n]?T!jO7#3FnYZ(phgKmY:]>e7\`om8>,M&arl`<BH9&FIIC)pZeJTi=&H9YX%fj-2d=mbjOg.X!Bd=/&YR=&1C]AK=$V7#3IgVqS)a*athMJ-EEc.*f4Rr'nS"%-t,)Q]Q3ZV^?-D06,'lB^.FVc$N)PY8dF98WD^%>W$_?F$Mj%H^mTD]oMJ,\[m.KC29i.FHbLA-sU-,ZYO2@rgoKO#1O5<a7ZiH+u^XIDbQM=23+m!hRANM\c]Q$n?.>fPMRIIZ;aKa%qY/$Qh_2_Le]Y-(GO9PSh&rM;ph[P-i\88]e(*+P"U[2kCq@2_]))7WUL_j(@=gB6A]/Dr\m2fY1*;9j@lHm2?TXa[1+h&3l7ll!%eMT4g6HIO,FEL'$[hF%SCq;Yl9lsEr.@[ImQ`f<c)+-;f*R7Qc$TF)^\iQq+Y[5A8:"N;+C5ghfFh)VUf[4\Le(#Jm\GB^[VQ9#\%[Bf>dflVB&2_dCYHJ0O3Y&=2QUS10"VX&/8i17a:aJNb(/]X8R2q3dl4.ECf.B'($mVKK#cId*hFEJAM`7VE\l5IInlEOsMeMT$8%p2%<$Db4:Er5dQ5Fh)TolZMi9]"7O=Z=d\fflVAIFOftooPD+MaXGu223r'i%[gR3aJQ#]V/*W&Dfc*NmekW>)M"+M`VpaJ@WY9T%S#X\Zc.sAq&t_3X$dpZII:$8cQWgeTCY`(DWa0_9Vh$e]QC'M$V.uUsK+<c-2\t&W/.rX8Z_$JEe_d2uU7g!&E^T@q?'ctNj$AHJ%qQBEh(J)q#@9VgX[-R-3ATF%fU)Mq\fu*BC:_RHsK$6Z]=S"t*6fb?!?ZT;OF4Eu2+9%_@AdS(5K7CDs20UX?>hp%W3n4@OO&+nr%mRA2C_^dr]UF*Hl\E9q%UA/^&l[B`a`KlGM]&Y>X[U!qjEo2V.")^M\eD6mr)g,X3Wm9/jrn-cmm]J_?Pl*R%7*,sVD1:PNT(DnU%Yo'&so@VIe7(NEN'b'6NI?*J46R(@%f\_N\)2?C%**oo!?t/J)K#mX)Tt`')GI_,iARp9SdG\6g6!%D4Wla-#l"[nI>c:JYL3c%t%BW1+SN.uZ80cFdl@.W>[f?H5so5S2L<sZ7_=:T^fG.;^uGN>$j,]%,C*JggsA9UtLnDMA?Ci"'"D9ECTe\p1S6ufST^>?NOIS+gf%$4)W.?4Ngj2=(1eR-YM)*h?Sr;u,>8@V%#Nh"TNs7"D_S:lV.A[-Ar3""`u^)![li<;2]Jo#>j*+e4g-bLh4<].oFVR(`Oo8#M9"%#%p-V=r^P5f^,e>HnB7o[PM/PB>Zl5I3jcS40%R/M*kUf;qW;\M$uatGX;(-lq:lVq_Ko^V;jHRl%Zeo^U!j!]5)9$^)QLCIrG!6%2r(fSj*8W#3&2SbQH"#FhLP"Bq51g0j<Z\>EB!NgC.ipJjX#&[BQE;UmKVJ@]%i?T%DLf(CK5E];Ai,:(Pcc_>HcirCHkUE*0:Oi%d64c.oCSAQaIn.t>0;446XoGp5BYZH_q)AmG(rGll=r`^G/fVG$a#(IVfl9\E')<eiSr4QW$Z%b)Uka\o%Rr'oQf+?qIsB7AfJH*%):sc6I;:Gd;c3]Y,Va_[W7Y;8;f#h[;dW!r2mYYNQU\mkouOsOdB7lQ$)[-R`:WSo@_6")Y(T3hY";=_S\k>WbKoCqB#-To@RqB9%]rl'CSJ8udhF^3kKWf4c#+Qt['uT'$`=V&^L<X_oGl>=\;F><GHE,?KQk;6l/F)N*Tc'ofd<J@c)4IQ/-a0;_oYk_WF=srW/NETL%O'hnGOk2&JH*B[uDQPTmaa.jJE@l?PZF]XIV=&[Rc0TQDio7,.V%gTZGLPT/fr[1pa"OmXCgYu0^Lpn9gt_+aCi4-lmR%iSoCHqj%bl0/;O3sfH4`!XO5Mt&R_bJ?AEn]96Msd1>*QG0[b(j34Fn2=W$."!+S@q)Y4-n"MKWXCl^VA5Z?WS12Rd@]>GZsjhM-7EF/^>!0%Ie6Rn20UQRo[.]FfYuaUV8!Uc;8)0g^]&\$X!.4UHG2*kmGdDpW(k/#1PQQjqpnnlk?K;BYB%6]H),B51B5X1$%oABrr%<9U@G!;%%o0lhD>NI1h+,ArDsm/Ef8UH6Cd3B\g[J(L=1Z&KqU)59dHF!4JQn="JH+USbdG18YCGt@j)Z2U*PVL?TMpbpiK0YkA+IFd.%Of,%mTf_W]DJQB-b`Z+g9lW//l?c%at73aIs6koCHJ$CDO(/-Z3*GAS<ENBCR6FOU8:dUKu,Ym2Luhe;eX_9XiA/V1'ZJ68NNBBL7iZk%]"4A6hJNc=>1Jc9<inK0rN*@l&Xj[EgPMPO=.&TjYru=/KPV.`;OKCXp.OR?miJ<ZG]I"<?o(P?jF1g"e%/'Jl&UfUMlY_'53MV/%EcbZ#I3r#SEV3bPX8B1+K>kEAA#UBU%BD^jCnqTrA+9'aTtMBc+8`9*L:W@nc0JWc6e8ZZ-F-m9*Shc,&R*6Vm$]Rcct\-OR\R7$%i+&%FOY?9L2/DpWoKiAA]1SGDnnMDfEX+S6,8e)B(c+\=KJ(m.PpYfoF0Vc,a:;jam91C/$rI?SfH"4>TrO/1>2in5>7S^4'$8qj%i&aju-^&nVei>-ZGN^$I6-<C<N=B1Yc[V@pF4saZTS#-DGH!5jBnTI$ZFmA8jfHtBC/+pPC&LYL(3=\+Y)J>X?M5l3r^`$NG3E!f%]=+Q@JX?BH1LgOUpZXk43R/L@j.%j[fN;LlE5-Qum$I$K!Hu]gX@@;=,=/D`ko$L91c7!AmC6()+KYS8ZN.&lf9?@S7AsN;$a;dL%UX(T:bq-X;X#+"IrGf&9.l>D.H8K-`blTFJ8P9P$?]J.HFGt78?=Y9f,7C`d94b3#iif0WoSolF4UlfghbZ8;?2IO6nnhP0Y:eq;%6P[Uj.Gs&&fuA"\+5+_Vj-cgb9DQqu38=sff=7'K%YYl%V0oE>,EM4i^9733Nc6FS#uuLN*U%\VSU,>+.5eWo<kiY(L4XdN`feG$%[b=QQh<S,`=uESL)UZ"$p\M:m68^c(f=KS;_NgBjrN9?DWd:jU4"A`nM%=m8?c*6@XaX!PTn^84Y7i:EI'6n(A4VAYNHD@2LJ4j*%h!7Iu>YT0TI_LbcY@%1RqX:W#hS"C*\,'Cr#*>:#rRqKU+/(an]mdB4e6^]')Ya*98";HdJhGAEfCYiXjJ,93)sL\Dp4Ejg4CbnQ%YPhM:+Y-AHhWrd2l8D$r%t1Wg?.;hnX5D"mnVn^T^&,KlmB,=3O5XE[G)&[(d65pkIdMuu2&WCF]%=.BTb;89X5)!>m<eg._r0NY%rBd%&[F8(L?GCYl2GlKHY'[?ZXe-qA+im7orEd84JEq5FlLjW=/*1^Bh<NTnkN\N1qR'+,\<1XXHi7.Bg(A;p3:?HTpC7^R+5[?(%4NdEgNLol@J#hJrfc9\ZqR*qkS"jhU]@X5lPGarFdI6aD^X[6b=_WNJ1F?_SF0Ar_^UY7OE8>m>g2HX'iBFt!Ji)3Liu>Or:4B8$%=RP2gBM3QJhU$bUh_8.%<@#e%p\OP/>Ej$ub;4lB][nfLYM*4ZY*5,/]UI<j@mf,=f;@]Cqr@)BZ/"Y(NkEu[p\K$UHQDcc^V#hl%GGAO6?GGH.Y%mCt]7)M_I]Hi?IcT.^1j%#AgT>oV<R-?1f<7K#Yo:u5MI#g[^\0pj5"t40p\HbDa6>lGeii21D8+c-*;NpUiU"_Q%hWn5U>^a*XN=nAkhs8n>&JH0NhEgo4[4@!B-ZR(OrRqooM\CBCHi;Z:orHK\Y'$pTRhA+MbW,%`l`.j]G->7u-*+NO[:\##EN`aH%i@lC4Zh(kZm=tdZ9&Q`9oc4PJ\u!Sl0(_Y]<9d)TRI%sDSbj#+MdFWImG&b-?VXh,a>(C+XR*X2=k`T@B//J$JiURW"OdK?$C$Ib%mV2k:A;!\%^Kn@<>$7DCe5HV*9R,dZn&:"YH[ff#T8TVJ/$j"MeZ24&^9L=\^HYj!IJ%l'n'kp,GMg]YR@\_D\M//UkLo.mnHZZa%oDI-uXk=f2Sfc1IIQq2-R'k6Nrd7ChHp.8fhN(Hn^[IdYca(U[pAV^P0$a4+4obNRhk*ENX,jDiIb\4rs7gSTC#Qg:oA>b<_kgSp%cBmDC]=aMZ5!O72Tk:1!J"Q^HSP<_1hcb8GE:S#u>C&-@rb(B[!;?EYYH<_@]5*1#Mskj3:!&AB5F68Yk^1EHEd'\"H1>VsftHqQ%EO,K&nb7s"J+'OF>^]tOq`D:bp^7LXMDHj9s(j@EEKB"oP"]<<>I+2_rHRl,T8,@5=$AXH'hGtiQs[H(pN#TEcM`Bd48836'N[QJ%4b@_oJ"G1dek`!3Im9ClHLf%g?hX$>X2k*1F^q81?@D+`/DcnFI5p8)rS3c'I(oJsmaLb4GBA$"O^6+n6iAdRgKmG^DZ8hP@VP#o%oZi)SWJc8`HVT:uc=d,iH#cd=:RgnJq)%uTKWThe_0G980sos4M<Ei83]H"8kI8sqY;ZBm]XN3t\@%Rc0<6&HEpoTt4aMAAgX1r"%p\4$Pa%Mi2F*B"$H1lCPrPKS$3)[;,]X1Df)SIWd]<CAU?h6opbHk83o6UuhM!Y^g[jPcHs8BS[?u^X4TD\JJ-*+5!XN6HL?^Hu,%c[T!RN1YZWL_Y0h+..8$s%mp#VL-s3OR5!hckoAUNF'CbrJ]S0mJgEq_EY;?e$D91E"C]ko.?Odj1j*fmG"7V4taM(:VM7epWpNW%#?)GQhtqC`Q]kdKnfJY-+#[cHj?GojE:hVApmV64MgtNbcF<_,,l1q\k/$f]_rCn?WRsA$rg_H'nDT4,H@5HSmj.pI-#.)eHn>BQ%.N\uZE<6G>B4B1.8GH+]gL!.gk&!=gU.;qf$`MMDF<rtTAj!ED_u28bHh>[Ah1TsC-<N04SErDT5IoI22fAkg.EUlFcI2!Qk<G42%ou/]c.MqGT4tSF6i@E$eN(`6XkHipdftrMk\!!(60h[7C9X6?&en`7ioZaO>)P%^@ZUrZJ=M=8!p<q?j$bLk`+5]lOJ"7rkCdThf%Gs93;I/I%%5Polup\t/m=.]ghP7(H!ItUC<[9P8RgtK@B3oMUKF1Lu+JY3IVFn3K/^H<l^rB-6:]mBPV\%UR'q#%Dc%"sfrb*p"b%4rXfYI"0]R!6BH[,+q^3(k(0=lh85CX+/IaU(l7kqL&(6<WH+ecXgF1GXeQe(XWWOZ't3'llkfNV=;jT5CP[IpL"HmrL`QX_QU"5%gFlq&_,S//Lh7monX<1b&_$cJ0%/VV4T/Mpb@'.NREV_jpHBp.K21sVTBn3aLeUYUe(Z-1^E'GiXT_5-A9c."P5bc9&Bf.P=(*1(%PkTWM$(12\;VpO0^/GPi+4iGKrlf`$qWKP)^@_`3M>=H,QfPu/qJpNGduXB5^$^-Z_2mrc/\p@.67_:Cos<\70uWM-]^tIdc]a5f%X\JnRQ'OU\Sg!P$ghJq^m]?DC\ee\SS=E?De`-Kp)VfN5PRm=H(JD$MK+6VMq`JWO_7Sf8D"6J0[smsh&Rp]k?%Von<(\)WQ0*h!%\LUR+DSD5DUZ7=HjDR73)Q;f2@hVq?-MD?F'e16J$0BXR$@2HZr)if*ADPGHjh2u8="gJRjtsh\bKp3=G&]Nl6&_,RpYJ:o+%D7/%*^5:H#'W=C55Kstb^Z%+p<GIMhQ7PT!+h8tU_hnJrQ%:ZJ[,MHd9/G`+)\;$o^h9d8\r&b`p9q8Yb,\IHgc=1ruIeB!W!'-rPROF%Ru,hHKup9XXtS4^WV":C:=tn7!^8YN<4RN8HogmHb4o>&VVpiqqLVZ(,n+$c>ti,Pk*rOr_BebS8s>qJjHK'VSc\`6dsMMZ`)@4^%D?NbpqW7RG6'Lg6p>]TpeD$V4<?n96O%+=`B@EOe7GB*[$LWC,om:hNpu#WAph_rR\9EWT*4#:g<&"\XqX<1.q'<Uji<-*!9saVt%M32*XO#8eGmeK.CZo.@D2`:[!bB9:64th(IqgQW<V:rl"59gZuj$h?\o<)nHilg5^_r*VdqjTRY*,uhQY:;(<m)n`iolFkmXt69t%l\@-C?#t4F#*+2b2;lO']npsrUIpokNt"FUlY7Dg\S1?I`,)nkSGjP=)N-CK"*Z^(r%<7aedoNVaAdpZY1ahf^#.P^n#=-%fm;^b%9]si%+.j9B,^YT4:Z<a_hrVLl*;)5CH,!Fp+8OrB5-lHq0g6439[*$@oD3XkZ/b;&7pDMD+3gi*nQ9Q?^TL&ZY';o%`AN<<W=N(Z%m<p)uCYL=G^0Gm&LBbJ"'KgQ`-@U&>cIN[)bHK)dG._bOcdesAo'r&2nXj`;gaIU/oFL3=lXk(,ngg'LopnWB:/3J23Rl8nPPIRV%;LP,sHUl*Igmqq1K`TIg$tk9rZ=#*C3Jh?$[la?HdBiq(&Eom9MeHOONt[BQmk+.'RlsTtp3QOMOjt<gAF%s1-1C'pjQlaA>52fK%Z1n>SY40?Bjl-M*GP>K.r34Y.IX$A8iEl<<+Gmj2YmA`NM8-]MDlK,9prg92/&`$J!fsu>g-&PL976J*K([1.P+'M<4?r3S8SHj_%e"89LDW5VV#p*7Cs%307IJ@1r=Edi)Cd&j\o^EImJ_-Ku&"b/@2@KPWYOL^jM(p87(=h4W?Ji^:>aXb-"K^efY,20@VRXSe4aths%YG_o.go]$9$f<kWgRT]25MZbbgT5)JG`*<+R[C4%5V#$>hs@]"iLB5Xj6LXW-n1Um7sENBmiUAuokF#E\po2/`Vj/IJF,/'nTOF)%_a#TQs37f&Pr%-l@\#g%HoWV-k-MPpHX;^3ndP'7ALQ*75l^[Cr=Ye-R/Z9,oWO65C(F^FA'\,`+&H=\g*cr11jT66ZZtBPZ0b3>%J,#L9jRnS1YiS(D[JVc8>Q&dBn0[[`[s.iVLo!&n+$!ZDBG*^C$(q;U(<0h7QGhY(J*XK'nt"n"H(!$n"4mo+e+>=t#!gHmZjl=g%a7f"sXN`j//<B!a";f:r.X6jgjmqR#3Hs0F8j[%o+Kk(M^L)G+r1*bo,F6Y7PHBVLIjb5X-R.90+"/h"=CCmK@Mn"_,nt;%56$,a%-W9-OUbaWo>^^egoCV%a`P;HNqeL4timu'5r<GY/rVHA;kMl.+`TdDH\b5j\lKn/pjlG.VlM]n8%j!^:FaEWUlffZqW%ajlaM=[V%1Ztbb\'Ze;=_qU6>IOE=n&D[qT=;N\a6O>Tj2nR!p?mH(am0%-9C"f[:G"\XP>*WYs4@;Cl!&(@l"]V]eFKBd>>m&o,O$f=j''K>%ZkM<KZT#?p54/8C?`E+%%FVb8kKEhco>_C1m:Uq#h;7O#]q+&!oZQW[GAe+qn;6!=PW\p4_h5&<91B"eI)"]YB0V"J?;E/fr35QM%s6B:,r6"2:(uI^Uc`O13qs)OhqW<R4Kn"TT:TaP@qJL'4UmJp&2r"#$$HW-!B@ZK!'s.D=B@ZK!<IF4V4fa<%WVfhP5-'E&WUd"\%+jR+H:Fc@dTL/mK[cpWQE(E^I?GFJIkEG)iN[N=)kL7@cm0Qd;g<7kurZ/b^@G@u.f_2i>@INC6h@$Z8ODYRpNZH!nhj[eU\GN"4%gWrj.4`R-]GB@#+^UoOJc,I?0U3V45%t4EZJEejK)"]pU_m!'(?LDXQ7ufMi+HiZ&SV!JADh3"iDf^Et:]I'IhrN^[F8)QgZZgGr%LNU`,*%p8^XoA4oZ:>/W^WUCckjD;(\$dC0"b?CPHb:HU*W.#SiJ:bglfga@HVk`8]sE0#.<KibR8;*QdAueNY(j:Q+N]$L,5+TG%r3>=[n0d6?NfUP5:_;L>O&(iQ=*DD!)h$\)+Z_S3h]WaHXdSPeVW&LBq\E4Aa2!PdYP8m1VCq%QE96OsV#drp(3b+OmsY8kn,-MY%GClnY.UZXET,jtq$cLnhRba@a$4WN\X>BoafiX6&&3I(>7H)_Ubm,UOBR-ZYXrhMU('b8RNr0c.0E21/n\se.:OXl1hFYfUoup=^%&P%?k:c_J'"8Y,>\7&iin_U=ccbTX59Z>Y2eboIdj>Ga('T9@Q,5*Vn5QuefL*,hG9Yrs#<%@qH.85;!/Z&Moo-89?J5.+E\T&8M%Y5S,1-=Lo&m!`($lA!/jJT[/qB/%]Z`Wp_>%PJ2#bf"<&7oY0Q+SB1rbT_@n_CW]ceEY-WJNH(q'7C>JXa6fJYbq7.:!el-rB$a%%5K)DV:1kDP(_he^h`taS[Pi^2<t%0LRWuSEL2jT/g?@+?\muhMpi%l(aurpB!92,`^<_kG]>6g>BQ!maV6*I&Q]%X3@<6T@7,h48%kdVO?q-[pI6Q[Xe>C(97<^uW.MWG?tYuK[h*dSZ0S*A(\]_D;l38[C6:1`1B[kdP??itnVGP=!&Bk_L9#Q7HjUfXW5prT*,7.D88%@sj0+4.'=_1Q1E;cR^)m3KLRBbjL6mQh>3%h;*SQ9#5#h>+FF?[4WXJk-8Y7HSbCs7iKD(b"`Rom!:u#,4S(Q4tr$tHh$48ltAK[%bINFp1HLZ12fUU:Y)INJMj'Df]odL9M;>7Nf8_467S+IP0/np1"+7A4Mp@6W+"?!=EVq!4^lNs+<mjK&A%=bhmC/]unHO7$R"NS&%gQ*pRe!gaF'(]e;YcSX/Y<ehK\[*8"=#XI#Kj_C7??gI&2)cf@pecMNIE[8fKlT.V*pC/L'`W-V6m8A9qYP7DW>DA.q)bYI&*KEN%ODMnS"2*o=*$;e>1nVh/4tamrH=;m?Jj/UrSH)kM+lh;F1#V<:Jum82]?fE]VfCHur`Oi@IEI;DkJaja_moUMSQm,L?GI4M=#k<o%mK8ibVqgX\dj&ZEmS^TD"$ms;8S=>4T+qf/o-0V=\T%<"/VI$<8pYLQCu]0sT>g\_-f5EBp)cskY;&C'bFj!Si5gXXf\<s-K<s,%%cpf(f`MWrb$Fn\m*mU;D^452B\c;SBk25Pb?Om0PIj#0e`I!ei+Rf)X$LIFPa0DUfdlcL^eHuP[52?A3n7jhbr@?e!QhOm,]b1@4%I"_kA^QHQC.K"C]3FP6jl>INsl:hTtk8,6=@ZGqY\k#JW6V#3N(`!VD@DZI3YI6YOEWsGaU8.;_Xa%N"dF/.j?'SVEDjPF<jh#41%3=#9sA;@kDUHQL(mXFJ%l7M(N4j8N]nqWfWQ>]=e7JIVa[pB5``K?&F%q"4'LLDj=cmC$.`UCQufk:U+EM52AO.YKtW'lRLJ&;J\%p,sJSm_'nT*=[S9J,f!6K]cZ\2gjE[oegnM9[(e.b4F**X)iO$I,$^[kMKVOTE"ZX@R<c:rt>>rphuTq$L&n61&_[ce:TCfoD%[J%=I;5G2)4uJp&;qlf"WT!s8N#jq;QlOf7<MidD=4_Xi[tBHM4+`p=A<;mnNB#5OEr(!<:&/hntKgalImMs0)H8il_:>nS5oeScW2C%16HNGIS;$B.KA?+qEH%tJ,JJ$s"gW%+&0ItT1j]f2P*W6B6l&4E`*;"dmi'5Z\XpC4Y=%34G[^_VjpVJdb14saqJ;=9==6lf@*K,%"m'8]AkC<>)*O4@?E0QiG#DaY$@`Lk$ae82hh+VsN"ZXWs/sIA=f0<4PHYsnlj9YBP4WRV3p`keM(U4URni]?8]FQJSkbQdQI<_G%/>As4&U5tUU42d[lHb<*'8oAb>V\s!ed;,3lT*oajt*6`UaJP3IJ+AG5c^V,;C@T9SF_.EIQ6&rG;>k><te\g5WV/n9`,^#.;f$E%9_7XQBrP)F5G47gP:@/nNNBqHr$5gEU3]R;>u9ICVO'>Vj/5d>%XcEC<Vr14./k;H&H^k5Bh9s68W%rC]o4qJNg<S@9/JkEWF&5i%W(bTpOt;6(qUO/r/1C!^cUK+BnPfES.YF$B^I!DE5d=L&donc'<+AgW,afL-cPW?i6T?T$R:9--_g?tQLdr+1FrcP[TO88k46ff;%pfTn?el\lB[C2A8c"+46pl+dI8E$(gf<9&Vfa5A8HIB!46%`65M@AN(;e@:P*;%,?FJ_qQDt/q^Mr?cG5XP_s8p_bEI_+KR1#W6s%.]l8%LK#oO0(tb\0od[!Q9PR!=Lb(qcqmd.[Ju]QWs*(@B"[YE]:MSf<m7>2$^pYbs+=GFSZtN!7!b;%c?It5^4mX0'UOso1T=,4%61bfBRgCWu6?_iD@AGAd#=qco.!dW>T)jfa8F^P$c`9=QKGHueTIo%(IP=rFBmm<cP\JRh2=,%q#+>Kj<acI;0gCk5%][fD1fMQc%+0B6UVUkM=$u*RjZmde92G\=\2'ce(",c0-$PYf@jbL!tN1Y^hNCSikV4!Y^84g3@^3<K(LBHEu0tHCq_*'2c%TD]FkDX)Bhp4!7%M+lkYBimegYM0#O7*/>Zlrh]@T(]JG56W7dYZR,Vj/AKpVP(^3AY.4Y(-NsB039r"/S0BL7MK6PMgSgW,kV1AdM=eX,d_Je.HNLG%1-'pJ0U9pOchL?UONLnj-%6Cb\4!,\d3/#XB(/Ul;_ge-<6d;S:J^S'VX]IC]``W62ss)N#ABQ.m"&dh=&>OtSoHQ]ihnn+8:qAJ%-<68:@Q4u[1T]^6/[*\jc=I<bAHi4i+>4S&U3t*t+NAtePf--WEj?*&?Mp^tdo$"UTAeW[\6QqNV%pBa"3&(_:f.'`&;LV@.[9YI%N>=--oX+/EEtJSiB=u)iAbde4!BQlRk)XS[D8@U6e&XU2c#\b:--@3P;o@#EBrQbQePjma0Z>H"'UC(>J[VpmG*0d?_7Ef6DDE?-%?DQe,#%`Fa.SUACfZJLY;Fn%o74/&`db=7BVBf/L<J9`aQ'O3=.Q[5B08UX-nHYt!C@)?<("TjtFN0dZPV<7[fm#4rSL>o#1I_H;%b4mCs4\:A[8Iu[a8sZ0F):AAB14JM>_ICd^KS%2;hb,bgcrO>&@s=Tt=I]ne!_;O?,r@"Q2KM:.;T86fRlr.8d;2O7U\"@7iY^^P%^J7dcYDf*31eZl,Zp.VJik?\%$7U(-HBlO/I!j0pXYGQ46),>/9mIc-&[MigEP,W2V9S,J%S9qkE?$CRQ=!OVPb.Ho>EErJR9/of%!\0l8(6Q7IQ$K7FAdf[t_Vd]W/kDBF4f<>0rNPM`bCi)=r?2#'E4-4VJ&W2cW0Ct16o;Z1%MT:8fJF<o,njpIFbGc'YUEi7ROid+%0<UNtQDK&dI&i-8.4?I22;B-j[db_E!_5_U`oXQu(tjRr@3$rR7=FQs.VCN?F(Ai^c8\!<Ei$jlWstL56#f3up7tNgMPl%Y#;(K`%cdalP\J!j(q^N;#;g?A^;VWh6/dE)WQ+ppV8*+$.L,9f#H+3b(KMj+%Y&D,'PZr&Xn5g7%;3f<rdH#Un7'aOek-p"a\4uNqqam@a%'='G&P34Wh_WX-!P>)H5#Y7hY2&bR#apEM.Q/^dHYG'?@m4$WX,#Fe%8Q6"k_J>rQ!>B!MVGc;oRZP8H1^H,:@'1@i48Vc5'f.hV%ji)JAA#?a7]TFUe"e(Z@aEcWgAK,"*/.)9kRVM&a?U/%ukMCfP0uZAH8q)[hnSENN,@!A\>+5B63h"t&?<Ja0(GC6U(F_I!,/(cJ%7dAMHR?<L?dbk*srj3rMml,jUo:FsLB#1K.*.b)%EgtFm0tmZFQ5*(T5T7t=mbu!GVNHnB@8hE.$W`"dZmKJk[RAfqF-<r`Lut>)%%0[bFaI#aDZP6Lp2T63"9&]M"E!Z*m_!1;hg7+_+l_sQ,NL]I)2dlS="NOX0%1NWu5P+f'k"+d(77*V&&AE8aH(&ijn@j$:W]8@'%30JfhE!uQO]EgDdZ!N2R8gX_KmWYs<ICTmB-:IHq5X"ck8^'ck?A`nBBbkA:_g>\jF1=XAT4FO&N@'\YgI[YZb3Oo^?;:TT*smME%'7,N%+A_K!.s4a?qGq4H50f$>*p;]g_TCcp":Url<A:+?!k\hM"fsH42$H;?]VR+rP9Q/kn#\O-&6QfkFfq&r0C_u>8d#L6k,2+m%>3&Ij!.ai5=2"]Gl\GW>a=9[FQj,$je-M:Ma?FmQrT=/m$&"NA_$7L[In1idN+WH\BgfO/dYi_>2koI=6*Ep@jW]R/@iW(Ge,3>s%[)2pS"IU&k0RkjopW/!t'Uli@O-noU^Wsn@rc+8)elGWFbTg1Y,X.57rWZt0hJrS02_86#3N3m:ft<Gr'3RTli-1ClB+`C>HC+jI%e&rZa5k??hiWoP/hlWUJ+a\s+AK'cfIUFo5Q:bTCq'-(P3P_I(0D7NIIn1De^au<F!43/fRQ%2'\0MC>hh-XP#H2dFTF_m)9&Q1(%""]JB`)@:JO9(oY@.?S<_D,G2W)Jk\dK?;-rpFJ1jU"HYPSB^PBs;SBm\//D.+!)A\u$oi5Tr!A__9c3iYqm^8FI.mR*ls4XJ\K[%j?P'5H<OGAK,QY(;(3>89N8hPar_9pX0btIpcb)U1!.21F[i!!/=gTb+o#>o4't6o5V_c'f1Z%H#tsM3RFMfA]`s^\!4N*VfpkMS%UBW"Fh_^#8JU*/jCLBldkPu`Z*_8%X]dcS=(AH>)UBN@bdkma,d7!Y'7Pmuj1Q+moBqfWOZqqAD$Jdt*^=CgVC=s6^`]@WKPQ^Un%[$bqQ!dg)5;ApAT:_^8@qob(8;`s0<P4dt%P4V8%@g"kGr,I=:6rQ9q5a-Xgn&$j['S)M/Nr[;@4jeoc7D8A(aq@iR2J^;M_ge7`%SKcaBW5KS%]O9id8Hn'PW'[6F9>MlQT$sJo^iBb_AMgFb.1*R%8m430o05N[V_euZ@2fB>J@,KADIE*/L@np]6"GfT[monPTgKOi%!!!/?^/.Jn'Ve5an2)R,g=CA7+kgN:mr[Xs,"#$-cOf/SV0GE1Kb2F$,k4gIk6O#^JM$tA5mm$"3//`Y6j6;hm\KpG_UeZ2,llr?%pJO,RRDM;q9Ib?\K-(O/W,KQ:r:uRddu!T-F0fJ$@uSEKCe?GsiJk0q'^[4ffWga.Mo+K()A9*30hDqD%>7]e&n3X/6!-//"Aq7W%E0^!l'VR?K6)+]6Uk$=8J2`AB6YHQ>)$"eG!52*&9PP2l^Dp@j"kRKT%Z-R^27Nfp(-e&ugn%,T&ZF1hPuDT*AqXuQ="?^3V@5/B%,KLq;8Xm#Y8?]FaK;"qQdg;sk,3qh>g(\JVd/<l56fF\foj`d[[-j*3Mcc9UQ37g%.A1tj%C[J@)K%iM%2W4,?-9`/IL6mdcu9$>%8arf0T(5?1g*Au%N@;>l)pqd*70Lt,)D6J6R97Ao)f4qf!'CVmBqaK0`24`A1)=u*8AU96\UkdJ=M[EKN2/;2Y0[\f>Y2a8*%Jqr%j\I$NCh06t7[0S(7O2#RTcrKNW8k[AAHfPm`"i1k0H-+5?G\"%DAORKYqj7@L``/I?"G!a0KDK%C]O0s.17%i1O,(X$T4%DVQJ4X%7>=<qbP2LQ??=4a#b34,O%EtXBeDP#,?m!Sat#B5D%)&!NLr.hgEaTo_OmLr.n&eWS$,?aX;.0m1l%)*keDhJ[A'<Z;_#l`r$f`W%4G6nr&`s=f):IVW9%k#A!%nEnC0X$ol7m9[$:d^F'(if+(26%<0LkcbiWZGlDH;uZeXRDW>+2[q:e-F-e^kil@+P@/o+EK[!4:E]%JH6)aKO!mF$E6gTDH&_5'JR^8;^bf<]b6%'2`ak-VgSO/[)l<&TP.:'*n$-Snm5lQR%p7jYlb5&Ul=u+3C^A`5pQI9k^kiGdh"!!%$40E4Ic3(3b;>,@5!na<@W_\0<WJ0,ZNbHd^ZuF:9@HiT'EV,Or`D;E2i?-2r3IZr0h%0hVY?ITaI*4h6cTXm-9;of.%3-VUh7]Y%!;:8n.L3`pp_qFeR[5rNlU)/iSpXli4r3U/lC8(19CroXMB&UNBWW_(klUr&h(P%kYn!1"'ZEkbZiI9R=UmY?aM^RcSo-6_18aPU%i;!@0S.o3aLO7>j+%6;hRl2W$&g4\eb27ClR:Z@C<s[fZ.gRI:dF3p2jep9'X@G*D7.>-u30;c:S-c^r\pPj#.IVuM.?5^icJ_Il%-ACKg*B^Zbb:3O7c"ViKdNV)"!VD/CA1ZaZPGXT[$EX]i#CsW&5lfi"r8,IHI!Qf-A<ZTmPHS=j80+42alJWlktaD@AW>F[&*:,(%$%C2ONG&r!)JBjH&)PT`P4:!-3>'[:/-0^T;`Hh`:;36[.:=)m'srUF<kMR3\GbIOWOs#oouCIqqu6,U9Pf+H4)+]Xf<<M5VdChO%\bQ*q?`:.N(,1&R,tgi2NlgA%58,QoMZ5mq\Y@`e\cTTal\-D[,^gbGAL+J*pe@sX9Wg@Y:k:Dq2S\Q)Sad&/-@JBC:9OKINF>&P%MWsY<rT6+K@fr)DiJ>Vu37f?3m!j]H\[.(r+[$qoIc?fce/u!([.*M0ReB#'6[Yg3Sj2'Z+]],g/1-uhB_rHnW9VM)n_=HO$@9!7%82olM.(g6ckqsS:oRVNYH5bhAr6CG_!OaGfg:U9oJQ^ARRqe`:lT6B>0l;R79cKmQnOd[]5J)_6"&16P*((#='`Ym7MALt71!WTS%7@%K^4`@;+IO`<SCAM$:."2-J2CH3Mb,iG.W6*5A#M^3FXCTql(W(W82/!)\6NP$&Mj/nnI]9e>Tc4n\3;NMLdJuRKp6V7:(o2Bs%KgV:o\C,.N`Ge]dSGpGmMRCq7"%O/*6C1)P_g>SXHer)l:0EJ<!(QE!*"3dKA6;?q*..E7kQrW].*LL=C"fA&**SVBNKaR`8AW!B%"Kf+>GbrM8Nr]G--lbb4peqCrPfhB1+>a+icQEFP#%Sl:eg)6.$B^f1,>.5H#?^Mo+NVQ7d6kVg'4OD,f7SSr/UH8]<ZHMrTnsJ1%#UUu3SD\'7%5)Xf3cDt-^`[NT-J5@O*&@fg!ka:5UnJuFp_L\gMEr,OiV5PE>DCd4#qc:@'q.LAKEAMc_hlZ)MA@C94SM3>&;3l2%pY-"##ie\-6*?=/(Be2%J-)<Hpm=:J.@/LMk_[=20ZG"Z(lJ0>OJPfrHi4u30B,A."osNYOsU>QB'@4#M!j3n6Mqf!h]ZA..EYK5%7E3B"2'A&ipOO(qG&i=!&:l09*/qtT&/,L/%M9LL1BkG4Rj`p%$BWZb_*88r`B[oI!"^lU'a37j%QY"TK\0*NJY)rk/kH4)PX#3^%3nsii'JsA0`P#BP,6[r\\FVg/a`-XQ+FsZK1M=pd1/4/@!DYo%K]Bm6L_Io[@lU"%.F%=,`JC%51,'ER)5mdl7#c2PA>f",'68g2%j+*jX;O0hE[7Mo]&0?KESLAf;,Ccr`pba_D1Q]JFOCa^Z,uB/D*XUl*8#_VZFN!5O'b#6g]I-*:C[S$Q-->;:0>(bfR=CcYbmBDP%SWVE"g'J6jZPdU&Q.!SWo!(L,O]rup<RHbhBE3%7Ja3K,^ekA&.T4;R-P+Mr;N!M.AfP>,N57U`^S+WLOaej"=:rE@8ikCbj#B$c%S"K$`NZ^5i-*Ngj+lN!Gc&6S._NDfaL,<iCA[ksN9M+$.?JD>2(anhnnOoA@*d>u':"l]"dX*m9[&#d0!Q$Qf["Bm\&1)t-J5,s5%16UA6A4k`X1*_(,M8U#QiLjqPYq-++)NSk$<CTajE$u9O7@:Q/W)!nNPdKA*B6KG-.>e[u=:)\(#9uL?K[uu]jejft*@MclG"cB]%r2-qj17B(i%0)Pn8WdJtmuR&a0WkT*C<'i(IfRI65CZJWCS$H/MBP`GVUusr(7.Yrb)T+^q$UN'"1[+#Umk\m.bJ/!MDPTK_\Vt4%RMs]H%2s&Y*D!E<:pO5a=n*H^&4K5Q3A=?JPMXcQ$R$0o72qU4@L2H\(_$^f-f.DWf3Al`)$FS<j&T*sJV(*6i+\c1n:N'>pQ0#W%dZY:MNdbJiZj"EEOd,Q$Qm1_lR@`l@Ph!.*\d<C9Aa+iMIh7EnibVF>OBbY]\3VMZBaNuX#!up)Lj@rP8NQ(NV6`6<+@@D"<q*AM%Bd%G9)$.#`cTjd3Qa5t1^^rWt+<F=q!eX780t7!C0lQ'eiIb:%d_8=q6=!ELd"@iA1[;G@Z`mq1%flhM(`kd#RjZUdKI6]KRLXaq%i2+Y@7^J&jh1totC6CdE.jrjiV48/,Y[r!c*93&fE$/=Q8-:RaX,'4Q$C6AjN"cl#=?B-g8POOT&Z!jJK8dAe-o`"F<9ZOSaMUhq%Q`j(PlB)0!+4#TKFXg/!,&P.<p-_PE&PqUMUgPY(StN,s(f5#T=!u:tGR?b7E9_QC*lJLC[p[Q5lGUs[hda/Hl*mXEAH4VI.(Xg;%*1T!=K.!1<@:Tuf(j1$"*ZVbq?/T,0M5'BI9L_T9%YF:sDpkE]BV9'\P3g1:COE<8$T?B6gg]S!<G[4g's&o1l)=?H_V,K>&XZYF%Os6)^b"@d^Bi0n#)ngFXaLF!W%XR;7!>gGJi/_n[;TZ`OW-He>g$a&>Kj'EX?6\,R%A-9=5D.(7Y`3bE``4?5qhGB.7[A`ALQ%A6%"N*k%;2Y`_A6?AR/"'P;YX4>n'FZM0#)$rY/ZUF6b:;.<Ueub2+@U0Nn`I]UD5%<\QBbrPkS)+o?s3#H!doN/=kSa(!td58j24`h%lB$`#HC:7&RGeZiel4>KY$bI!/!XSM.Q,&DdRbA1)JE.pGCWt1Bq)=i!1"A5L[%f-6aT>0etHXYX!t@mRoY7fcnh)jI2Gsc4GC5/%Eu\Nr$j+FK.X58n0WiE0KVV.).P3+0BNnWWC7sY8feh>PBq!FJR)qY&Q/Qt++U-V$Cis62?EgO_X8e@EV<:@oFk!MQnEC=31.pZJ%($ZcH>\/dM)U68:.SF/SZ#Z-;WH7A4XUPLPMdu&['i0V4FhtT)OS=\b-o.rE>r&iln/,(D+tZM-N%9VY.2Z-^q3!<&"IUM\5HRX2%gK#.cNuM6l%SWB:<<AjT19P"?_71\q'Ts;5(5sc.TJ1L()(KSU:r)sY(/_<*O:nWF92A]mfso1V(9^<A8?reT.amf)-D9=5R3n+g%UeL;k!#^t_4Pu<fi@p@<L]eXtFU?i`0Gjj!"NtF7Y-Kl$=,Nb(A`+tkVSK]6fs]&U[M$^cgPV5-3#%llj!l:aQt6imKuR+BfXSf&%'!_lk,?bAR,!7=`>?AIGKiOG@.i3qqfir,qJROB_.4,maFTk>q."="oN8`G:=BD:`HJJZ39AER&<BAoB\:q:tX&h9IRoaFc$:[][%5+m2_f\W;]iIp\Z[]cLcUgK=jH"H1s@F9$L,XP@ORm[G1:`II;Q.'PUV39(RB.!LdjCUW6IY@du;"1;-cm2(6X_$$;TU-4TNl!89%0.j\#%3N*=?D;A)(7)a/)doli]^uo#UjSObGj/oKmH+CT=p9Is$rnKrkp\7Fh9=NJeKi1Um*^),brD>]d*(_$Eq%NPo0X?p!\_A-%c6+0:QNdLAA;HPlK-(/Bq1N>CdU^0>$eV;,`F4:\YY.d6,\QfRlk3uG(."9Xi$3iH9;(@EU()%GDF_2_F=:.d!&"-QQ33JXK]-SS%^a73leM71YXUQXZ!%oj9VSp9HKe,?],N."RO%f=2Ke6o5QSY_%"QU34".U,1Ep3mj'k+s)D30JUE+rmWM=X)dGc<q\+ZpoZ%6#Dr%<YPfj,+"n:eHc4sBb9CJ9$!i'+JIFUa<`+V,b.Isg4W1P`DRhF-4;Rc5aRSR'AtNq/km5mciUfN1e0SU6^NlHKN`R0>oJMc:i)F2%FQjm1M'=17TM#B;LE_pD5aTJF[g(pA-KMliO@otIAXZ?5a<f'6@O6Pd9:uiR(6D1Yq^r6:'";jM14l/lcT2tI3eo?(mE]Bj5VB18%jN@V8bW.ON/g17M[XS<`6APmV00kjHOtppGTM#P(i<6lF>XDAFEp(Li`i(SFO@tDsY`,Xej:W<`g!D^WFMRI1esCn[OAV<0aoG[5%FGWn[=%L+Q0IEh'#[7AnE&rD4/cEOhA)(UT>/J-fm(+@i'"D(82]8BV(o<Bn;Zp=Ak+Ufo^m5aX$dNf%Ybe7o6I=[dYU.3fac%"*%?qV%n))F^3/V1eGndVfLm&0oA&o7ld8#NfB8Z88+%Mlik/fA]f&pSp,f)iL9;b:S=Z9U$nGERX9,NR;8ql)h5+hko@-:0>%^__(Q%Z;3N)5V?L6P!2\bQc92Q5sR&2(FG/.1dis)Gm0sf!P*l]aRL(.95'lhR=JPZ*d8#a12psUTEYVY&h#4SBgKN\:]uE1!Osts0bAk.%O?6VM$4=#q-&[:HP8;Lh6'<Y"&pc22QdE;VC&'3UGnL0t#t(#1Z5<nXKSdf1YE=?.:N;i^e,Waj3Lt0U"C,E;P]W*LE9R[,1Ys""%99ZEN!P%b98K(n80)J\V*k6ks6;-l6i0H94e1SP&.+Xat$+9to@:_1/QLGgW<<9R^&>Xseck()/o>)-NV12+AUa+O?!e+Tfg_)@M%1X;0k\>?T!NWe.c#(o(Z/M0BZTJBj3QEYu]CM8B*Jqg/UO$^?&LdSJH$fKH"OJ`L%75>KH`!6=RoE#*[0>tpXS4XRhg`3kXUJj]=%$OOA^,7oWs,F8taR?Dti^nh'c0Oo!3i6nF;Gntp'TU:DuW??/:HU3`X-30AZ+G)Um$%4#=.KGe`\,")U^a64U@1brDV;Y+>!k:Y;%^m/k3d,S#!fd>M&A;nCf\0[XbBZ:arV'4*`J1V5]a3YE7M&d5'"C"4I35%=gM9D&NW$UY0Lb;,pV<'9'!jr.7NmOAJ>!g:V>&=jd%M:t<D,Lj#D0;+VME)L@=JQdXcJbi"LrrA6eV'FJ&;J_%c-.LB&O1IS.@CMmGOASZT'5V8RW20qSQ_Tj)aR'tTX9sP!Zp_gL\]G\q%K]C7]9ner\S2iLTP6GP))N8/g;?h8t4^eAt`(=?AP;#Y6WQ=g1@$[aM3SKGq>,"a1@3YnY![V7c70"peW!\7p_Nnk8Z-4?CZ>X[b%i'C$]f?"<&-*XsUZ3[m,S'&$L&Re>>WAqm@^m8A-Bf;@c[R?l?;j.B$M:RdtFuI1&-7cM?_3RUu7[7IME+9+%'!3XK7AqNd<N2!T%bJ)roTM]QFTf@i:2H:Z(Q=*SKiD_K_"IDY\_CX*/b#E1gJ48Qd/;Vhm;^j^EA!X&RnSec?KZurf#;d'q.Wud7bgOXa/ET`bJ:7^H%dUH[ONBp36?HHR`TI$%,r#1-PL3jPcQ=*a)/3O9G"N<&3WWZLW=_0ST-\.Lr<jC4MTI$%,NYH../VE\S0MBod=JQUB#pPoMO8rIY%=iLC#!*\BUJf8_2/^^_AFNcFPM.RJH*s&`:]*^j:!*\@gL)NVa>+uac)?GJV5bOkqJ<mE_.2RsLTI&r8*R8I(/V/BkK2i%X@KD.8%.1BCS!g7RX%>'m+Zf[o,()AU8TEMmLdSgETU03bd22%VKegLggnI/Sf;f(_2AdN(7$W`N=P6H#rA&o9bRf"K5Z37VV]pM0QBNA\L%q2QUk%,)MNi"9LVAsLIbF3#!].eX,Oa:]!H!"'BMM3\n.`$!,6/ZU_!N$1hN#SjHB6'ea)6nk]?!^*t4@=_OT@:`$@,/b+X.l8h<%+dUJLE]=ei-1Em^_u[,r4[k6-5V-@D(rc1s,F16F_'-lT(CrN:$%dm?PQJ.DP=_2#!Qs&tU;%#>7'e@BoOGfPbpoh?`"L=pe4#1)%<BcEJZ%O+$E;U8Tkp]N1#dDfMYd"7;W<%?U%t+F/TmDu\UFdW^/?$Gh=K3qA<<64%i5*Y=99fZ^G5s0o`[)f:^_.R3OpJ:F+Bqat%"(57L=cQQ539s!NY>dRXRKHrs1f\]L!)'+]`crf*-71(Z/"u/Gfm*V%`#M^!*sK;T6)noCiKZr10jY0Nd%LGA6;]O>R0^(913>-n%s89n()d88(l@b]<&Rl&FVNMe$KIfPQ]E;WB"\1HdJ>H!XilD-n"U90K!1#+ro-aYk<Nll5@&Y-$M$>M/\UZHtJ0e/u94SH567*fV%@l[qr/E("l?jZMo#_?C!;Lu)"A&&^-`0DQ!+`3OLNIY([XqsuL&jR&;N*!lj'>>+K9"ticKE;cm$+[4,/)um[1Es[d+kJ\J\/#\9%PmYeZ9t15aQ2VqMTEVt@CAHPYN)qJDi5,Ir.M*[["tUL&or8F&@]!^mO$UPoMt!\_Yk/=B3*ZJd_U_IU$s77(nl-$"@KJ"m(pML6%dRb"SbS`8C/><&HLlVspV1tbb`IOd[fYO*\QI(fF>RZc-99h$=!O5UcVBfZi;PaO6)A#R"BHq$*&pQTu6S1Sp.8`PciLqNR&PM%U%%O<@A&i7,pn70NPG-R8DA-kn!:<W]@!^ESc)7"pE9,0g[St\d[$BQR"L,<J_;?9UX`fMLt=O]'9#qSi,Fob_IP:I54QE[9cirQIX%4\'`DL+JT!AkRY*F4lXBQ>kne=b\IjY@&6.!jVrKA^_L%KL15N.moV!*)WLdA-k9A-B01l54R8+Z@qVGFW%K<3gZ/GpB4XY7LX9d%#[&Xr@1Nr\$.UK4UA"r!7,\\D1(ggFD4Uu511mM+YB[i6JW^;UBaD%E:`%NA<!ep<'K$=FKIhZcn4=7$1(*_c`"HaZ4pNVO.(1+0%#q^jU;gq8k`/"K!KP@.4i;cs]f@qPT//=W3A\\ogC?&d=;X"bEc[[=3dn*RE//=M[.KE-*J76Z[!6`+LX9U:"VN9-H!*F!TLNSVZ%lJ1hA&5+U,TjJq.n=I^1`6qS)Ns[%r3ab,`@L6TI=HF/)W?FP_W3h@_C/KX`#K5'>=H!C$;Tg6uJIkIM@3D^</7AWp(F,4q.o6jF%/<pT$@=_O4@$*'./E&Q)-:TPO%@K<^@L:'f]!-7oOpXXrLa=*oJrVr_/<pJA[K3[eg(cI$!j_GOlHE'-%RHDr_Er9:$pp8i(Bek:%5aM0dk9(@I$!Wt=D1F07DC9#:;ISOI(pZO>:1D9WMrU*j/V.7@29d:;"a*bl(p\gYK2V/Ya:aaV'g\-X#OEa%Q?e60a:e,9SDP<l%`-"WraARQmCs%j9!i%'$+\PYjP`-bYPm,+'J1OQIi3p_Z.GbGoV$\(l&S-_&7B!JMk`:`('7qcDS"Wb,Jh3UMDU@\\Z@qUSA-#j0%^WC)G+A3`"/r(udD`UqR$*pXiJfM'admIc30k?,Q'q%_u=i)&3fi0tBM.RKX6Hc%*cq0KiQ7<9X6\$`8WliJG-)tH)L+HcVd`ERR%9=1^8)7!4EE"rSu;WjMt5aHhN6hCj_%pOc>dAjJa@L8bhe"M_0B%a+\Ue_66'$MirTa&FJbpj_YQ=s=POEj-J-!F/KN*)7:Pspc\%g/Vi)Z@pem,_djY6g-WH`2^rYiDFi6_MV4l=e\c)6j-\f;&-r5!o%1@YSaas0nr2qL'u*<!OMt]</NGEM7Sn10MAdR>`;h&m]sE_%=e]Kh@a#JWHu3?:&hPV<_CSQ49k)=E"ZKPD=eZIJY(TrPBk:eu&e$50;NEM)TTJq"0M>O1,Qoqp(7#4-(78YET+P[lb#93gQ=sHi%&.4$</&Gg4QmEe()97=OAr3s].:JO@]#Y_p"T;S^(pcWZ.P#"p.ZZ#jbRt4?`[jtBVIdsa[^&G5bRuM./B06gZI3=.;WeU*^asPE%bqVjFLI-)n^b#F_.LE@&RWNP?7rTS_#n<#f>%!YR"0?Oe&e-?Q=^[P/=+tf7ZUDFJ`L%t*<A)9BdBGB;bRt@8c>+ZK&i`f;&S?lS%Ppp4/GX?J=)e#%G>1jb!"GREcfmm5"C#rgJ&ksl8=^[OFNtj&s92L-eAhIJW.M&fjQmGp:=W+P6bK@hl-!F>%`[oNCi`*pJ=b:4]%A;jXql&\8uBNV)V<!$S:-W?1I3j>;F2!&LD#dT-$d$QS!$!Lb.r2!=3bUNb\F3(X:+8[2(,WDb:]^b/frYIha)X9e;9.P^Xh1Vr.%8>r2q5=u#Ab-ZeX%?**n)"NVcA9D()P%j]%$@!_\+q@C8BQ1sm:IJ"Lf:hK2[ujA>AkoBhWN!`;4c*2YdZhrGYG:t$Wc2@>K/63$%7rN]K_^D.bZbg`-i/GpbT3eckKJoaUPG(d48q*;(:5mjMJOIh8(5/N3!9UaMRjdD5QPhN7jX9m!`*+"4jp8/-i)5Y-UF.@AlsX`?%78:W*K/Lc,K[4'-DFJ,.YZM8`7c5];BpH5^@eN-A=i\^2!Y(`3]<'";:SA3(k8FZ,*1b@fC5^"/$abP<L34JI=sBf9&8!1rnHK=K%X,p.54?>\7!kHH13.[!C;F+qnd83TsYAI%qUps@R^)mL.1/0`S=:,J95)Vu=e3TMH$/liD`A:Jf=cq#?0-l,N5;YbL&H@01>ML)4%4X/Ro>dTYmMW"\9hOT6`?%.VMX>/t#8a-+sBec^'EO+d>\VLf'6jU:>8+BbebRB1ThSM;0:i)aXm9nq!i?Dut3=/Z9q&^S<(2JGP%-,u`?d@fr,3ECrB(R-nG81Ig1X]GjuQPAD9#m>O>M;Xl7d.G66IU!sc<KiRZ1U%d?7MPn]3QVCQ3]2Mqk+HNbQ;KM?TO=o.4sT[[%4q(ACIX>9'Mm$NV#XMIlS`?.MQu<*AN(&C@po1(`Yb:qA8lH.l!%F7\4c.ocnM,Q\\Cq$kaT7&OiFHCK^Rq3p.jPd<N]U8/<hUgJ%%9N/PQJ-A9UW0-&.?+S-Q_:p67^j/+N!Fb6BNWE5g-W"OX+4Dl92_<X6sL2a(dcUhHq&jT7M:e#6tUC2$7-S>$C;rI@OS5lCn78a%%_OCp."8E8pBo`rYRug;0`nD52^Et@VefZF&`_]>,oNg.T-P>thhPOc738$ITl(V<$Zh#a"r2&r`D"8TFX8VJW[1[68r_-+>>@0k%UKB7/\qR![1I["3Ojg8$MTWUu&"LWhYFocKah;`%Y$T#N/oVR1W=geXq@0BU!!VNd'4C;4b@FHX,NB`&1-q\/DJ@?PDu\3C_<?BM%kEo/Y>8F4\A+<7H-4&@7;c'*F\qR!adZgN&'_EY:@4\Jn9F3?i;09[o9JXa'LEkGL8RG_)^t.F(]IAH"bu34X]_Db8)=L]/$D@1D%09L6_<[_@u>ahNh`>:&'jgiAr_4*Y7<hRBGHr-"b$Ro8XC1/tf5i8PFBa,raIu^OUCP4:=*#I07_`cod[?Wcd;V+`r"IcgV*Od>j%TsfW[>f]3O%HLK&WkO"^*9\A=*LXK-2=V^Egr)S0Tr;PFREH(f+OH@o0IL"cPm%o(9ZDo_Jh'`-\Tg"f&7Yk!"d)>Pq@NnH3btr4%CrbOp:Dq5,#>,Y=OZ:TgMFBSQ>GN6QCM6?49D=X,09gj?;Aa/6):C<.`\5TM24S9='roXbA2"`-9!'MS4jo(<<K-[G`;iU9h[?cL%,m5q'1,W$!;FB7rm"#UW(@tukNn5/@3M8RHN3u/+.Ff1I.tE3Tc(QCr._'T)0VKU%5]Ol@FCtaM$(2K@=:lU<1:aP;es+,pA=C5e%p_*6,$Sc&\$/T'@$$(ltc&'E.YubYZopE![:4th4d%ES5<#OQ?q*_&Y/R?/K7nIP7HqJ=S6p^#V3af#uKhW-3_P[CLk>!2HAE[6o%r'+6'TcAPSal"$W-qr=4bd2uA+#mW+=,mEQ.Mg2nju'kc3CaXb;:JAfLXE@973r]=1-Y&h(3ET%qjDJr1W^7O]2&09P0O6+3BrD7%96=41.<d:86?RXZQ`.WVTJnGki$FWY#^sKTH/(&C>tErJ&+1442rLGH["'#73gMZKjoZPma"!so;7@87`9C[SD!2Y+j;-*bSh.jY%YEtMB&TmR]YK#Y:P!\aXS]JV6=;(eE!k_b=Dp"5ZI2VI=VHEnE^hH1dkQr]87NG;D\P5W:a]AlO<bs7n`*%=*'6F7\rS/uD@:N5M%R^5(^M$GMpcA94=MBY=b\D.6ghncok16,dDPX0g\S"ene7Y^TX6AT5?=`2lX;Oh9go%bQp,pCs+A3&F?P(b/s+XQkKdb:J&0Q2:o%k.ci^JPi,"n5(MZ7#*ZsFNC:YQH`o;NK!"1-I?p'r3oVS,BUYl:`Qn%e\\=%(qE*4,c)V&$3;r)f*d<8D.9"[_M9Q-F[@mL"c3QU%[YeNc=ZYf/l=Wt4L<E1%%TQGThh+Qh5m+rl"e9glQQ6ZPGV<XI^$e'C^i12VlOZde9>OUgBn)k=i_Y;+-jmD&ZloJWO)&=+5dkX%%hN&4#<r[=qjO)GBL[(`RYQ3c:+?L-MP*-bH@i`le\rhNT%^@&LPVj^%kW0)*qZYP`OK>HJD/mBBN"@<..1;uNYT.9=GMh?BkiBlt%Grb(EbTYp/do7#$93t/ho?"s%'FPb52en"o9@rk;/`h9s`5=hpM.;Fa\72ZNV$cuQ$\\)Lg(m.0+=5R(^W4s3A0CtM;q)quV7;$[%!b05LL,4-0DZom]Ef(!EV'RQ=SF6q_s+Ht!<&r<fW<!^J;a[,g`j=T%$)L1sY+UB^:>,,WQiLt`,=@7&E*5Lp_)!q2RZ]M?a[]9[%R-t>^%$B7IVIc!XcgVM\3_M#&K]JFY"!6_^);9OEYJKkJCKS+b#nTXf'[%,ZWrQQe*QJ@O!"t<PMPrq<PF9Q@PP?-QWgnK1`fl$C%Im]FAV:`&W-;UI-*EuEd)F?-.B[^0Po?q?A?*&QOF,BG0oJJpUK#pANEEM5A5b7Od`<`(<L8"d,k,>kX6APamP]R6Hb7p`BpY_nO%+Mi(B!CB$?F(bjsNWUU8b@s<i<H'W-F1=KD)&fa2Oj\J0-.JauR:YT[a%H6)5[cBORMK-WN65c78tSfdPpK]S*[1p,NcV!5Png8b%=J\$_JMX._pW._5k"4"/E*1j!n'H&ZLS$IGYIPpdKF13-eL-M4j?SSX`!'1_I4EM""jlJ?dX8tm$tu;+=+%!/UcZ#0(!*>q7q9@\%@4>o(2G#9I._FX13oU!#Ui>"B1hbcSV`Im)^L8;F1_"0<=CmPN'*m+,gN\99($/?533adsGe7G5-.VgVFNEI4gpD5R8MR8VR"-_9%@0hB,/_%j-0+CgPI!23E!$s?cC8.bm-;*hrr&LOYcqnJF`V?6ZbKCbk`p1Xd"^HbN<fZXHa(m`;$6R1`A>H&,PnX+I3&i5+d,YL0%7EB14"iuem1G\,,@CS!MPj4QVE@l;5ean<dBV&SQ'a)SGK6kb8bXST9D\X._*-C]pNJknd#UC#k!@E21n\r*fAGJ:&/C2C>VKcSX%r]"LU+XP5b'u[Sc5NmGK'F>7t2TCmN"oZJ$1+IU1A],9!-KiNkP0,mpWG&Y26eiVX\B(9&CT"Bg<$sY)'e(#e-tDKB2\jtAaNQ[,%?+f.t/(KK8B+g7MD8Y@"?8O_e/O`2DNKL'%,rWaGiSViZ6%0tO0FOVDNWo-$/fDi"`BS>/-C#q*HsU2DGN^lOT>4Zo#Kn_4Xsd(E%afHajh10GUa8/aZ16/4=I%.BpY9dsR\9&Sl*srV@M^F$e5/L\[RRk"\)n)Ei<9m8O6NDd%'m284I"AUpKj&CsH9=E`J:RA8_O6"0%Z%8'MI*1YLMik+,r,aE#8VOAa6h.HM8]#g*Qk]"$KYI7=9JXG:$SiM-:RXqT&V)-pElbF@6ugdtlj[kuFSO9X&p0S7i\6Qa;5!u)%QqBQ$Gq)a=`Y,Fb0J&6e+Ym#KM=iSt("nEg=Y\KLd25c'65kbO/J0CUM]Cr1&8oARQ"UniB7Q?@P\,o2fJMP[q/jUnIcC.&,Y]'^%!0&Q.r#MJ5mkQ@i9MnKg4D0sBdR_OqFbb?FSmi:2#SfIYU@R7necr7<e9W<j!Tj)6@AtD[E^Z?'^LO/M58E>.8>CGo'Pkr%3L-2a%C,2tURZE.p?7,Su:ps.Hig"%WWl%sD0h3O5E59H2HNa*G58[ui-]!WDgKa^\Q#X<fMg,c5/!G-+W+d\9ddaii.=:N99$?dep6ql%%GgO'QLpl@0<2_i0>:hUqTr+NW\M`GpV1OQ&L`,cB&-Y"pTfWSU]jRDjSN#&]+KIqBMSGL@8VD:_Z$SjrTkNqU2(TVZ"C8(Da/o\#%o@7sd`X9.EYQK]oVCWs*Yp$[\&T=$M3m3%aR#gc$UP"Cc-pF)+6,a#LC.`2d9l;:)FGhL^5KET-6(#:"Pnr2tjK8pR#j^//,C;])%72?+C)VrGi=<<lAQ7`rM3d8Z3=R_UA.SARSTj*WI%:L)qpBN'Lb"N!)L9M,un.fO90"fl5>V]2HiBfJSh1@_o>tW=spV:1u"Xg8u%9uq,#W(']ijk@Din)&dp/SW;H!g`BXP7kIP%oI$L5!^2/YY_u1'e#Ada"drkL07hcT[=u.,nCMX8#5X.0R6,d)WVr?Xlo./=K1Ks%Rm=;R;j(V68C@T/F.WS@,DbS=Nr+K28/Fg4WHBT3"HcNH#em2#28#<:]7;"3d(i5-'T>T`$HD7SMEg."$[BW2[Da1j`RZ\=PU:Sn%1)<_,@D*YDBR.@(MK6-8R&1-o-A;OMWSl_QST55t5GQ]30]_--aic*p$',lFaNu6GHlFKH/&D05kp@:\0'Ig0XRZ/8N%Z"V1s;3d%)+=R*A@M^F>rb/94W#V>M!WUO*R43M$j.50d8>i;')5i?_1(V3TGsOQ@`o?+S:J*m)TcX-UeR:u#aHZ_()'N,q='K^@%7d;bkeRk%s4%.(.jK5)YrW_8MJ7ftnh=/_.23tl1,sk"E]$*IR*59<'[s*\<X42-EXaEG],mbe_-L't]7;;=<\@O>(.sZsk.>)85MY!<#UW#E%8p=)L9Fo#Wq(a$ZfqsY?)hE#rc&6NG:j<='KTICgh@`j=5mf]!+FP*)!j>lUDl?[T[EMD"IN&&MD7E1Y.%73!@8n7F%+c+i<4S<.%.@%&4,[VSQ.1;jup7pSP?i6MTlh*"oB.PAhO]R`S+7'^7J1cbgMO34?DC!I8h+8Q!8.ga67_9Eb,(.Xk0JeOo]onDf:sa$W3ZtsD%>kgYi/.N&Cf[,rF)jAXJ6S2m9-r`*(KM.`mcY\&*#5D&NH\O7HRWKZq&hjd.C!MhRN"fi;]uVT(8tmk8,]Sh)5UE3P<"6\7*JQ!:%9*>_h_<c'J*)[,(UVuDMjoN0cJL5*\dMQ_i_ARlU&/A#PWXHrrQV"I;(902lZIEi8%3lI$`h29@.ADn/R0^Lc(kIoH@U;EuZUhN4%`INVi@]?2m+_6UcP[[F5FT]OaXtOjm$]#6hRPTQ%'#C4WiA<T/5A1pKL;DM5bRp_.Q6r<^\mVQu<=&\@-CD(e#O+D&[j9k+%2?cX%74Kiq<?ngMf4=uc@guMf-)4!S>t9Vg0<4'-E[EhP8'S0,EGJ6Vf0G?`@2MksGhdF>1\e!#;FaYu\PigP&8;oq.L`!p'&eO*!37P7%fpYelOJ6msRL[daVM-aLaYmehd)(;8BSd>M1g]9ST^g`tcdKp3PY>"5B;CnG$s<h^#R)>:Dp0kZD'IN[jc3qp'dM-4LR4B&N<BI*%3K?B1nI%PU,_u%*jpah)F(bo7V1(KEEbTJ?>]L_js3^`Z=8?N!D,PD0@ZXj5Sj;70Gl]2C=f2A+j96)VG?#FI#/poQK#0E2MjR\2%dh&r%r#-b25`j32)-sIA,f\;%7NSO\I5J]>*a5MIX`tEth3s3ZKMqp<O=Kge(Xi[)WJfH)Y3.Y(@5t;ubiXdTCCl38(?g<[&2GOk%>>ZtY@d?uJKpVjY&*2?`A!+)<S>X$Kka\X_NgA<#&<,F>FN"CCjm4rV4.!<r9JK57>DA!S2P2121fU1SOV'&;)@/AJJ<H\f,+.A7%j<0/H!E`g'4=M8p"C!Jbd!n>;P.l^>LX^B8/the1_H+r:,^beFc%&7N5"eFinHat\\?/Ted1hliq?!XeN(7@\opm9aOeT^a`/?7(%`Zbn2P!Y&SQ79HV3",X*M(bG*U]_L.17%WSH$!K=C$m(-6%#NIan_SeV8G`S#"nAAL-[%J@Z*[NCCfDJCFTik)0-XCO84m>A*:!q%Huk-egb;,onqlT*Pg;kDpiA:Odb$G[CHIQ?<tL&,XA)k+C6Hdr+i%D.kYn]DDZ/M#bAjK9,=nLI!F\ES@s9]J(\*f1lkWX/$Ou4+%+N9&:7%,&"C@_*3p7*Tn+:MRUKEN6;6tpl\c;s!CN]:6sg?^h4X2;9bS?9Z9^Cb+ZE,B+1fo!'p,0gB"=[N@*K8AVVT/g*jm(o24%H-gWX#/"*.R'RMe<lJVLk^q<-JhJ%Nbh8*/WD]T23aS3*@9b^#MIh[dK%-Y?>mrZRj>fj8NeM5U;&m$!'G4fafMA?kGX6pigm/'1%'NWYuO!XTj;oBUdU7g^Sm/&_Pf(TV*N7V_^+s<uK!RnRrI?0H7U.[O<"Ul=3o@5ja-KM&>PEOsIpqdP1ok9GMVI@-W8g_sH@dRMJ%A6cR8F];XO"/.,_Lq4ka/X`oTPK.^.a*,<YI\brD%2q/$PL<RN7_b0sD'@k/rnLF`X:+bY@Gj?FVASu<djb%^;5)4hbK!Ak7)e#$%TEHQuI&]`Z4k@.s&5t%)X/cMpB;7TQf6sD%\"!RS4ba^#ORk,Odto!dHUV%U9Mg!s]F-co:"]'WN!9<INf\-PIOKC\Wuht2HiXqr%(69aLb$WNKJ0nA]6)t4E-:<Y*_S3;&+p6g<ZrE7[J?]M/d3MF@KlmT$'2_ZYU0(Y&/S/:!apq&;:dDNA?e9mROq>S9+@!-"'h?bb%0bGUs>)&fhZ2QbO*BF2r%.]#GWVKT@i,<hUEDRPo%G:n@QaL4Y.8,9K7QN2sj?^g$Ho5G01!YHJ!;>PC1&=Hq[KmEGMG&QM5JI@P%GAnIsWHAf3!=mk-5p):)gs,<Lp+5Sq8*,hG1n)0\)IF==(?hP/,HMht6"LSC!.4jjO:UY*B/[6SW"Y-VJ>K.,64FFiP/1Yh!_*<>%K^9;q25c@\irUKkD_4K$aZ5"CCLMkm/P@,nR@0`1)ua)VFC@+$bNB.W#)Knei7F['2@N+MW$Y_:0UWCL+80:1_NE,m%NWt%C^;.-%(EId.PgI6^BD<B-'uKPkXP\cj6%CUd*Suu2s/kFA`De$-O%&['8tuc(B&'%9AeVQ:I*@<SJhZ9TG;Ncm3ul.o3Rn`H_k&p0^,r*B%=-Qr.8?t'[X+Ld8%%(OgGej5`nC?Y'jtN<=^u_7%A",eJd0X`(#kn[p*#_72;*gDh";=o-$*HQ-66R(t9I%N^#?0%\J\-J84j(+Z%Ed)BIAp#/uWP[bLQL]JrEQf*?fS-8+aY'*rMSm^87TX#7cnAXlY>sO)B/U6g@u8(V8AWsVJV^Qs"6;7%%l4W;@):MnVA"#/la%19%.frEEs2)KeeZs"jp'^F5nteSTMgiE'*iB@^!e!o;m82jmp(>N^V=mCKn"%iYI>k^KMJlLWF,UjIO+*(%dFudbXtFQT,?lSAc`Qe.%V''NN=5R`Pbqj00phKGDe`C")%$j"\%QI'j1qoJ(^+MAsP8@Y11(7L`;1'cKD&Jo!$d6K*ZE*8lGQmEG$U7VRVsJQnP*;>K-nii8%m,uq_]Mk@@F5`PYg0]l@B+MR2B4(K*,L@_>A7m5!QK%VF:A$Nl(rDF>Hr5H+A1ihCemT[F#SM&;d,W>q$)`#b$(FfG?/XX7C9l11%,C+9&4r8;gT"uV>4LRpV#m$([9gmR5Kt!9s#T^AA?ZD]ol;6RS==lsoP9NG\A9BYA!0/>=7sqP+[7pI1F!]^<]*r7U<kDQ+hR7??%ERF(Q-<,nKgR!m[,\NR3gq#&:g_hI@()a-L?`g,oQ#g4n=30l*=eCsDrFes@8?%far1%en0/bmljjWbs[<8Cl8In#2+K*JsV2&oV%G#ocI381tj/"DX4O,<s8"S?]["`4qOhKn=C+a:3,.!K%sS*D7A$#O!"q2DX95'!0'PXf4/3F&cQ)4plYjS)F-";!XIl5$!N20;Qg%FB"A^\hZ`&V)(q^#`J!&E+3CAkL_h7\Th'4g\Zl$-2ub_TdX?'C2fW_nZ=Ad?6]eaAMb4^.!gh8*:*`0^EOq#9mL[4C%Bc;fW*G3%iaQf9[B'Mn8\Z95+cRSL>)Rm87X"FaPHD:FT&THk:RT`a?N3>0[:<]f\mNrogP8<5*s2Vs^!%%r.N@(+$X#YhMr4EI4eiHtn`I`\%R7U`f2J*fV=$4UBdeF,gBNC_RIplCXC9-$ojJe)MgR!W?:&h(_+=elOqK/lfZAdkBF=CNYP4LiZ)c&.&^:!C9R7OVX:kdUskjB3Q%"21?o9n9$Gq?>O"DsAkGo0+&Gb"oJ#U@WG>GjM"a"-2u3RN,WD]L\;gX&f82_l^U7`t<=NRs)LaoA7,uDR;M)RK;U;G_cc[8XK!,%O>9t1L?h:b"I#+`,.,I=hD`@3=eCs(<`RTmhqPWl/9ig:^Z(uuLg[,lqp.u0E!R0jMc8?TSo68a^!tYoGPb_C^cR7ShYRH4,"q:I%M'8t)[)nk])ns^!CV-c%qQ`[G7KJksnc[bAG1*Z*$[2c>6f!5L<SbBIp*BlM"!j5&T:=Pe&@=Rr2"Y!-?a$SQRfsG^]EYF]g/s3I%%tcgA.3FRY>^PKt3T."Ls)..q^CEomg?^8O(-SF5qEDAC*\9t(AtSiK!qS>q'JEa7p7Q*+*^cr/!1]WoHZl3rL'^O2q7RGh4QNJ!%8-C.3TWSn,5[MFjr$W"K3dnl.=gFT&4+20dV;D2\(m88`oZ@rWVp?ubA0;aE_i&UD!ZsH&gcEb%Rm%rS_bO.e)gBPW`%_=PN+[[T%c_BL>D/_-.>@/qmF5fi.k0-C.gSi_uV,Q":EG!dNl!,9^>#R9^-AWg?Eu$4)?4HKSc^gKq]JU`eQKQQ0ql!1c/Um-joZRcQ2rjm+%r8tim:"&P@;QGKT5V$$L/0c0g@hs)]oV+\R`a,#,YD/jjO:NlSQ`lCj6"h>g'Cd8OT4&VCkW?_(AC82'']Q?u--*d7[I#f<5.(C4%SJKNt4qg>101Q,Z0;L$O^Td2k)fD@82f)VrO;a4B#ACDbE@ge#,Y4:_fM_RZI3EsNp#h3?O]eNuBTJb%gd556g4G^i>O*?n,7BAH%qjNt4L^QnnI:i#P&B%ob`Xb`"-F6LX7gAKKj#R'Y[@06uO>!%B0)!I:<a>%E*!gc:2?]gmAi8dF#(C%/%KMWl(SScN0NoIWGL_\P%])H*hMjaUA$TJniO;+Wa@q/p46kh9e'2B^J\$.<c1d._Yeh@-m"C!0O;e/:9U*2$/<4-*F!!9UFGD!qjoR<>a-fuX)LY(ZBNNcH&%'?q.b,:p6f9R(L0BlL:QKb[mr#.H^K]-^-&Cabk]>H=s2PG6(!<tO.d-T"!::LgCG/%`MRYO0f+W]*oY)"FIs$orofr-RF2X'C:S%5`T8MiYmgb<aOSmjR3Ak!.C3c54B70J1^V5CFBT3%:KnfrRcu*cD%&;Lkc8DfGpX0r.f+sM`m$t:>!(n@[oC@ME)ago+AK,?m-#k%-p:`[isSN77TD5`\]\,e$0$Tp>)6NiGI;^c==G-#Y@#:$rObk2FRoJ)k:3_PEhT$GAM+#>X#bN_.]F!=s+>8[%7^'0curM"7gFJu%%*6f45R9(us%?I<A2C4fj?Utnr:Ra;T,LtUHD:Zl:%opCHX@tVR`?p>&JMC?:+*#362^cCb=f=:(%ccpkC_USqD#q2Jl'2$b:/.4%-G)_=+C=K$Sfj9%=N/4(j"8K?$8'%/J;$7uHsTsb1QQIf^nmaF]pd_.cQ.ssTgS+%-AaskF?;$J!./]g[6kO+6*\^0BHlRQ(7\O9%+Rl2+>r%YAh6`;CY3Gjf]5WYtnu\ZQ>tl*sdU67+pAcRAFgX>&B1.=Jg:5UBr](*1eR0B(@I*KskRXsgYtFkKKP2p56>ON5dn]uF%W3u)@r94=Nn[H6M*rcf1]VsAfa`m7W>ap*WB_L0@=WjCk;\j:#pS%tK?ViRVk^u8_?Mi[Q$U"sG#B/%hS%u$AW/m3^?P&qTC*:8u%kP!5?>"P[rp/jBU]V(GL/s/`:'>q@LQ(`-Mfa/Uf;YTXoWM4J2aLbH1k+'c1S'*rc&I<X-q"ijWa(pkXQT[8&Hl`F-aJ:A94D#Tb%>8%c_D"K13ak67X.?_u?9Ee`Cs'3Dtd+Yk'HU<g_7b*UJ$UEHa<C>3O:&qjmSWGm>KIV!O7T'kfGN1Sj[D.1YJVR-UX9f+jj/P]\%Z:HqL+c02hNFX8jO&@4iq@NjK_G[h!+/a.Fn^hd!>b(%#.VC<n1?tsMm0\u2'/$/1Fc.>]H#\hm"#%**;;212F$]BtM3ELHY)uE6%P)t+MZ,6eQM,@0]&UbY-N%(u!/%_Y+$PsR=WW5A2r4o?Dpq#JnP.PH5--1;aMR]^+*FR9hg--7H$P)Sl+@eB!05OM]`\FuO59!Qq%iN!Gof!GDP.L9(l!p618[l=_P5Hb>A^V`Nk0mKm(jqfl3S"97X+t!^KRg?.+;n#F(.!:7nT+gL([tl+$-9aCk0R8.j:73B;Y<L@_%.PfIq8]\F`@cQ4I%^T(*('IYGBuarm`W0I)rW,LVJkU9BK(dQN2ACEu1qJtG6hr]lR\1p#VlVh8q[73UF<GoE0(BM<"LSO)H#&:/%rWf_GnU2V!9:#V:G6&i^!Lji*&"B4GjEZ0PQmc(b\QX_VH7)pJKQqu#O7?MDk7cP<Fu$u>"O.iV07J3%5\:;7VjVaGnG):tU,7V<%+[30Il7J5\CE>c]4B;VkFiPf\eO5T9K4<E3<tPV@Kt,"CbEhlk49/CZXNff/K`nfjA]iC3)[T0Cjk^oa0oMK6F3c%eZrfB$-p#MQ%E2RCA2S^hpfsN9P?$rjn/Dp@"_C)Uj#I5ON"E3e8gRgW7WI^13!sJ;$a1G8VEgRgTNk;"Fr\dh`(HL`f!d&J/KnVhb%2Ph;E<:kU%1i_$BonAYmY\gCdk\/OM[K%C7J/";teuDfdi,(.tXJo3.ORKdn&KG;Lj;;l=dekUa-lg2W-?ks"%E]<)/WMC;Y]QD?3_aCM8P[BK%KEl%bS#i?6r4o?Dc,pHN`!63DP>ZLIl82,KkrVb;-TLAlgH`[NOkuHL,4(SoLNo!3IF2bol3T#NfMZ2e9A3=Zl,i2s05c2OP?]A(%I/\[>oAh6t)aPj=W?,7'c8?9H*Erb/L]qa1,C+XK.^><-i]E.kN3sI(<SadiEd3*rad+#5E6CULLV1dOX'O/mc`DK.#&(F$_re&3%P>$_5W'kq^Wu+VbEGIa"QA_K_h_tq(=S97FIs0#1TFCkJaC0-,&?-(N44hcGVkT?q@>@G_:O_s>H/##"]rIf:NHI%fK#cV3(hDO^%6gH]*+$]8<o1Knu:*rETYKRXW&=]\QD^h""FXIQ3O07#@mY_&jBhbe_OcXYqHZ7-fm94[!g'8g]V/]oAau?dn[&k_54!U<AD&i[O%e1qRm#2.kY'd\m175HRf2"iaL<=`9\1:1UXPE&RsS'SXPP[Zs(#AgjUSNclAU"t5Y#/nKM2$KlSIoG<%G_'q2CK.t,n\"bKTJ-`\%8VVBjk0r@(hi%,SVBaI;D9D"Rf#o."nB*6^&]bf!&kZ7u7A>At8X#=Bs$fE[9Q=F&o4/R=VL?^mPA@.<'OcC'C*a%J+`.B!aIsW.%&)7BHh"#ET^u4Efhf\/ph1%aH/Zo8u-R2*!rccE,>q[;X3&5c;$([iVe6e#%,f1S@fl#Zces'B]E8^9SQ59TRFGOp+5[4ZtQOIlh%BgPl)InND(^<3>g!F4W'bd2`.J8",]>aTg!]<pQ4Q*4:=)&=o4^A6jm9]N_bK&M5[Pc(I3(ckl(@58I?`;,m,:]QemR8"H\,3%si%e]t[rGS9]>LmdOIIu'4i!rL*=LPA(ef*0bi=+SUP;\dHJWNafD1RYJSmPbMYeXp\NJa(RI@*6L98A&0UQ8l*f!#`\!\&!KbSN=6l%VB,jI<VmQA8hgC1pRg\\6\[c.7+P8%7D#%06aHKSDMj^DIJd8+F+c!5Z@@&!R$C6]DE[&s4p,@m.4-BM;h>&*:fnU4Jt"%`=J*I$%]'DDg%lDUfQ5&Es'L>qI*K;c_(hgG;E.:`5op]1KW7@9$7MX'i*HN^:a[jI"W.VNP4qSo))]#FZDMMNHQ,;;d]Lj_Yr<d2$:h'2B%X34Cd[!Qf8h-+LHf*K`.:<jn3;f*loAk-cZfu[b1AZoj$9#N']=!8Un>Lh:&3CDJ3*]:fe?0%qoZ`d\\do&RW;$'-P31RK&;!/al%]PR/W:#=Tu79Peq]\k0'G4P\8rakqg\),(r[s_e1T788gn$N:Jp?Q]N#$`&b1K\W-S6`Ke49j=dF2Pq4g]A"I]BRqIca;@.-o_Ws%?mV!O""/ht4<=fY)sIEA<%=Mfnr>$MlpAcP\#_L,K@EW#kVU0#_LP!2MAa6FQoh^'2E]QF`H%daJe#Fa2n;P`-h8O[.foJ@JPRB%%VDG<@\XM`N%T]S@^ke47([bnS$gfZ7;qPaq])Q#2oDSG=5dM28,-!tPZ"9d[4$ZX_J../^'DB-7of,GmTnG`!`mMs%,>c4IS"H^k%[Q,e#Mg"iK^mB@0:o=n6eK?5k>OYb;f,BG09j*^dS)k!<+1QG6>W2n1$'Yq3G1]r0ocf]&KW,`>>J:Yd6h1kOV%C_D>'ZmQ$oh^O%Pqa`XDJWU5_?\kZJ_;6amEMhUh4gje-MX3kQ=s_/'s=Ai9qd"BduMDgd#o`Ee?_EB9h^6XfToLU^gVep^T]9)'Z#JMpSHj@k1."Z%9uG?P3ZGmn&j9st>j<BO9^lXRoUMp!_DVP#b,P8#Pt91=2J[h"s(M#H>teLfL",tceVAb?3j38qF!XWa31Ih6/;i2Pkj@FJ1U<]Z%#tR)ido%]I;(f]>gDMX4Sm#T?m?b\L+Sp"?SP,Zib$EVc-5$K`qMDITh:7_Ln^XV2&B`0;@SI5X-j"C*>r-L#TYO'MV@]Bc?F7_6%Sdit`NurW.!?_T-:hn]O,="fu)=U4O4XlIJL$Lnb.9O0bgCPP=)\TOcHP5I(?$19RGd-g>hS2'Q-aDWk+1UDU_!TWmpUfi5WYcjp%-#P&.YX0ep6l:Am`lq9iOlBE>Tj!/&5kp<!_:-Bk'riZfI#B1mh-_g^r4oFUHC^4e!=&ms!=EP7B8?'im'>gEY&R_a;DnM/m;\cg%PNZ33+UCK-Wcpop,n5!uOrUL4Nm=7\oY.ou'iqC,+p0`)fE7^^C[&8_KetF9Vfii6<Na7:Pb=?MhVTt:Tcqq./M-tIU8$.gl(_!J%fOqD5-!%(a.@Y0tbWAmKER8;h%ll)`-RQ9RYd&:OK`Xr<M3W,O^)a*a(-Z[&+&S4@n#jh7QPZ9A,%M$:>+LjqKnU)Xl)Rk!5.HEP%6Wcc5"=PZnLd_gM8^+u*DQlPsJG$,!KcH;,!;O?%kBU&YJ+i12[^-gSE1coS+(U]Z'ZMgbhB?kBgr]>!.Z/[NmWN#!(D3o=O,L&W%S,?u^h"+.fKr$f\rSj,!WiBg%<"2^0AJ$CT]0`(BCu>aqWdWbkh)f=*(cGmKJDpQ]RI`+h)LF@3g@_V1*lB=%ET$u2cVAb#M4lu_%>T%t/q3W7&9/-pt88t`r3l]2/iO)KC\@s<ciH,j[!oE*@4G692&OWWRJg]NZC"Dq&:-%bj\tdAd4')I6h$ro=[:7#-@8X<tcSc97%#)q:rAdsoNkiBp.`:0'rbVCk7?E;2I`X*?g6^9K""9!5OFhj;'jj2.#+F\WPc8Y-8P)^DRg2g:AdQ3Gi(UL[OL+<b?)9%=fkX$<*%/9,:Uc4\K^<XK-M:T>(4)gkHrKH[Ib)23N^lZ'\<j"H_\o,77FcTgj'.U=(S2o2BF4EEI]!.f+t38Np_,tXKE[0\1<)T7;EI'P:t%B@<N'G0?+3j;g-8_<`tfHlBdCQFI$:kQoEHoMCBWJB/+9c*8'_Wlt$PHgrXZI[J&Q1\`\u\$6<jF+bi'qh-EOVcdQ<7=D)Yq-Ra-%_]k4N-E;E'b`jR4f#^bLan]gn$s,L+S9T68[km2h9>ZUFf<l-(DJTX3Z%s37=/0amLJ&r@K;EY`>@ZGV!KjR]nVaM?%><p9PH]JC%Ll]X853IBgVN[;:7XDRgSJ@Y_Ag:qIY%&e;OtiP145soXh3Q?.D-r\o-ugrg2*ZQ:RL]k;kFkk:PK'qEDlUl=#tRnWF[@XHV!P6e%E%:H&&g)0bG,4q)SYmXYQ3QZdi"BL\Wg)%m:NO8<X'bRd=$Yq_`5,HD`Lg\M.Tm[fbkD8#&@FZd'm`Dm6bc6!"P=ls[@-kYV*;k#%PU/das.[+lL/Mi@TA?6J9$El+c$.8EAL<k5d-2kjE6bA*lI_`I&HBOBefHm^7fh^2,!ABkX?gE@;K,8"CH2J!p6Wf1]Q2%6[:a"a%`'roo"R/'<.V9VMRESPS37jQl&bf<a"9D^"/?'C/?aL`,6$F%G@Ca(`-e^Qd^\MGZeVgBK)HnGJJ0EmX0uJf&WabA[L.KopiRs!B%!$%28f2fRjF1#5idBWXP'2uUKgE/ZLl:`lApHjlCqKdb\Q)p<Q4,D70DUN<1pl[,1oX-d#Kufr'"2f@$?c8,4)-LGX&ir\a$48tG%i73UncQ)J53#r5iF'=3_\(Fi&7!-'P7$Pj(Pp9<VXB=TCp#F6Smtt?XV/a`*M>@ErGcICRdpcIT(SC&m1aX)0TVK/=T3)2Oa07<Y%*mn7>Y*]AUAVKTuP[pSfqE,?qX@#WQAOM1ObZK!W;iFOA@@t4o1M\C.^LQ?rqtI7$[FdkD<B`lW:(0H:%]UqK@tpaRbJ=Xi"'P)]%<m_ggV/Qj,5dW)O.r=bNJR@hI*PAfqlT8Wglg=Ni9..noI)QU&:1d3QIIGMiFX<Z2"&MimTReJ!/1HN_Z-Wqr]qY*6'@*(KmTB"[%ChVt8?^lrlan?:H6<:'?AW!`BW,R&=P^AVZd_5@,l\WeVH2GSY(?kfOaPh\&[CEG)hOS\bG$g#EcQV,7BK^_^!hnnnmRs7g9)^j,%WT*SJCZ0kpW<Y]L;jG>HN-dYPaZ=]RCp&s;)r$iXB3n<_ofeEjmSr=!&55s5WK2RVFOTfG'X)3'A+bMecCWRg@,sE!=bk9c/*8ns%k&_Jfr4oFRp+M"iqQIX:o/&:S@aAYZpo;:Am^UM^7ac]N8@,P7SD#!F"Q_<>*HpV6U[1\]ZaG('lk;dpes5!Z6tP8#`!HuP91?K+%Q;<3g69u2?irL1uhf3R:e0=$bP=duG*"5K/>PCO'YLfD)9+G0=V_353,ht$[/#X5,CL,T&6+RT$eh<kJl_i)J@-3B<)3;bmU)](&%jLj0$k%1lB!_FI5#8>WN!]l6YmG1gr`AXD+88aWmN'3\%8;A-.FMr/QR#u9JQ?bh\p5GuB./V/'S1X99Z:\-"?\Oe6[!A,5+,#Vp%kjOA$d_VoYC<A^[0!jSdYmeI'LT7]0CF>'elNHH,O(ROCRk9r/Q]D)&dUNocQiRb/mC[:&:<EXofl<6BKkFjW@\$'"E"l;A@HA?W%3`Tj7Yr(t1$RNC/iEqb4Vl+ep+IEB3;bc=?A=?2X[n)&G6,/_;MHCYh70_e4,\-$b6GUld'X9%YLD+BXjk#[N[PU+1Po4(]8Q=-%%?KS-+%/i6_Bk4[:(R69j$\ImORI75A!K,g.e3.?Iia6[P+]IKRIa,$S22K;PeD6Uc>dObPT3,hS^PFkm$pMk<U7s*fl%_ll&VUc^%Ti/?0SsDh0eO@=VOjGcHo\cgOYGU$0&7):%YM>"3+#P-Co<.+,E$+XDpogd&8DuWGNTa&$1%`JE$GFl%[95PX;VcqkO[l)mD;&2$%?'G_`N6Tju#-%$.TG1%iT[hj%Wf(%:C3;IA]Re<MYIJK5aWje:8o[(#l*rTnB1-SZ[CQP>`fZ<ch5WRedTD'$[l0kIO&q)%;j=Fh%SKV&#;0f$:hC8Slq2i)W]>bg;S0X[Ok&aH@LRS`+iWR?>K?\?8JE-4#WqZ_(#]e+n*o%S\eQoR3AhSjDb1QbqlK6=^jZ\s]^%_]s%aKDacG4??t1piKV>D+f]0@FTh%tN#]<]BWdiBu"^N\7ec;)%oaRf#.313ZSSOOO8rmdjA**aP_p>r0gs/'u\jl<]<O4;Bo^^\2rk%\eAQh6s`-[].f+q&jqP!Z]G7qY_TTs76W.k(:C_B$`M&'8G]?r.dhSJ6NbZT2k:a"O=%[BX,L/M:rs*ImQp-H\W>V?bKaL["\W%K%5ULuL]5MO0(m1>INbNX"%ke.h(L=GXRHO_<)())tJj0aC;4hr$a/U?taN"#m\WpY1m4*ut8B:,"qWp`u((E_@C)ul^#XpZ&(:FnB%=pt\RWMFcMDWFeDj&UgD/bul7Wgk(-+(*+NGH,=ME]Z)[RD'W'./'/F.&O!aTU+qG?):f$OqpmXZcTrj1/oIh,;b`]-B$`0.D;,&%1U0&"OocEL`fLJ_S=a-'Pb=WuW-Brc6Z3SC[?Dkj<.ZV"Qr1aB*[lEbn(Os3e$U\V]sQf%p<6V&`nIM83I&J*b<=ZZ/2#41D9K&^%i\+C)jU-.%8KkZ_BQ`VF/fg&]__UjVAKCFf:_`&mZ99##[.d%$Ybk%fQ.!W2Eilpg0M=_TVi3Y>llEAkd#7;<>UDs)rDK=e2LI[9%M``q7EMSJ`6RN2c';DTa,Q/OU5"\Wq-sk.)TUU<g^o2Ukb)3W"VZ>a#[6]1S<b`m4:DdeMp\7*oRBt6XP(/"ApV45gFH<NdrCsXS%5h*`>+Z&ICp#n;Diekr_Q!^J(5b`VHX2?2/,Xu`GMNM^da[8[0?)LYJ<V$e^@a$9U&_0*U"V<-Q1i`Z92Jod0"NdslD5%1B6HM2[%Y(:"[E<F$f\e+=G$M[Y%6[DtG!M:jng)g#!nmQn@YIJ*1CQj!n4@7tpfM"7C"5)J<I^D7@^k!Mh]2C4fhcBG<[Gc.-*;`.3!<a3T%Q/!ESIr38-'j5Y.J0#.?H`df_>FU-LY\i,[EH8OQ/b4f9+!0uHZu6Q6:1ceZ%*0lFq*CKE;kt-a.4?T@n8LA%0FGZ9mgodr_drgQ%(P9AbL(KXs*4!;-0VOTtG9!'RTQ-A0K;Qia=_CP7.=lQ(=4q[,l#81a0Y/F#>"J7(]mGV;kBcf-j#gDNYRr6Q>EXsS/N9(gb(\XX%BU&CDTqEj0MA<$lm1Dp#=@?_apYkj+CcZ95c]T5>Fd7]hI*lIT8X`>Km_cE=`31Dq_d2U`X':8@'R:"W@j0XU3DAB;V^W8;NjL7W%@Bmdh(*s)3=>)<;KQ-i4[YUZUa;T,48g'$bQY=s9S1C3FS_uVLaG?WcQ1q(/D%k>W;EWD`U7"GtUM#bCOB"O5!P;K$[TTm?h#![b%lCC7D%rFbD-IkRac4k?r'[<F0(o@sM@EY9VL'e!<&9cR*Y_ZNGoA!mW0ejq7"n3eZ0eZG5>pmLC.ie:M9'-G3XUPZuI:\1b>[/(c%irCKEP;_9n\e952p^J^Cip'7cS?2;%\-.o$3h>8e\5o<M"S&&*M^,F*a6h2iqkb?QV3H0+bn"lC8*,Q7E"MH":^ZG?Y4-B0ftp.S%U4Z%PWFEfC]PF\ebB']^4@Z9#FA_fW;:k95>MPN<2%BnLB2M&Ae6Eakj*?J**ii,U3\*.h.?U\\OjR1JhZ's!WK$N7'&9IS^Mo$&%r5Q<)^a"Vg"Xp)8RlbTk')hp".:E8%X^Fk'7-'9&PoSTra`-8Piu>nd<@n(`A9oX#Z'pK8m]'HnT7RO4XcXBTcUfG`6mg.L9"(_'%%"MYehg%j=\Qe/#(lDP`T$,&k:Qbf>b3o^*c!2qhR81#"*DFVT?\kkd'#>]maO>1ZjHNN0k,aQMFh0B@V21??\ae^HUm*2N&E()p%-V[-D_OK8CaJCDJmoT3H/7U_J/Z`CrasS_bna-H0Sd[h7fcNNU%><oVm_[BQ+U=/lZQ(:CkY)'CURI-If<uAY+@$[NDI0_O+o+V*%Yn\&WrWpGgIJR\bfFm+/r8sHo^arDV)d)KG]d-I:S)dW>1?9sBAN:/qqn38=>4.OJ@V]oG3V)+cKeT!m0pAo*`%#!$a!okmD[\=%%jh<WJYsmh+R5$kiZGlC3P:tT\s5b<C5sf/d%5EW@l5q`7RE%U@QNL1!baI.VDtbee[cI3XW)>rjO`%P3L_P--KOjn@UMDiP/]C=Q%:#.=CDhRg19M#_2r(>BncWds;,S;!2=SNJ-B9=3:2S(%)-NHYHm3?j?1Pi5:)7b'7SGTjTbV$)TcAZUV8m$O(ck4VWl+X7[9+^tH%9A_K)Q'mBiXlEZh.:SB-jG?EcjpRM'E;iL9Z>lg.@pnmuW1)XO9C*B.fGko`+s@3*8[:at*#Sech_9pDL!kS<;a3lN&hbI-<.M_4%31RDN!8Imlh0c1r*21T(0k9FqRAD2@(Ef`5L..5r3#si96qHS$U.-3e/BN+?Hu';W5"M'rg3qm<-KqnG8X#rOoQd4$VG#:VQL*i,%1.K&1C\_;tZ)kOs<U<.T$fl(/T/8^?*Dl:M5;<,?W;^hFAH8]b-ASg[+u+r)YEADhFZ4?W>t6(20L.N=b)M-&Vj!F%]AC*D^mCt*%c6P_GT6Kn,!@A*Z^j\6OUhSA%GDW.;[ml>>`!mkO4O=t;]s]@$/oAn"_E`u-R'6VQdj[t?H(2CVWTjoCN44G9\JU%"NpqTidq0/)%AP!@mdiSTj;s[5aJmi.aXF==cHm5J,FBu<(XWo8`F;K0q*&1pFY@M+SFf4qEFXJKI%[f[C^:+t]gOFBKTm>?`o;Y[5RM%L/a2CO]%QEF/ZdUd>TQ24INKE.L8!05pmE=Qj'g/X+=1_0)H/5DEEp_A9CFbaX$HF8P8Rq[AG18Fu:A9g;AP2B5aW.SX,-$s1Q,;#WaCtY-Z%OQb'`(kE^ddSa#LeWQrnhQ5XgUp9gK56A_B8h-Z5V8AcJAu&B![kBD,Y*[.;,SKLHAi?(3+95l,@ud8.3+pM\?6BI).bWfa)rEWH%n]a)Xk)`&nWeQRrH6nrB@pFVYfJ^)X%V[a,[!kYIe=g9N1o3:[bhQJb$eW>)WD+UKm;>Lll$^*LP"O3Gg>)eJ.@.;o&l\`l:4uiU%HB>uf/uE^[1Q\0l'$$u#FZ]NrLYonI:?6ndAh!QG:K;[^95Z@84:51^*!fDXo[:SORak<P4,4JAYB+TC9b_jG0&8S^g^lfTD+>`g%L#.)U:n;90VX<E-XXf[,"TZBn-I4m(fblur7ab1U?#BfML8HF;h+3lcPiPHB$TfT%,)Z#/N4i[J+%V2B-ZOlWhl?[.5*YIg0/r/`%U;,59WaNQIm<_tS#PkaG%=eZuKr1dj\G'!P$d1KCSt!Xr='#'haQ5CeV>DqdNh^.@_)hT>fboVrXSQgLU=QLtQQZM4Ul/2@[73?+%4:Z$H&pUD$!/Z2,-&NgcYtp6D037Xnga.N;63;E-Aj5.`!*WSt!WXZP6K^@D&Er;l'>1`;AdAbtaGX'nlB.V';)0NsA^__SC-Cj,%0Cbf[#S?JEafMR]Gpem`0!/$UFBL'q5bWnjm:0<TL/:U[:i80Y?[A(272'?p-f2)g,N?"p6o;n]-T!?/OAQm6.f#8s1$.S/fOJXo%:*`elHk)8s#i=8\730D-_D27L"7$<%FOY!qYWt=KaWs.e<CSY3*=`n,j3NtmG\\)./S%TbNK^(<%0RgH!HG6oi1Z1Id*,*(ZqT\u%VKt+mcaS\hbH(k`n"7>le!L%+ci3k.^\m^'nm<Jgp#W+Oo6:05rlsp3ho@DMp$6OGq3PH;qWT)Nq;&7SptIJ%qJX.Jp>pLJr8g.l%rVF_+J,b9grUQjns8DaH?[qh)YCHK!++F+[lQ?0,+9"&IcU[p)T76X+^]3%Arsc#WOt6~>%AI9_PrivateDataEnd